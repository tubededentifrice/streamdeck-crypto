{
  "version": 3,
  "sources": ["signalr_v8.0.0.min.js", "config.ts", "providers/connection-states.ts", "providers/subscription-key.ts", "providers/provider-interface.ts", "providers/ticker-subscription-manager.ts", "providers/generic-provider.ts", "default-settings.ts", "providers/websocket-connection-pool.ts", "providers/binance-provider.ts", "providers/bitfinex-provider.ts", "providers/yfinance-provider.ts", "providers/provider-registry.ts", "formatters.ts", "../../node_modules/expr-eval/dist/bundle.js", "expression-evaluator.ts", "alert-manager.ts", "ticker-state.ts", "settings-manager.ts", "constants.ts", "connection-status-icons.ts", "canvas-renderer.ts", "ticker.ts", "entries/plugin-entry.ts", "../dev/preview.js"],
  "sourcesContent": ["var t,e;t=self,e=()=>(()=>{var t={d:(e,s)=>{for(var i in s)t.o(s,i)&&!t.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:s[i]})}};t.g=function(){if(\"object\"==typeof globalThis)return globalThis;try{return this||new Function(\"return this\")()}catch(t){if(\"object\"==typeof window)return window}}(),t.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),t.r=t=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"t\",{value:!0})};var e,s={};t.r(s),t.d(s,{AbortError:()=>r,DefaultHttpClient:()=>H,HttpClient:()=>d,HttpError:()=>i,HttpResponse:()=>u,HttpTransportType:()=>F,HubConnection:()=>q,HubConnectionBuilder:()=>tt,HubConnectionState:()=>A,JsonHubProtocol:()=>Y,LogLevel:()=>e,MessageType:()=>x,NullLogger:()=>f,Subject:()=>U,TimeoutError:()=>n,TransferFormat:()=>B,VERSION:()=>p});class i extends Error{constructor(t,e){const s=new.target.prototype;super(`${t}: Status code '${e}'`),this.statusCode=e,this.__proto__=s}}class n extends Error{constructor(t=\"A timeout occurred.\"){const e=new.target.prototype;super(t),this.__proto__=e}}class r extends Error{constructor(t=\"An abort occurred.\"){const e=new.target.prototype;super(t),this.__proto__=e}}class o extends Error{constructor(t,e){const s=new.target.prototype;super(t),this.transport=e,this.errorType=\"UnsupportedTransportError\",this.__proto__=s}}class h extends Error{constructor(t,e){const s=new.target.prototype;super(t),this.transport=e,this.errorType=\"DisabledTransportError\",this.__proto__=s}}class c extends Error{constructor(t,e){const s=new.target.prototype;super(t),this.transport=e,this.errorType=\"FailedToStartTransportError\",this.__proto__=s}}class a extends Error{constructor(t){const e=new.target.prototype;super(t),this.errorType=\"FailedToNegotiateWithServerError\",this.__proto__=e}}class l extends Error{constructor(t,e){const s=new.target.prototype;super(t),this.innerErrors=e,this.__proto__=s}}class u{constructor(t,e,s){this.statusCode=t,this.statusText=e,this.content=s}}class d{get(t,e){return this.send({...e,method:\"GET\",url:t})}post(t,e){return this.send({...e,method:\"POST\",url:t})}delete(t,e){return this.send({...e,method:\"DELETE\",url:t})}getCookieString(t){return\"\"}}!function(t){t[t.Trace=0]=\"Trace\",t[t.Debug=1]=\"Debug\",t[t.Information=2]=\"Information\",t[t.Warning=3]=\"Warning\",t[t.Error=4]=\"Error\",t[t.Critical=5]=\"Critical\",t[t.None=6]=\"None\"}(e||(e={}));class f{constructor(){}log(t,e){}}f.instance=new f;const p=\"8.0.0\";class w{static isRequired(t,e){if(null==t)throw new Error(`The '${e}' argument is required.`)}static isNotEmpty(t,e){if(!t||t.match(/^\\s*$/))throw new Error(`The '${e}' argument should not be empty.`)}static isIn(t,e,s){if(!(t in e))throw new Error(`Unknown ${s} value: ${t}.`)}}class g{static get isBrowser(){return!g.isNode&&\"object\"==typeof window&&\"object\"==typeof window.document}static get isWebWorker(){return!g.isNode&&\"object\"==typeof self&&\"importScripts\"in self}static get isReactNative(){return!g.isNode&&\"object\"==typeof window&&void 0===window.document}static get isNode(){return\"undefined\"!=typeof process&&process.release&&\"node\"===process.release.name}}function m(t,e){let s=\"\";return y(t)?(s=`Binary data of length ${t.byteLength}`,e&&(s+=`. Content: '${function(t){const e=new Uint8Array(t);let s=\"\";return e.forEach((t=>{s+=`0x${t<16?\"0\":\"\"}${t.toString(16)} `})),s.substr(0,s.length-1)}(t)}'`)):\"string\"==typeof t&&(s=`String data of length ${t.length}`,e&&(s+=`. Content: '${t}'`)),s}function y(t){return t&&\"undefined\"!=typeof ArrayBuffer&&(t instanceof ArrayBuffer||t.constructor&&\"ArrayBuffer\"===t.constructor.name)}async function b(t,s,i,n,r,o){const h={},[c,a]=$();h[c]=a,t.log(e.Trace,`(${s} transport) sending data. ${m(r,o.logMessageContent)}.`);const l=y(r)?\"arraybuffer\":\"text\",u=await i.post(n,{content:r,headers:{...h,...o.headers},responseType:l,timeout:o.timeout,withCredentials:o.withCredentials});t.log(e.Trace,`(${s} transport) request complete. Response status: ${u.statusCode}.`)}class v{constructor(t,e){this.i=t,this.h=e}dispose(){const t=this.i.observers.indexOf(this.h);t>-1&&this.i.observers.splice(t,1),0===this.i.observers.length&&this.i.cancelCallback&&this.i.cancelCallback().catch((t=>{}))}}class E{constructor(t){this.l=t,this.out=console}log(t,s){if(t>=this.l){const i=`[${(new Date).toISOString()}] ${e[t]}: ${s}`;switch(t){case e.Critical:case e.Error:this.out.error(i);break;case e.Warning:this.out.warn(i);break;case e.Information:this.out.info(i);break;default:this.out.log(i)}}}}function $(){let t=\"X-SignalR-User-Agent\";return g.isNode&&(t=\"User-Agent\"),[t,C(p,S(),g.isNode?\"NodeJS\":\"Browser\",k())]}function C(t,e,s,i){let n=\"Microsoft SignalR/\";const r=t.split(\".\");return n+=`${r[0]}.${r[1]}`,n+=` (${t}; `,n+=e&&\"\"!==e?`${e}; `:\"Unknown OS; \",n+=`${s}`,n+=i?`; ${i}`:\"; Unknown Runtime Version\",n+=\")\",n}function S(){if(!g.isNode)return\"\";switch(process.platform){case\"win32\":return\"Windows NT\";case\"darwin\":return\"macOS\";case\"linux\":return\"Linux\";default:return process.platform}}function k(){if(g.isNode)return process.versions.node}function P(t){return t.stack?t.stack:t.message?t.message:`${t}`}class T extends d{constructor(e){super(),this.u=e,this.p=fetch.bind(function(){if(\"undefined\"!=typeof globalThis)return globalThis;if(\"undefined\"!=typeof self)return self;if(\"undefined\"!=typeof window)return window;if(void 0!==t.g)return t.g;throw new Error(\"could not find global\")}()),this.m=AbortController,this.m}async send(t){if(t.abortSignal&&t.abortSignal.aborted)throw new r;if(!t.method)throw new Error(\"No method defined.\");if(!t.url)throw new Error(\"No url defined.\");const s=new this.m;let o;t.abortSignal&&(t.abortSignal.onabort=()=>{s.abort(),o=new r});let h,c=null;if(t.timeout){const i=t.timeout;c=setTimeout((()=>{s.abort(),this.u.log(e.Warning,\"Timeout from HTTP request.\"),o=new n}),i)}\"\"===t.content&&(t.content=void 0),t.content&&(t.headers=t.headers||{},y(t.content)?t.headers[\"Content-Type\"]=\"application/octet-stream\":t.headers[\"Content-Type\"]=\"text/plain;charset=UTF-8\");try{h=await this.p(t.url,{body:t.content,cache:\"no-cache\",credentials:!0===t.withCredentials?\"include\":\"same-origin\",headers:{\"X-Requested-With\":\"XMLHttpRequest\",...t.headers},method:t.method,mode:\"cors\",redirect:\"follow\",signal:s.signal})}catch(t){if(o)throw o;throw this.u.log(e.Warning,`Error from HTTP request. ${t}.`),t}finally{c&&clearTimeout(c),t.abortSignal&&(t.abortSignal.onabort=null)}if(!h.ok){const t=await I(h,\"text\");throw new i(t||h.statusText,h.status)}const a=I(h,t.responseType),l=await a;return new u(h.status,h.statusText,l)}getCookieString(t){let e=\"\";return g.isNode&&this.v&&this.v.getCookies(t,((t,s)=>e=s.join(\"; \"))),e}}function I(t,e){let s;switch(e){case\"arraybuffer\":s=t.arrayBuffer();break;case\"text\":default:s=t.text();break;case\"blob\":case\"document\":case\"json\":throw new Error(`${e} is not supported.`)}return s}class _ extends d{constructor(t){super(),this.u=t}send(t){return t.abortSignal&&t.abortSignal.aborted?Promise.reject(new r):t.method?t.url?new Promise(((s,o)=>{const h=new XMLHttpRequest;h.open(t.method,t.url,!0),h.withCredentials=void 0===t.withCredentials||t.withCredentials,h.setRequestHeader(\"X-Requested-With\",\"XMLHttpRequest\"),\"\"===t.content&&(t.content=void 0),t.content&&(y(t.content)?h.setRequestHeader(\"Content-Type\",\"application/octet-stream\"):h.setRequestHeader(\"Content-Type\",\"text/plain;charset=UTF-8\"));const c=t.headers;c&&Object.keys(c).forEach((t=>{h.setRequestHeader(t,c[t])})),t.responseType&&(h.responseType=t.responseType),t.abortSignal&&(t.abortSignal.onabort=()=>{h.abort(),o(new r)}),t.timeout&&(h.timeout=t.timeout),h.onload=()=>{t.abortSignal&&(t.abortSignal.onabort=null),h.status>=200&&h.status<300?s(new u(h.status,h.statusText,h.response||h.responseText)):o(new i(h.response||h.responseText||h.statusText,h.status))},h.onerror=()=>{this.u.log(e.Warning,`Error from HTTP request. ${h.status}: ${h.statusText}.`),o(new i(h.statusText,h.status))},h.ontimeout=()=>{this.u.log(e.Warning,\"Timeout from HTTP request.\"),o(new n)},h.send(t.content)})):Promise.reject(new Error(\"No url defined.\")):Promise.reject(new Error(\"No method defined.\"))}}class H extends d{constructor(t){if(super(),\"undefined\"!=typeof fetch||g.isNode)this.$=new T(t);else{if(\"undefined\"==typeof XMLHttpRequest)throw new Error(\"No usable HttpClient found.\");this.$=new _(t)}}send(t){return t.abortSignal&&t.abortSignal.aborted?Promise.reject(new r):t.method?t.url?this.$.send(t):Promise.reject(new Error(\"No url defined.\")):Promise.reject(new Error(\"No method defined.\"))}getCookieString(t){return this.$.getCookieString(t)}}class D{static write(t){return`${t}${D.RecordSeparator}`}static parse(t){if(t[t.length-1]!==D.RecordSeparator)throw new Error(\"Message is incomplete.\");const e=t.split(D.RecordSeparator);return e.pop(),e}}D.RecordSeparatorCode=30,D.RecordSeparator=String.fromCharCode(D.RecordSeparatorCode);class R{writeHandshakeRequest(t){return D.write(JSON.stringify(t))}parseHandshakeResponse(t){let e,s;if(y(t)){const i=new Uint8Array(t),n=i.indexOf(D.RecordSeparatorCode);if(-1===n)throw new Error(\"Message is incomplete.\");const r=n+1;e=String.fromCharCode.apply(null,Array.prototype.slice.call(i.slice(0,r))),s=i.byteLength>r?i.slice(r).buffer:null}else{const i=t,n=i.indexOf(D.RecordSeparator);if(-1===n)throw new Error(\"Message is incomplete.\");const r=n+1;e=i.substring(0,r),s=i.length>r?i.substring(r):null}const i=D.parse(e),n=JSON.parse(i[0]);if(n.type)throw new Error(\"Expected a handshake response from the server.\");return[s,n]}}var x,A;!function(t){t[t.Invocation=1]=\"Invocation\",t[t.StreamItem=2]=\"StreamItem\",t[t.Completion=3]=\"Completion\",t[t.StreamInvocation=4]=\"StreamInvocation\",t[t.CancelInvocation=5]=\"CancelInvocation\",t[t.Ping=6]=\"Ping\",t[t.Close=7]=\"Close\",t[t.Ack=8]=\"Ack\",t[t.Sequence=9]=\"Sequence\"}(x||(x={}));class U{constructor(){this.observers=[]}next(t){for(const e of this.observers)e.next(t)}error(t){for(const e of this.observers)e.error&&e.error(t)}complete(){for(const t of this.observers)t.complete&&t.complete()}subscribe(t){return this.observers.push(t),new v(this,t)}}class L{constructor(t,e,s){this.C=1e5,this.S=[],this.k=0,this.P=!1,this.T=1,this.I=0,this._=0,this.H=!1,this.D=t,this.R=e,this.C=s}async A(t){const e=this.D.writeMessage(t);let s=Promise.resolve();if(this.U(t)){this.k++;let t=()=>{},i=()=>{};y(e)?this._+=e.byteLength:this._+=e.length,this._>=this.C&&(s=new Promise(((e,s)=>{t=e,i=s}))),this.S.push(new N(e,this.k,t,i))}try{this.H||await this.R.send(e)}catch{this.L()}await s}N(t){let e=-1;for(let s=0;s<this.S.length;s++){const i=this.S[s];if(i.q<=t.sequenceId)e=s,y(i.M)?this._-=i.M.byteLength:this._-=i.M.length,i.j();else{if(!(this._<this.C))break;i.j()}}-1!==e&&(this.S=this.S.slice(e+1))}W(t){if(this.P)return t.type===x.Sequence&&(this.P=!1,!0);if(!this.U(t))return!0;const e=this.T;return this.T++,e<=this.I?(e===this.I&&this.O(),!1):(this.I=e,this.O(),!0)}F(t){t.sequenceId>this.T?this.R.stop(new Error(\"Sequence ID greater than amount of messages we've received.\")):this.T=t.sequenceId}L(){this.H=!0,this.P=!0}async B(){const t=0!==this.S.length?this.S[0].q:this.k+1;await this.R.send(this.D.writeMessage({type:x.Sequence,sequenceId:t}));const e=this.S;for(const t of e)await this.R.send(t.M);this.H=!1}X(t){null!=t||(t=new Error(\"Unable to reconnect to server.\"));for(const e of this.S)e.J(t)}U(t){switch(t.type){case x.Invocation:case x.StreamItem:case x.Completion:case x.StreamInvocation:case x.CancelInvocation:return!0;case x.Close:case x.Sequence:case x.Ping:case x.Ack:return!1}}O(){void 0===this.V&&(this.V=setTimeout((async()=>{try{this.H||await this.R.send(this.D.writeMessage({type:x.Ack,sequenceId:this.I}))}catch{}clearTimeout(this.V),this.V=void 0}),1e3))}}class N{constructor(t,e,s,i){this.M=t,this.q=e,this.j=s,this.J=i}}!function(t){t.Disconnected=\"Disconnected\",t.Connecting=\"Connecting\",t.Connected=\"Connected\",t.Disconnecting=\"Disconnecting\",t.Reconnecting=\"Reconnecting\"}(A||(A={}));class q{static create(t,e,s,i,n,r,o){return new q(t,e,s,i,n,r,o)}constructor(t,s,i,n,r,o,h){this.K=0,this.G=()=>{this.u.log(e.Warning,\"The page is being frozen, this will likely lead to the connection being closed and messages being lost. For more information see the docs at https://learn.microsoft.com/aspnet/core/signalr/javascript-client#bsleep\")},w.isRequired(t,\"connection\"),w.isRequired(s,\"logger\"),w.isRequired(i,\"protocol\"),this.serverTimeoutInMilliseconds=null!=r?r:3e4,this.keepAliveIntervalInMilliseconds=null!=o?o:15e3,this.Y=null!=h?h:1e5,this.u=s,this.D=i,this.connection=t,this.Z=n,this.tt=new R,this.connection.onreceive=t=>this.et(t),this.connection.onclose=t=>this.st(t),this.it={},this.nt={},this.rt=[],this.ot=[],this.ht=[],this.ct=0,this.lt=!1,this.ut=A.Disconnected,this.dt=!1,this.ft=this.D.writeMessage({type:x.Ping})}get state(){return this.ut}get connectionId(){return this.connection&&this.connection.connectionId||null}get baseUrl(){return this.connection.baseUrl||\"\"}set baseUrl(t){if(this.ut!==A.Disconnected&&this.ut!==A.Reconnecting)throw new Error(\"The HubConnection must be in the Disconnected or Reconnecting state to change the url.\");if(!t)throw new Error(\"The HubConnection url must be a valid url.\");this.connection.baseUrl=t}start(){return this.wt=this.gt(),this.wt}async gt(){if(this.ut!==A.Disconnected)return Promise.reject(new Error(\"Cannot start a HubConnection that is not in the 'Disconnected' state.\"));this.ut=A.Connecting,this.u.log(e.Debug,\"Starting HubConnection.\");try{await this.yt(),g.isBrowser&&window.document.addEventListener(\"freeze\",this.G),this.ut=A.Connected,this.dt=!0,this.u.log(e.Debug,\"HubConnection connected successfully.\")}catch(t){return this.ut=A.Disconnected,this.u.log(e.Debug,`HubConnection failed to start successfully because of error '${t}'.`),Promise.reject(t)}}async yt(){this.bt=void 0,this.lt=!1;const t=new Promise(((t,e)=>{this.vt=t,this.Et=e}));await this.connection.start(this.D.transferFormat);try{let s=this.D.version;this.connection.features.reconnect||(s=1);const i={protocol:this.D.name,version:s};if(this.u.log(e.Debug,\"Sending handshake request.\"),await this.$t(this.tt.writeHandshakeRequest(i)),this.u.log(e.Information,`Using HubProtocol '${this.D.name}'.`),this.Ct(),this.St(),this.kt(),await t,this.bt)throw this.bt;!!this.connection.features.reconnect&&(this.Pt=new L(this.D,this.connection,this.Y),this.connection.features.disconnected=this.Pt.L.bind(this.Pt),this.connection.features.resend=()=>{if(this.Pt)return this.Pt.B()}),this.connection.features.inherentKeepAlive||await this.$t(this.ft)}catch(t){throw this.u.log(e.Debug,`Hub handshake failed with error '${t}' during start(). Stopping HubConnection.`),this.Ct(),this.Tt(),await this.connection.stop(t),t}}async stop(){const t=this.wt;this.connection.features.reconnect=!1,this.It=this._t(),await this.It;try{await t}catch(t){}}_t(t){if(this.ut===A.Disconnected)return this.u.log(e.Debug,`Call to HubConnection.stop(${t}) ignored because it is already in the disconnected state.`),Promise.resolve();if(this.ut===A.Disconnecting)return this.u.log(e.Debug,`Call to HttpConnection.stop(${t}) ignored because the connection is already in the disconnecting state.`),this.It;const s=this.ut;return this.ut=A.Disconnecting,this.u.log(e.Debug,\"Stopping HubConnection.\"),this.Ht?(this.u.log(e.Debug,\"Connection stopped during reconnect delay. Done reconnecting.\"),clearTimeout(this.Ht),this.Ht=void 0,this.Dt(),Promise.resolve()):(s===A.Connected&&this.Rt(),this.Ct(),this.Tt(),this.bt=t||new r(\"The connection was stopped before the hub handshake could complete.\"),this.connection.stop(t))}async Rt(){try{await this.xt(this.At())}catch{}}stream(t,...e){const[s,i]=this.Ut(e),n=this.Lt(t,e,i);let r;const o=new U;return o.cancelCallback=()=>{const t=this.Nt(n.invocationId);return delete this.it[n.invocationId],r.then((()=>this.xt(t)))},this.it[n.invocationId]=(t,e)=>{e?o.error(e):t&&(t.type===x.Completion?t.error?o.error(new Error(t.error)):o.complete():o.next(t.item))},r=this.xt(n).catch((t=>{o.error(t),delete this.it[n.invocationId]})),this.qt(s,r),o}$t(t){return this.kt(),this.connection.send(t)}xt(t){return this.Pt?this.Pt.A(t):this.$t(this.D.writeMessage(t))}send(t,...e){const[s,i]=this.Ut(e),n=this.xt(this.Mt(t,e,!0,i));return this.qt(s,n),n}invoke(t,...e){const[s,i]=this.Ut(e),n=this.Mt(t,e,!1,i);return new Promise(((t,e)=>{this.it[n.invocationId]=(s,i)=>{i?e(i):s&&(s.type===x.Completion?s.error?e(new Error(s.error)):t(s.result):e(new Error(`Unexpected message type: ${s.type}`)))};const i=this.xt(n).catch((t=>{e(t),delete this.it[n.invocationId]}));this.qt(s,i)}))}on(t,e){t&&e&&(t=t.toLowerCase(),this.nt[t]||(this.nt[t]=[]),-1===this.nt[t].indexOf(e)&&this.nt[t].push(e))}off(t,e){if(!t)return;t=t.toLowerCase();const s=this.nt[t];if(s)if(e){const i=s.indexOf(e);-1!==i&&(s.splice(i,1),0===s.length&&delete this.nt[t])}else delete this.nt[t]}onclose(t){t&&this.rt.push(t)}onreconnecting(t){t&&this.ot.push(t)}onreconnected(t){t&&this.ht.push(t)}et(t){if(this.Ct(),this.lt||(t=this.jt(t),this.lt=!0),t){const s=this.D.parseMessages(t,this.u);for(const t of s)if(!this.Pt||this.Pt.W(t))switch(t.type){case x.Invocation:this.Wt(t);break;case x.StreamItem:case x.Completion:{const s=this.it[t.invocationId];if(s){t.type===x.Completion&&delete this.it[t.invocationId];try{s(t)}catch(t){this.u.log(e.Error,`Stream callback threw error: ${P(t)}`)}}break}case x.Ping:break;case x.Close:{this.u.log(e.Information,\"Close message received from server.\");const s=t.error?new Error(\"Server returned an error on close: \"+t.error):void 0;!0===t.allowReconnect?this.connection.stop(s):this.It=this._t(s);break}case x.Ack:this.Pt&&this.Pt.N(t);break;case x.Sequence:this.Pt&&this.Pt.F(t);break;default:this.u.log(e.Warning,`Invalid message type: ${t.type}.`)}}this.St()}jt(t){let s,i;try{[i,s]=this.tt.parseHandshakeResponse(t)}catch(t){const s=\"Error parsing handshake response: \"+t;this.u.log(e.Error,s);const i=new Error(s);throw this.Et(i),i}if(s.error){const t=\"Server returned handshake error: \"+s.error;this.u.log(e.Error,t);const i=new Error(t);throw this.Et(i),i}return this.u.log(e.Debug,\"Server handshake complete.\"),this.vt(),i}kt(){this.connection.features.inherentKeepAlive||(this.K=(new Date).getTime()+this.keepAliveIntervalInMilliseconds,this.Tt())}St(){if(!(this.connection.features&&this.connection.features.inherentKeepAlive||(this.Ot=setTimeout((()=>this.serverTimeout()),this.serverTimeoutInMilliseconds),void 0!==this.Ft))){let t=this.K-(new Date).getTime();t<0&&(t=0),this.Ft=setTimeout((async()=>{if(this.ut===A.Connected)try{await this.$t(this.ft)}catch{this.Tt()}}),t)}}serverTimeout(){this.connection.stop(new Error(\"Server timeout elapsed without receiving a message from the server.\"))}async Wt(t){const s=t.target.toLowerCase(),i=this.nt[s];if(!i)return this.u.log(e.Warning,`No client method with the name '${s}' found.`),void(t.invocationId&&(this.u.log(e.Warning,`No result given for '${s}' method and invocation ID '${t.invocationId}'.`),await this.xt(this.Bt(t.invocationId,\"Client didn't provide a result.\",null))));const n=i.slice(),r=!!t.invocationId;let o,h,c;for(const i of n)try{const n=o;o=await i.apply(this,t.arguments),r&&o&&n&&(this.u.log(e.Error,`Multiple results provided for '${s}'. Sending error to server.`),c=this.Bt(t.invocationId,\"Client provided multiple results.\",null)),h=void 0}catch(t){h=t,this.u.log(e.Error,`A callback for the method '${s}' threw error '${t}'.`)}c?await this.xt(c):r?(h?c=this.Bt(t.invocationId,`${h}`,null):void 0!==o?c=this.Bt(t.invocationId,null,o):(this.u.log(e.Warning,`No result given for '${s}' method and invocation ID '${t.invocationId}'.`),c=this.Bt(t.invocationId,\"Client didn't provide a result.\",null)),await this.xt(c)):o&&this.u.log(e.Error,`Result given for '${s}' method but server is not expecting a result.`)}st(t){this.u.log(e.Debug,`HubConnection.connectionClosed(${t}) called while in state ${this.ut}.`),this.bt=this.bt||t||new r(\"The underlying connection was closed before the hub handshake could complete.\"),this.vt&&this.vt(),this.Xt(t||new Error(\"Invocation canceled due to the underlying connection being closed.\")),this.Ct(),this.Tt(),this.ut===A.Disconnecting?this.Dt(t):this.ut===A.Connected&&this.Z?this.Jt(t):this.ut===A.Connected&&this.Dt(t)}Dt(t){if(this.dt){this.ut=A.Disconnected,this.dt=!1,this.Pt&&(this.Pt.X(null!=t?t:new Error(\"Connection closed.\")),this.Pt=void 0),g.isBrowser&&window.document.removeEventListener(\"freeze\",this.G);try{this.rt.forEach((e=>e.apply(this,[t])))}catch(s){this.u.log(e.Error,`An onclose callback called with error '${t}' threw error '${s}'.`)}}}async Jt(t){const s=Date.now();let i=0,n=void 0!==t?t:new Error(\"Attempting to reconnect due to a unknown error.\"),r=this.zt(i++,0,n);if(null===r)return this.u.log(e.Debug,\"Connection not reconnecting because the IRetryPolicy returned null on the first reconnect attempt.\"),void this.Dt(t);if(this.ut=A.Reconnecting,t?this.u.log(e.Information,`Connection reconnecting because of error '${t}'.`):this.u.log(e.Information,\"Connection reconnecting.\"),0!==this.ot.length){try{this.ot.forEach((e=>e.apply(this,[t])))}catch(s){this.u.log(e.Error,`An onreconnecting callback called with error '${t}' threw error '${s}'.`)}if(this.ut!==A.Reconnecting)return void this.u.log(e.Debug,\"Connection left the reconnecting state in onreconnecting callback. Done reconnecting.\")}for(;null!==r;){if(this.u.log(e.Information,`Reconnect attempt number ${i} will start in ${r} ms.`),await new Promise((t=>{this.Ht=setTimeout(t,r)})),this.Ht=void 0,this.ut!==A.Reconnecting)return void this.u.log(e.Debug,\"Connection left the reconnecting state during reconnect delay. Done reconnecting.\");try{if(await this.yt(),this.ut=A.Connected,this.u.log(e.Information,\"HubConnection reconnected successfully.\"),0!==this.ht.length)try{this.ht.forEach((t=>t.apply(this,[this.connection.connectionId])))}catch(t){this.u.log(e.Error,`An onreconnected callback called with connectionId '${this.connection.connectionId}; threw error '${t}'.`)}return}catch(t){if(this.u.log(e.Information,`Reconnect attempt failed because of error '${t}'.`),this.ut!==A.Reconnecting)return this.u.log(e.Debug,`Connection moved to the '${this.ut}' from the reconnecting state during reconnect attempt. Done reconnecting.`),void(this.ut===A.Disconnecting&&this.Dt());n=t instanceof Error?t:new Error(t.toString()),r=this.zt(i++,Date.now()-s,n)}}this.u.log(e.Information,`Reconnect retries have been exhausted after ${Date.now()-s} ms and ${i} failed attempts. Connection disconnecting.`),this.Dt()}zt(t,s,i){try{return this.Z.nextRetryDelayInMilliseconds({elapsedMilliseconds:s,previousRetryCount:t,retryReason:i})}catch(i){return this.u.log(e.Error,`IRetryPolicy.nextRetryDelayInMilliseconds(${t}, ${s}) threw error '${i}'.`),null}}Xt(t){const s=this.it;this.it={},Object.keys(s).forEach((i=>{const n=s[i];try{n(null,t)}catch(s){this.u.log(e.Error,`Stream 'error' callback called with '${t}' threw error: ${P(s)}`)}}))}Tt(){this.Ft&&(clearTimeout(this.Ft),this.Ft=void 0)}Ct(){this.Ot&&clearTimeout(this.Ot)}Mt(t,e,s,i){if(s)return 0!==i.length?{arguments:e,streamIds:i,target:t,type:x.Invocation}:{arguments:e,target:t,type:x.Invocation};{const s=this.ct;return this.ct++,0!==i.length?{arguments:e,invocationId:s.toString(),streamIds:i,target:t,type:x.Invocation}:{arguments:e,invocationId:s.toString(),target:t,type:x.Invocation}}}qt(t,e){if(0!==t.length){e||(e=Promise.resolve());for(const s in t)t[s].subscribe({complete:()=>{e=e.then((()=>this.xt(this.Bt(s))))},error:t=>{let i;i=t instanceof Error?t.message:t&&t.toString?t.toString():\"Unknown error\",e=e.then((()=>this.xt(this.Bt(s,i))))},next:t=>{e=e.then((()=>this.xt(this.Vt(s,t))))}})}}Ut(t){const e=[],s=[];for(let i=0;i<t.length;i++){const n=t[i];if(this.Kt(n)){const r=this.ct;this.ct++,e[r]=n,s.push(r.toString()),t.splice(i,1)}}return[e,s]}Kt(t){return t&&t.subscribe&&\"function\"==typeof t.subscribe}Lt(t,e,s){const i=this.ct;return this.ct++,0!==s.length?{arguments:e,invocationId:i.toString(),streamIds:s,target:t,type:x.StreamInvocation}:{arguments:e,invocationId:i.toString(),target:t,type:x.StreamInvocation}}Nt(t){return{invocationId:t,type:x.CancelInvocation}}Vt(t,e){return{invocationId:t,item:e,type:x.StreamItem}}Bt(t,e,s){return e?{error:e,invocationId:t,type:x.Completion}:{invocationId:t,result:s,type:x.Completion}}At(){return{type:x.Close}}}const M=[0,2e3,1e4,3e4,null];class j{constructor(t){this.Gt=void 0!==t?[...t,null]:M}nextRetryDelayInMilliseconds(t){return this.Gt[t.previousRetryCount]}}class W{}W.Authorization=\"Authorization\",W.Cookie=\"Cookie\";class O extends d{constructor(t,e){super(),this.Qt=t,this.Yt=e}async send(t){let e=!0;this.Yt&&(!this.Zt||t.url&&t.url.indexOf(\"/negotiate?\")>0)&&(e=!1,this.Zt=await this.Yt()),this.te(t);const s=await this.Qt.send(t);return e&&401===s.statusCode&&this.Yt?(this.Zt=await this.Yt(),this.te(t),await this.Qt.send(t)):s}te(t){t.headers||(t.headers={}),this.Zt?t.headers[W.Authorization]=`Bearer ${this.Zt}`:this.Yt&&t.headers[W.Authorization]&&delete t.headers[W.Authorization]}getCookieString(t){return this.Qt.getCookieString(t)}}var F,B;!function(t){t[t.None=0]=\"None\",t[t.WebSockets=1]=\"WebSockets\",t[t.ServerSentEvents=2]=\"ServerSentEvents\",t[t.LongPolling=4]=\"LongPolling\"}(F||(F={})),function(t){t[t.Text=1]=\"Text\",t[t.Binary=2]=\"Binary\"}(B||(B={}));class X{constructor(){this.ee=!1,this.onabort=null}abort(){this.ee||(this.ee=!0,this.onabort&&this.onabort())}get signal(){return this}get aborted(){return this.ee}}class J{get pollAborted(){return this.se.aborted}constructor(t,e,s){this.$=t,this.u=e,this.se=new X,this.ie=s,this.ne=!1,this.onreceive=null,this.onclose=null}async connect(t,s){if(w.isRequired(t,\"url\"),w.isRequired(s,\"transferFormat\"),w.isIn(s,B,\"transferFormat\"),this.re=t,this.u.log(e.Trace,\"(LongPolling transport) Connecting.\"),s===B.Binary&&\"undefined\"!=typeof XMLHttpRequest&&\"string\"!=typeof(new XMLHttpRequest).responseType)throw new Error(\"Binary protocols over XmlHttpRequest not implementing advanced features are not supported.\");const[n,r]=$(),o={[n]:r,...this.ie.headers},h={abortSignal:this.se.signal,headers:o,timeout:1e5,withCredentials:this.ie.withCredentials};s===B.Binary&&(h.responseType=\"arraybuffer\");const c=`${t}&_=${Date.now()}`;this.u.log(e.Trace,`(LongPolling transport) polling: ${c}.`);const a=await this.$.get(c,h);200!==a.statusCode?(this.u.log(e.Error,`(LongPolling transport) Unexpected response code: ${a.statusCode}.`),this.oe=new i(a.statusText||\"\",a.statusCode),this.ne=!1):this.ne=!0,this.he=this.ce(this.re,h)}async ce(t,s){try{for(;this.ne;)try{const n=`${t}&_=${Date.now()}`;this.u.log(e.Trace,`(LongPolling transport) polling: ${n}.`);const r=await this.$.get(n,s);204===r.statusCode?(this.u.log(e.Information,\"(LongPolling transport) Poll terminated by server.\"),this.ne=!1):200!==r.statusCode?(this.u.log(e.Error,`(LongPolling transport) Unexpected response code: ${r.statusCode}.`),this.oe=new i(r.statusText||\"\",r.statusCode),this.ne=!1):r.content?(this.u.log(e.Trace,`(LongPolling transport) data received. ${m(r.content,this.ie.logMessageContent)}.`),this.onreceive&&this.onreceive(r.content)):this.u.log(e.Trace,\"(LongPolling transport) Poll timed out, reissuing.\")}catch(t){this.ne?t instanceof n?this.u.log(e.Trace,\"(LongPolling transport) Poll timed out, reissuing.\"):(this.oe=t,this.ne=!1):this.u.log(e.Trace,`(LongPolling transport) Poll errored after shutdown: ${t.message}`)}}finally{this.u.log(e.Trace,\"(LongPolling transport) Polling complete.\"),this.pollAborted||this.ae()}}async send(t){return this.ne?b(this.u,\"LongPolling\",this.$,this.re,t,this.ie):Promise.reject(new Error(\"Cannot send until the transport is connected\"))}async stop(){this.u.log(e.Trace,\"(LongPolling transport) Stopping polling.\"),this.ne=!1,this.se.abort();try{await this.he,this.u.log(e.Trace,`(LongPolling transport) sending DELETE request to ${this.re}.`);const t={},[s,n]=$();t[s]=n;const r={headers:{...t,...this.ie.headers},timeout:this.ie.timeout,withCredentials:this.ie.withCredentials};let o;try{await this.$.delete(this.re,r)}catch(t){o=t}o?o instanceof i&&(404===o.statusCode?this.u.log(e.Trace,\"(LongPolling transport) A 404 response was returned from sending a DELETE request.\"):this.u.log(e.Trace,`(LongPolling transport) Error sending a DELETE request: ${o}`)):this.u.log(e.Trace,\"(LongPolling transport) DELETE request accepted.\")}finally{this.u.log(e.Trace,\"(LongPolling transport) Stop finished.\"),this.ae()}}ae(){if(this.onclose){let t=\"(LongPolling transport) Firing onclose event.\";this.oe&&(t+=\" Error: \"+this.oe),this.u.log(e.Trace,t),this.onclose(this.oe)}}}class z{constructor(t,e,s,i){this.$=t,this.Zt=e,this.u=s,this.ie=i,this.onreceive=null,this.onclose=null}async connect(t,s){return w.isRequired(t,\"url\"),w.isRequired(s,\"transferFormat\"),w.isIn(s,B,\"transferFormat\"),this.u.log(e.Trace,\"(SSE transport) Connecting.\"),this.re=t,this.Zt&&(t+=(t.indexOf(\"?\")<0?\"?\":\"&\")+`access_token=${encodeURIComponent(this.Zt)}`),new Promise(((i,n)=>{let r,o=!1;if(s===B.Text){if(g.isBrowser||g.isWebWorker)r=new this.ie.EventSource(t,{withCredentials:this.ie.withCredentials});else{const e=this.$.getCookieString(t),s={};s.Cookie=e;const[i,n]=$();s[i]=n,r=new this.ie.EventSource(t,{withCredentials:this.ie.withCredentials,headers:{...s,...this.ie.headers}})}try{r.onmessage=t=>{if(this.onreceive)try{this.u.log(e.Trace,`(SSE transport) data received. ${m(t.data,this.ie.logMessageContent)}.`),this.onreceive(t.data)}catch(t){return void this.le(t)}},r.onerror=t=>{o?this.le():n(new Error(\"EventSource failed to connect. The connection could not be found on the server, either the connection ID is not present on the server, or a proxy is refusing/buffering the connection. If you have multiple servers check that sticky sessions are enabled.\"))},r.onopen=()=>{this.u.log(e.Information,`SSE connected to ${this.re}`),this.ue=r,o=!0,i()}}catch(t){return void n(t)}}else n(new Error(\"The Server-Sent Events transport only supports the 'Text' transfer format\"))}))}async send(t){return this.ue?b(this.u,\"SSE\",this.$,this.re,t,this.ie):Promise.reject(new Error(\"Cannot send until the transport is connected\"))}stop(){return this.le(),Promise.resolve()}le(t){this.ue&&(this.ue.close(),this.ue=void 0,this.onclose&&this.onclose(t))}}class V{constructor(t,e,s,i,n,r){this.u=s,this.Yt=e,this.de=i,this.fe=n,this.$=t,this.onreceive=null,this.onclose=null,this.pe=r}async connect(t,s){let i;return w.isRequired(t,\"url\"),w.isRequired(s,\"transferFormat\"),w.isIn(s,B,\"transferFormat\"),this.u.log(e.Trace,\"(WebSockets transport) Connecting.\"),this.Yt&&(i=await this.Yt()),new Promise(((n,r)=>{let o;t=t.replace(/^http/,\"ws\");const h=this.$.getCookieString(t);let c=!1;if(g.isNode||g.isReactNative){const e={},[s,n]=$();e[s]=n,i&&(e[W.Authorization]=`Bearer ${i}`),h&&(e[W.Cookie]=h),o=new this.fe(t,void 0,{headers:{...e,...this.pe}})}else i&&(t+=(t.indexOf(\"?\")<0?\"?\":\"&\")+`access_token=${encodeURIComponent(i)}`);o||(o=new this.fe(t)),s===B.Binary&&(o.binaryType=\"arraybuffer\"),o.onopen=s=>{this.u.log(e.Information,`WebSocket connected to ${t}.`),this.we=o,c=!0,n()},o.onerror=t=>{let s=null;s=\"undefined\"!=typeof ErrorEvent&&t instanceof ErrorEvent?t.error:\"There was an error with the transport\",this.u.log(e.Information,`(WebSockets transport) ${s}.`)},o.onmessage=t=>{if(this.u.log(e.Trace,`(WebSockets transport) data received. ${m(t.data,this.de)}.`),this.onreceive)try{this.onreceive(t.data)}catch(t){return void this.le(t)}},o.onclose=t=>{if(c)this.le(t);else{let e=null;e=\"undefined\"!=typeof ErrorEvent&&t instanceof ErrorEvent?t.error:\"WebSocket failed to connect. The connection could not be found on the server, either the endpoint may not be a SignalR endpoint, the connection ID is not present on the server, or there is a proxy blocking WebSockets. If you have multiple servers check that sticky sessions are enabled.\",r(new Error(e))}}}))}send(t){return this.we&&this.we.readyState===this.fe.OPEN?(this.u.log(e.Trace,`(WebSockets transport) sending data. ${m(t,this.de)}.`),this.we.send(t),Promise.resolve()):Promise.reject(\"WebSocket is not in the OPEN state\")}stop(){return this.we&&this.le(void 0),Promise.resolve()}le(t){this.we&&(this.we.onclose=()=>{},this.we.onmessage=()=>{},this.we.onerror=()=>{},this.we.close(),this.we=void 0),this.u.log(e.Trace,\"(WebSockets transport) socket closed.\"),this.onclose&&(!this.ge(t)||!1!==t.wasClean&&1e3===t.code?t instanceof Error?this.onclose(t):this.onclose():this.onclose(new Error(`WebSocket closed with status code: ${t.code} (${t.reason||\"no reason given\"}).`)))}ge(t){return t&&\"boolean\"==typeof t.wasClean&&\"number\"==typeof t.code}}class K{constructor(t,s={}){var i;if(this.me=()=>{},this.features={},this.ye=1,w.isRequired(t,\"url\"),this.u=void 0===(i=s.logger)?new E(e.Information):null===i?f.instance:void 0!==i.log?i:new E(i),this.baseUrl=this.be(t),(s=s||{}).logMessageContent=void 0!==s.logMessageContent&&s.logMessageContent,\"boolean\"!=typeof s.withCredentials&&void 0!==s.withCredentials)throw new Error(\"withCredentials option was not a 'boolean' or 'undefined' value\");s.withCredentials=void 0===s.withCredentials||s.withCredentials,s.timeout=void 0===s.timeout?1e5:s.timeout;let n=null,r=null;g.isNode&&(n=function(){throw new Error(\"Trying to import 'ws' in the browser.\")}(),r=function(){throw new Error(\"Trying to import 'eventsource' in the browser.\")}()),g.isNode||\"undefined\"==typeof WebSocket||s.WebSocket?g.isNode&&!s.WebSocket&&n&&(s.WebSocket=n):s.WebSocket=WebSocket,g.isNode||\"undefined\"==typeof EventSource||s.EventSource?g.isNode&&!s.EventSource&&void 0!==r&&(s.EventSource=r):s.EventSource=EventSource,this.$=new O(s.httpClient||new H(this.u),s.accessTokenFactory),this.ut=\"Disconnected\",this.dt=!1,this.ie=s,this.onreceive=null,this.onclose=null}async start(t){if(t=t||B.Binary,w.isIn(t,B,\"transferFormat\"),this.u.log(e.Debug,`Starting connection with transfer format '${B[t]}'.`),\"Disconnected\"!==this.ut)return Promise.reject(new Error(\"Cannot start an HttpConnection that is not in the 'Disconnected' state.\"));if(this.ut=\"Connecting\",this.ve=this.yt(t),await this.ve,\"Disconnecting\"===this.ut){const t=\"Failed to start the HttpConnection before stop() was called.\";return this.u.log(e.Error,t),await this.It,Promise.reject(new r(t))}if(\"Connected\"!==this.ut){const t=\"HttpConnection.startInternal completed gracefully but didn't enter the connection into the connected state!\";return this.u.log(e.Error,t),Promise.reject(new r(t))}this.dt=!0}send(t){return\"Connected\"!==this.ut?Promise.reject(new Error(\"Cannot send data if the connection is not in the 'Connected' State.\")):(this.Ee||(this.Ee=new G(this.transport)),this.Ee.send(t))}async stop(t){return\"Disconnected\"===this.ut?(this.u.log(e.Debug,`Call to HttpConnection.stop(${t}) ignored because the connection is already in the disconnected state.`),Promise.resolve()):\"Disconnecting\"===this.ut?(this.u.log(e.Debug,`Call to HttpConnection.stop(${t}) ignored because the connection is already in the disconnecting state.`),this.It):(this.ut=\"Disconnecting\",this.It=new Promise((t=>{this.me=t})),await this._t(t),void await this.It)}async _t(t){this.$e=t;try{await this.ve}catch(t){}if(this.transport){try{await this.transport.stop()}catch(t){this.u.log(e.Error,`HttpConnection.transport.stop() threw error '${t}'.`),this.Ce()}this.transport=void 0}else this.u.log(e.Debug,\"HttpConnection.transport is undefined in HttpConnection.stop() because start() failed.\")}async yt(t){let s=this.baseUrl;this.Yt=this.ie.accessTokenFactory,this.$.Yt=this.Yt;try{if(this.ie.skipNegotiation){if(this.ie.transport!==F.WebSockets)throw new Error(\"Negotiation can only be skipped when using the WebSocket transport directly.\");this.transport=this.Se(F.WebSockets),await this.ke(s,t)}else{let e=null,i=0;do{if(e=await this.Pe(s),\"Disconnecting\"===this.ut||\"Disconnected\"===this.ut)throw new r(\"The connection was stopped during negotiation.\");if(e.error)throw new Error(e.error);if(e.ProtocolVersion)throw new Error(\"Detected a connection attempt to an ASP.NET SignalR Server. This client only supports connecting to an ASP.NET Core SignalR Server. See https://aka.ms/signalr-core-differences for details.\");if(e.url&&(s=e.url),e.accessToken){const t=e.accessToken;this.Yt=()=>t,this.$.Zt=t,this.$.Yt=void 0}i++}while(e.url&&i<100);if(100===i&&e.url)throw new Error(\"Negotiate redirection limit exceeded.\");await this.Te(s,this.ie.transport,e,t)}this.transport instanceof J&&(this.features.inherentKeepAlive=!0),\"Connecting\"===this.ut&&(this.u.log(e.Debug,\"The HttpConnection connected successfully.\"),this.ut=\"Connected\")}catch(t){return this.u.log(e.Error,\"Failed to start the connection: \"+t),this.ut=\"Disconnected\",this.transport=void 0,this.me(),Promise.reject(t)}}async Pe(t){const s={},[n,r]=$();s[n]=r;const o=this.Ie(t);this.u.log(e.Debug,`Sending negotiation request: ${o}.`);try{const t=await this.$.post(o,{content:\"\",headers:{...s,...this.ie.headers},timeout:this.ie.timeout,withCredentials:this.ie.withCredentials});if(200!==t.statusCode)return Promise.reject(new Error(`Unexpected status code returned from negotiate '${t.statusCode}'`));const e=JSON.parse(t.content);return(!e.negotiateVersion||e.negotiateVersion<1)&&(e.connectionToken=e.connectionId),e.useStatefulReconnect&&!0!==this.ie._e?Promise.reject(new a(\"Client didn't negotiate Stateful Reconnect but the server did.\")):e}catch(t){let s=\"Failed to complete negotiation with the server: \"+t;return t instanceof i&&404===t.statusCode&&(s+=\" Either this is not a SignalR endpoint or there is a proxy blocking the connection.\"),this.u.log(e.Error,s),Promise.reject(new a(s))}}He(t,e){return e?t+(-1===t.indexOf(\"?\")?\"?\":\"&\")+`id=${e}`:t}async Te(t,s,i,n){let o=this.He(t,i.connectionToken);if(this.De(s))return this.u.log(e.Debug,\"Connection was provided an instance of ITransport, using that directly.\"),this.transport=s,await this.ke(o,n),void(this.connectionId=i.connectionId);const h=[],a=i.availableTransports||[];let u=i;for(const i of a){const a=this.Re(i,s,n,!0===(null==u?void 0:u.useStatefulReconnect));if(a instanceof Error)h.push(`${i.transport} failed:`),h.push(a);else if(this.De(a)){if(this.transport=a,!u){try{u=await this.Pe(t)}catch(t){return Promise.reject(t)}o=this.He(t,u.connectionToken)}try{return await this.ke(o,n),void(this.connectionId=u.connectionId)}catch(t){if(this.u.log(e.Error,`Failed to start the transport '${i.transport}': ${t}`),u=void 0,h.push(new c(`${i.transport} failed: ${t}`,F[i.transport])),\"Connecting\"!==this.ut){const t=\"Failed to select transport before stop() was called.\";return this.u.log(e.Debug,t),Promise.reject(new r(t))}}}}return h.length>0?Promise.reject(new l(`Unable to connect to the server with any of the available transports. ${h.join(\" \")}`,h)):Promise.reject(new Error(\"None of the transports supported by the client are supported by the server.\"))}Se(t){switch(t){case F.WebSockets:if(!this.ie.WebSocket)throw new Error(\"'WebSocket' is not supported in your environment.\");return new V(this.$,this.Yt,this.u,this.ie.logMessageContent,this.ie.WebSocket,this.ie.headers||{});case F.ServerSentEvents:if(!this.ie.EventSource)throw new Error(\"'EventSource' is not supported in your environment.\");return new z(this.$,this.$.Zt,this.u,this.ie);case F.LongPolling:return new J(this.$,this.u,this.ie);default:throw new Error(`Unknown transport: ${t}.`)}}ke(t,e){return this.transport.onreceive=this.onreceive,this.features.reconnect?this.transport.onclose=async s=>{let i=!1;if(this.features.reconnect){try{this.features.disconnected(),await this.transport.connect(t,e),await this.features.resend()}catch{i=!0}i&&this.Ce(s)}else this.Ce(s)}:this.transport.onclose=t=>this.Ce(t),this.transport.connect(t,e)}Re(t,s,i,n){const r=F[t.transport];if(null==r)return this.u.log(e.Debug,`Skipping transport '${t.transport}' because it is not supported by this client.`),new Error(`Skipping transport '${t.transport}' because it is not supported by this client.`);if(!function(t,e){return!t||0!=(e&t)}(s,r))return this.u.log(e.Debug,`Skipping transport '${F[r]}' because it was disabled by the client.`),new h(`'${F[r]}' is disabled by the client.`,r);if(!(t.transferFormats.map((t=>B[t])).indexOf(i)>=0))return this.u.log(e.Debug,`Skipping transport '${F[r]}' because it does not support the requested transfer format '${B[i]}'.`),new Error(`'${F[r]}' does not support ${B[i]}.`);if(r===F.WebSockets&&!this.ie.WebSocket||r===F.ServerSentEvents&&!this.ie.EventSource)return this.u.log(e.Debug,`Skipping transport '${F[r]}' because it is not supported in your environment.'`),new o(`'${F[r]}' is not supported in your environment.`,r);this.u.log(e.Debug,`Selecting transport '${F[r]}'.`);try{return this.features.reconnect=r===F.WebSockets?n:void 0,this.Se(r)}catch(t){return t}}De(t){return t&&\"object\"==typeof t&&\"connect\"in t}Ce(t){if(this.u.log(e.Debug,`HttpConnection.stopConnection(${t}) called while in state ${this.ut}.`),this.transport=void 0,t=this.$e||t,this.$e=void 0,\"Disconnected\"!==this.ut){if(\"Connecting\"===this.ut)throw this.u.log(e.Warning,`Call to HttpConnection.stopConnection(${t}) was ignored because the connection is still in the connecting state.`),new Error(`HttpConnection.stopConnection(${t}) was called while the connection is still in the connecting state.`);if(\"Disconnecting\"===this.ut&&this.me(),t?this.u.log(e.Error,`Connection disconnected with error '${t}'.`):this.u.log(e.Information,\"Connection disconnected.\"),this.Ee&&(this.Ee.stop().catch((t=>{this.u.log(e.Error,`TransportSendQueue.stop() threw error '${t}'.`)})),this.Ee=void 0),this.connectionId=void 0,this.ut=\"Disconnected\",this.dt){this.dt=!1;try{this.onclose&&this.onclose(t)}catch(s){this.u.log(e.Error,`HttpConnection.onclose(${t}) threw error '${s}'.`)}}}else this.u.log(e.Debug,`Call to HttpConnection.stopConnection(${t}) was ignored because the connection is already in the disconnected state.`)}be(t){if(0===t.lastIndexOf(\"https://\",0)||0===t.lastIndexOf(\"http://\",0))return t;if(!g.isBrowser)throw new Error(`Cannot resolve '${t}'.`);const s=window.document.createElement(\"a\");return s.href=t,this.u.log(e.Information,`Normalizing '${t}' to '${s.href}'.`),s.href}Ie(t){const e=new URL(t);e.pathname.endsWith(\"/\")?e.pathname+=\"negotiate\":e.pathname+=\"/negotiate\";const s=new URLSearchParams(e.searchParams);return s.has(\"negotiateVersion\")||s.append(\"negotiateVersion\",this.ye.toString()),s.has(\"useStatefulReconnect\")?\"true\"===s.get(\"useStatefulReconnect\")&&(this.ie._e=!0):!0===this.ie._e&&s.append(\"useStatefulReconnect\",\"true\"),e.search=s.toString(),e.toString()}}class G{constructor(t){this.xe=t,this.Ae=[],this.Ue=!0,this.Le=new Q,this.Ne=new Q,this.qe=this.Me()}send(t){return this.je(t),this.Ne||(this.Ne=new Q),this.Ne.promise}stop(){return this.Ue=!1,this.Le.resolve(),this.qe}je(t){if(this.Ae.length&&typeof this.Ae[0]!=typeof t)throw new Error(`Expected data to be of type ${typeof this.Ae} but was of type ${typeof t}`);this.Ae.push(t),this.Le.resolve()}async Me(){for(;;){if(await this.Le.promise,!this.Ue){this.Ne&&this.Ne.reject(\"Connection stopped.\");break}this.Le=new Q;const t=this.Ne;this.Ne=void 0;const e=\"string\"==typeof this.Ae[0]?this.Ae.join(\"\"):G.We(this.Ae);this.Ae.length=0;try{await this.xe.send(e),t.resolve()}catch(e){t.reject(e)}}}static We(t){const e=t.map((t=>t.byteLength)).reduce(((t,e)=>t+e)),s=new Uint8Array(e);let i=0;for(const e of t)s.set(new Uint8Array(e),i),i+=e.byteLength;return s.buffer}}class Q{constructor(){this.promise=new Promise(((t,e)=>[this.j,this.Oe]=[t,e]))}resolve(){this.j()}reject(t){this.Oe(t)}}class Y{constructor(){this.name=\"json\",this.version=2,this.transferFormat=B.Text}parseMessages(t,s){if(\"string\"!=typeof t)throw new Error(\"Invalid input for JSON hub protocol. Expected a string.\");if(!t)return[];null===s&&(s=f.instance);const i=D.parse(t),n=[];for(const t of i){const i=JSON.parse(t);if(\"number\"!=typeof i.type)throw new Error(\"Invalid payload.\");switch(i.type){case x.Invocation:this.U(i);break;case x.StreamItem:this.Fe(i);break;case x.Completion:this.Be(i);break;case x.Ping:case x.Close:break;case x.Ack:this.Xe(i);break;case x.Sequence:this.Je(i);break;default:s.log(e.Information,\"Unknown message type '\"+i.type+\"' ignored.\");continue}n.push(i)}return n}writeMessage(t){return D.write(JSON.stringify(t))}U(t){this.ze(t.target,\"Invalid payload for Invocation message.\"),void 0!==t.invocationId&&this.ze(t.invocationId,\"Invalid payload for Invocation message.\")}Fe(t){if(this.ze(t.invocationId,\"Invalid payload for StreamItem message.\"),void 0===t.item)throw new Error(\"Invalid payload for StreamItem message.\")}Be(t){if(t.result&&t.error)throw new Error(\"Invalid payload for Completion message.\");!t.result&&t.error&&this.ze(t.error,\"Invalid payload for Completion message.\"),this.ze(t.invocationId,\"Invalid payload for Completion message.\")}Xe(t){if(\"number\"!=typeof t.sequenceId)throw new Error(\"Invalid SequenceId for Ack message.\")}Je(t){if(\"number\"!=typeof t.sequenceId)throw new Error(\"Invalid SequenceId for Sequence message.\")}ze(t,e){if(\"string\"!=typeof t||\"\"===t)throw new Error(e)}}const Z={trace:e.Trace,debug:e.Debug,info:e.Information,information:e.Information,warn:e.Warning,warning:e.Warning,error:e.Error,critical:e.Critical,none:e.None};class tt{configureLogging(t){if(w.isRequired(t,\"logging\"),void 0!==t.log)this.logger=t;else if(\"string\"==typeof t){const e=function(t){const e=Z[t.toLowerCase()];if(void 0!==e)return e;throw new Error(`Unknown log level: ${t}`)}(t);this.logger=new E(e)}else this.logger=new E(t);return this}withUrl(t,e){return w.isRequired(t,\"url\"),w.isNotEmpty(t,\"url\"),this.url=t,this.httpConnectionOptions=\"object\"==typeof e?{...this.httpConnectionOptions,...e}:{...this.httpConnectionOptions,transport:e},this}withHubProtocol(t){return w.isRequired(t,\"protocol\"),this.protocol=t,this}withAutomaticReconnect(t){if(this.reconnectPolicy)throw new Error(\"A reconnectPolicy has already been set.\");return t?Array.isArray(t)?this.reconnectPolicy=new j(t):this.reconnectPolicy=t:this.reconnectPolicy=new j,this}withServerTimeout(t){return w.isRequired(t,\"milliseconds\"),this.Ve=t,this}withKeepAliveInterval(t){return w.isRequired(t,\"milliseconds\"),this.Ke=t,this}withStatefulReconnect(t){return void 0===this.httpConnectionOptions&&(this.httpConnectionOptions={}),this.httpConnectionOptions._e=!0,this.Y=null==t?void 0:t.bufferSize,this}build(){const t=this.httpConnectionOptions||{};if(void 0===t.logger&&(t.logger=this.logger),!this.url)throw new Error(\"The 'HubConnectionBuilder.withUrl' method must be called before building the connection.\");const e=new K(this.url,t);return q.create(e,this.logger||f.instance,this.protocol||new Y,this.reconnectPolicy,this.Ve,this.Ke,this.Y)}}return Uint8Array.prototype.indexOf||Object.defineProperty(Uint8Array.prototype,\"indexOf\",{value:Array.prototype.indexOf,writable:!0}),Uint8Array.prototype.slice||Object.defineProperty(Uint8Array.prototype,\"slice\",{value:function(t,e){return new Uint8Array(Array.prototype.slice.call(this,t,e))},writable:!0}),Uint8Array.prototype.forEach||Object.defineProperty(Uint8Array.prototype,\"forEach\",{value:Array.prototype.forEach,writable:!0}),s})(),\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define([],e):\"object\"==typeof exports?exports.signalR=e():t.signalR=e();\n//# sourceMappingURL=signalr.min.js.map", "(function (root: Record<string, unknown>, factory: () => CryptoTickerRuntimeConfig) {\n    if (typeof module === \"object\" && module.exports) {\n        module.exports = factory();\n    } else {\n        const config = factory();\n        root.CryptoTickerConfig = Object.assign({}, root.CryptoTickerConfig || {}, config);\n    }\n}(typeof self !== \"undefined\" ? (self as unknown as Record<string, unknown>) : (this as unknown as Record<string, unknown>), function buildConfig(): CryptoTickerRuntimeConfig {\n    return {\n        tProxyBase: \"https://tproxyv8.opendle.com\",\n        fallbackPollIntervalMs: 60_000,\n        staleTickerTimeoutMs: 5 * 60 * 1000,\n        binanceRestBaseUrl: \"https://api.binance.com\",\n        binanceWsBaseUrl: \"wss://stream.binance.com:9443/ws\",\n        binanceSymbolOverrides: {},\n        bitfinexRestBaseUrl: \"https://api-pub.bitfinex.com\",\n        bitfinexWsBaseUrl: \"wss://api-pub.bitfinex.com/ws/2\",\n        bitfinexSymbolOverrides: {},\n        messages: {\n            loading: \"LOADING...\",\n            stale: \"STALE\",\n            noData: \"NO DATA\",\n            misconfigured: \"INVALID PAIR\",\n            conversionError: \"CONVERT ERROR\"\n        }\n    };\n}));\n\ninterface CryptoTickerRuntimeConfig {\n    tProxyBase: string;\n    fallbackPollIntervalMs: number;\n    staleTickerTimeoutMs: number;\n    binanceRestBaseUrl: string;\n    binanceWsBaseUrl: string;\n    binanceSymbolOverrides: Record<string, string>;\n    bitfinexRestBaseUrl: string;\n    bitfinexWsBaseUrl: string;\n    bitfinexSymbolOverrides: Record<string, string>;\n    messages: CryptoTickerMessageConfig;\n}\n", "// Export as const object for runtime compatibility with existing code\nconst ConnectionStates = {\n    LIVE: \"live\" as const,\n    DETACHED: \"detached\" as const,\n    BACKUP: \"backup\" as const,\n    BROKEN: \"broken\" as const\n} as const;\n\n// UMD module pattern for browser/CommonJS compatibility\n(function (root: Record<string, unknown> | undefined, factory: () => typeof ConnectionStates) {\n    const globalRoot = (typeof globalThis !== \"undefined\" ? globalThis : root) as ConnectionStatesGlobal | undefined;\n    const exportsValue = factory();\n\n    if (typeof module === \"object\" && module.exports) {\n        module.exports = exportsValue;\n    }\n\n    if (globalRoot) {\n        globalRoot.CryptoTickerConnectionStates = exportsValue;\n    }\n}(typeof self !== \"undefined\" ? (self as unknown as Record<string, unknown>) : (this as unknown as Record<string, unknown>), function buildConnectionStates(): typeof ConnectionStates {\n    return ConnectionStates;\n}));\n\ninterface ConnectionStatesGlobal extends Record<string, unknown> {\n    CryptoTickerConnectionStates?: typeof ConnectionStates;\n}\n", "(function (root: Record<string, unknown> | undefined, factory: () => SubscriptionKeyExports) {\n    const globalRoot = (typeof globalThis !== \"undefined\" ? globalThis : root) as SubscriptionKeyGlobalRoot | undefined;\n    const exportsValue = factory();\n\n    if (typeof module === \"object\" && module.exports) {\n        module.exports = exportsValue;\n    }\n\n    if (globalRoot) {\n        globalRoot.CryptoTickerProviders = globalRoot.CryptoTickerProviders || {};\n        globalRoot.CryptoTickerProviders.buildSubscriptionKey = exportsValue.buildSubscriptionKey;\n    }\n}(typeof self !== \"undefined\" ? (self as unknown as Record<string, unknown>) : (this as unknown as Record<string, unknown>), function buildSubscriptionKeyModule(): SubscriptionKeyExports {\n    function buildSubscriptionKey(\n        exchange: string | null | undefined,\n        symbol: string | null | undefined,\n        fromCurrency: string | null | undefined,\n        toCurrency: string | null | undefined\n    ): string {\n        const exchangePart = exchange || \"\";\n        const symbolPart = symbol || \"\";\n        const fromPart = fromCurrency || null;\n        const toPart = toCurrency || null;\n        let convertPart = \"\";\n        if (fromPart !== null && toPart !== null && fromPart !== toPart) {\n            convertPart = \"__\" + fromPart + \"_\" + toPart;\n        }\n        return exchangePart + \"__\" + symbolPart + convertPart;\n    }\n\n    return {\n        buildSubscriptionKey\n    };\n}));\n\ninterface SubscriptionKeyGlobalRoot extends Record<string, unknown> {\n    CryptoTickerProviders?: Record<string, unknown> & {\n        buildSubscriptionKey?: unknown;\n    };\n}\n\ninterface SubscriptionKeyExports {\n    buildSubscriptionKey(\n        exchange: string | null | undefined,\n        symbol: string | null | undefined,\n        fromCurrency: string | null | undefined,\n        toCurrency: string | null | undefined\n    ): string;\n}\n", "(function (root: Record<string, unknown> | undefined, factory: () => ProviderInterfaceExports) {\n    const globalRoot = (typeof globalThis !== \"undefined\" ? globalThis : root) as ProviderInterfaceGlobalRoot | undefined;\n    const exportsValue = factory();\n\n    if (typeof module === \"object\" && module.exports) {\n        module.exports = exportsValue;\n    }\n\n    if (globalRoot) {\n        globalRoot.CryptoTickerProviders = globalRoot.CryptoTickerProviders || {};\n        globalRoot.CryptoTickerProviders.ProviderInterface = exportsValue.ProviderInterface;\n    }\n}(typeof self !== \"undefined\" ? (self as unknown as Record<string, unknown>) : (this as unknown as Record<string, unknown>), function buildProviderInterface(): ProviderInterfaceExports {\n    function noop(): void {\n        // no-op\n    }\n\n    class ProviderInterface implements CryptoTickerProviderInterface {\n        public baseUrl: string;\n        public logger: (...args: unknown[]) => void;\n\n        constructor(options?: CryptoTickerProviderOptions) {\n            const opts = options || {};\n            this.baseUrl = typeof opts.baseUrl === \"string\" ? opts.baseUrl : \"\";\n            this.logger = typeof opts.logger === \"function\" ? opts.logger : noop;\n        }\n\n        getId(): string {\n            throw new Error(\"Provider must implement getId()\");\n        }\n\n        subscribeTicker(\n            _params: CryptoTickerTickerParams,\n            _handlers: CryptoTickerSubscriptionHandlers\n        ): CryptoTickerSubscriptionHandle | null {\n            throw new Error(\"Provider must implement subscribeTicker()\");\n        }\n\n        async fetchTicker(_params: CryptoTickerTickerParams): Promise<CryptoTickerTickerData | null> {\n            throw new Error(\"Provider must implement fetchTicker()\");\n        }\n\n        getCachedTicker(_key: string): CryptoTickerTickerData | null {\n            return null;\n        }\n\n        async fetchCandles(_params: CryptoTickerCandlesParams): Promise<CryptoTickerCandleData[] | null> {\n            throw new Error(\"Provider must implement fetchCandles()\");\n        }\n\n        ensureConnection(): void {\n            // Optional override by providers using websockets.\n        }\n\n        async fetchConversionRate(fromCurrency: string, toCurrency: string): Promise<number> {\n            if (!fromCurrency || !toCurrency || fromCurrency === toCurrency) {\n                return 1;\n            }\n\n            return 1;\n        }\n    }\n\n    return {\n        ProviderInterface\n    };\n}));\n\ninterface ProviderInterfaceGlobalRoot extends Record<string, unknown> {\n    CryptoTickerProviders?: Record<string, unknown> & {\n        ProviderInterface?: unknown;\n    };\n}\n\ninterface ProviderInterfaceExports {\n    ProviderInterface: new (options?: CryptoTickerProviderOptions) => CryptoTickerProviderInterface;\n}\n", "/* eslint-disable @typescript-eslint/no-var-requires, @typescript-eslint/ban-ts-comment, @typescript-eslint/no-this-alias, no-var */\n// @ts-nocheck\n(function (root, factory) {\n    const globalRoot = (typeof globalThis !== \"undefined\" ? globalThis : root) as TickerSubscriptionManagerGlobalRoot | undefined;\n    const args = typeof module === \"object\" && module.exports\n        ? [\n            require(\"./subscription-key\"),\n            require(\"./connection-states\")\n        ]\n        : [\n            root?.CryptoTickerProviders,\n            root?.CryptoTickerConnectionStates\n        ];\n\n    const exportsValue = factory(\n        args[0],\n        args[1]\n    );\n\n    if (typeof module === \"object\" && module.exports) {\n        module.exports = exportsValue;\n    }\n\n    if (globalRoot) {\n        globalRoot.CryptoTickerProviders = globalRoot.CryptoTickerProviders || {};\n        globalRoot.CryptoTickerProviders.TickerSubscriptionManager = exportsValue.TickerSubscriptionManager;\n    }\n}(typeof self !== \"undefined\" ? (self as unknown as TickerSubscriptionManagerGlobalRoot) : (this as unknown as TickerSubscriptionManagerGlobalRoot), function (subscriptionKeyModule, connectionStatesModule) {\n    const buildSubscriptionKey = subscriptionKeyModule.buildSubscriptionKey || subscriptionKeyModule;\n    const ConnectionStates = connectionStatesModule || {\n        LIVE: \"live\",\n        DETACHED: \"detached\",\n        BACKUP: \"backup\",\n        BROKEN: \"broken\"\n    };\n\n    const DEFAULT_FALLBACK_POLL_INTERVAL_MS = 60000;\n    const DEFAULT_STALE_TICKER_TIMEOUT_MS = 5 * 60 * 1000;\n\n    function noop() {}\n\n    function normalizeHandlers(handlers) {\n        const h = handlers || {};\n        return {\n            onData: typeof h.onData === \"function\" ? h.onData : null,\n            onError: typeof h.onError === \"function\" ? h.onError : null\n        };\n    }\n\n    function copyParams(params) {\n        const p = params || {};\n        const fromCurrency = p.fromCurrency || null;\n        const toCurrency = p.toCurrency || null;\n        return {\n            exchange: p.exchange,\n            symbol: p.symbol,\n            fromCurrency: fromCurrency,\n            toCurrency: toCurrency\n        };\n    }\n\n    class TickerSubscriptionManager {\n        constructor(options) {\n            const opts = options || {};\n            this.logger = typeof opts.logger === \"function\" ? opts.logger : noop;\n            this.fetchTickerFn = typeof opts.fetchTicker === \"function\" ? opts.fetchTicker : null;\n            this.subscribeStreamingFn = typeof opts.subscribeStreaming === \"function\" ? opts.subscribeStreaming : null;\n            this.unsubscribeStreamingFn = typeof opts.unsubscribeStreaming === \"function\" ? opts.unsubscribeStreaming : null;\n            this.ensureConnectionFn = typeof opts.ensureConnection === \"function\" ? opts.ensureConnection : null;\n            this.subscriptionKeyBuilder = typeof opts.buildSubscriptionKey === \"function\" ? opts.buildSubscriptionKey : buildSubscriptionKey;\n            this.fallbackPollIntervalMs = typeof opts.fallbackPollIntervalMs === \"number\" ? opts.fallbackPollIntervalMs : DEFAULT_FALLBACK_POLL_INTERVAL_MS;\n            this.staleTickerTimeoutMs = typeof opts.staleTickerTimeoutMs === \"number\" ? opts.staleTickerTimeoutMs : DEFAULT_STALE_TICKER_TIMEOUT_MS;\n            this.connectionStates = ConnectionStates;\n\n            this.entries = {};\n            this.cache = {};\n        }\n\n        // Subscribe entry: start streaming if possible and kick REST fetch so key paints immediately.\n        subscribe(params, handlers) {\n            const normalizedHandlers = normalizeHandlers(handlers);\n            const entry = this.getOrCreateEntry(params);\n            entry.subscribers.push(normalizedHandlers);\n\n            if (this.ensureConnectionFn) {\n                try {\n                    this.ensureConnectionFn();\n                } catch (err) {\n                    this.logger(\"TickerSubscriptionManager: ensureConnection error\", err);\n                }\n            }\n\n            this.ensureStreaming(entry);\n            this.startFallbackPolling(entry);\n\n            const self = this;\n            if (this.fetchTickerFn) {\n                this.fetchTickerFn(entry.params).then(function (ticker) {\n                    self.applyTickerStateFromFetch(entry, ticker);\n                    self.cache[entry.key] = ticker;\n                    self.notifySubscribers(entry, ticker);\n                }).catch(function (err) {\n                    self.logger(\"TickerSubscriptionManager: fetchTicker error\", err);\n                    if (normalizedHandlers.onError) {\n                        try {\n                            normalizedHandlers.onError(err);\n                        } catch (handlerErr) {\n                            self.logger(\"TickerSubscriptionManager: onError handler threw\", handlerErr);\n                        }\n                    }\n                });\n            }\n\n            return {\n                key: entry.key,\n                unsubscribe: () => {\n                    this.unsubscribe(entry.key, normalizedHandlers);\n                }\n            };\n        }\n\n        unsubscribe(key, subscriber) {\n            const entry = this.entries[key];\n            if (!entry) {\n                return;\n            }\n\n            const idx = entry.subscribers.indexOf(subscriber);\n            if (idx >= 0) {\n                entry.subscribers.splice(idx, 1);\n            }\n\n            if (entry.subscribers.length === 0) {\n                this.stopFallbackPolling(entry);\n                this.stopStreaming(entry);\n                delete this.entries[key];\n            }\n        }\n\n        getCachedTicker(key) {\n            return this.cache[key] || null;\n        }\n\n        handleStreamingUpdate(key, ticker) {\n            const entry = this.entries[key];\n            if (!entry) {\n                return;\n            }\n\n            entry.lastStreamUpdate = Date.now();\n            this.setEntryConnectionState(entry, this.connectionStates.LIVE, ticker);\n            this.cache[key] = ticker;\n            this.notifySubscribers(entry, ticker);\n        }\n\n        getEntry(key) {\n            return this.entries[key] || null;\n        }\n\n        handleStreamingUpdateFromParts(exchange, symbol, fromCurrency, toCurrency, ticker) {\n            const key = this.buildKey(exchange, symbol, fromCurrency, toCurrency);\n            this.handleStreamingUpdate(key, ticker);\n        }\n\n        buildKey(exchange, symbol, fromCurrency, toCurrency) {\n            return this.subscriptionKeyBuilder(exchange, symbol, fromCurrency, toCurrency);\n        }\n\n        buildKeyFromParams(params) {\n            const p = params || {};\n            return this.buildKey(p.exchange, p.symbol, p.fromCurrency, p.toCurrency);\n        }\n\n        forEachEntry(callback) {\n            if (typeof callback !== \"function\") {\n                return;\n            }\n\n            const keys = Object.keys(this.entries);\n            for (let i = 0; i < keys.length; i++) {\n                const key = keys[i];\n                callback(this.entries[key]);\n            }\n        }\n\n        ensureStreaming(entry) {\n            if (!entry || entry.streamingActive || !this.subscribeStreamingFn) {\n                if (entry && !entry.streamingActive) {\n                    entry.streamingActive = Boolean(this.subscribeStreamingFn);\n                }\n                return;\n            }\n\n            try {\n                const result = this.subscribeStreamingFn(entry);\n                if (result && typeof result.then === \"function\") {\n                    result.then(() => {\n                        entry.streamingActive = true;\n                    }).catch((err) => {\n                        entry.streamingActive = false;\n                        this.logger(\"TickerSubscriptionManager: subscribeStreaming promise rejected\", err);\n                    });\n                } else if (result === false) {\n                    entry.streamingActive = false;\n                } else {\n                    entry.streamingActive = true;\n                }\n            } catch (err) {\n                entry.streamingActive = false;\n                this.logger(\"TickerSubscriptionManager: subscribeStreaming error\", err);\n            }\n        }\n\n        stopStreaming(entry) {\n            if (!entry || !this.unsubscribeStreamingFn || !entry.streamingActive) {\n                return;\n            }\n\n            try {\n                const result = this.unsubscribeStreamingFn(entry);\n                if (result && typeof result.then === \"function\") {\n                    result.then(() => {\n                        entry.streamingActive = false;\n                    }).catch((err) => {\n                        this.logger(\"TickerSubscriptionManager: unsubscribeStreaming promise rejected\", err);\n                    });\n                } else {\n                    entry.streamingActive = false;\n                }\n            } catch (err) {\n                entry.streamingActive = false;\n                this.logger(\"TickerSubscriptionManager: unsubscribeStreaming error\", err);\n            }\n        }\n\n        notifySubscribers(entry, ticker) {\n            if (!entry) {\n                return;\n            }\n\n            const subscribers = entry.subscribers;\n            for (let i = 0; i < subscribers.length; i++) {\n                const subscriber = subscribers[i];\n                if (subscriber && subscriber.onData) {\n                    try {\n                        subscriber.onData(ticker);\n                    } catch (err) {\n                        this.logger(\"TickerSubscriptionManager: onData handler threw\", err);\n                    }\n                }\n            }\n        }\n\n        startFallbackPolling(entry) {\n            if (!entry || entry.fallbackTimerId || !this.fetchTickerFn) {\n                return;\n            }\n\n            const self = this;\n            entry.fallbackTimerId = setInterval(function () {\n                self.pollEntryIfNeeded(entry);\n            }, this.fallbackPollIntervalMs);\n        }\n\n        stopFallbackPolling(entry) {\n            if (!entry || !entry.fallbackTimerId) {\n                return;\n            }\n\n            clearInterval(entry.fallbackTimerId);\n            entry.fallbackTimerId = null;\n        }\n\n        pollEntryIfNeeded(entry) {\n            if (!entry || !this.fetchTickerFn) {\n                return;\n            }\n\n            if (!this.shouldPollEntry(entry)) {\n                return;\n            }\n\n            const self = this;\n            this.fetchTickerFn(entry.params).then(function (ticker) {\n                self.applyTickerStateFromFetch(entry, ticker);\n                self.cache[entry.key] = ticker;\n                self.notifySubscribers(entry, ticker);\n            }).catch(function (err) {\n                self.logger(\"TickerSubscriptionManager: fallback fetch error\", err);\n                self.handleFetchError(entry);\n            });\n        }\n\n        // Poll only when streaming idle or stale to reduce backend load yet recover from socket hiccups.\n        shouldPollEntry(entry) {\n            if (!entry) {\n                return false;\n            }\n\n            if (!entry.streamingActive) {\n                return true;\n            }\n\n            const lastUpdate = entry.lastStreamUpdate || 0;\n            if (!lastUpdate) {\n                return true;\n            }\n\n            const elapsed = Date.now() - lastUpdate;\n            return elapsed > this.staleTickerTimeoutMs;\n        }\n\n        getOrCreateEntry(params) {\n            const key = this.buildKeyFromParams(params);\n            let entry = this.entries[key];\n            if (!entry) {\n                entry = {\n                    key: key,\n                    params: copyParams(params),\n                    subscribers: [],\n                    streamingActive: false,\n                    lastStreamUpdate: 0,\n                    fallbackTimerId: null,\n                    meta: {},\n                    connectionState: null\n                };\n                this.entries[key] = entry;\n            }\n\n            return entry;\n        }\n\n        setEntryConnectionState(entry, state, ticker) {\n            if (!entry) {\n                return;\n            }\n\n            entry.connectionState = state;\n            if (ticker && typeof ticker === \"object\") {\n                ticker.connectionState = state;\n            }\n        }\n\n        applyTickerStateFromFetch(entry, ticker) {\n            if (!entry || !ticker) {\n                return;\n            }\n\n            const state = ticker.connectionState || (entry.streamingActive ? this.connectionStates.LIVE : this.connectionStates.DETACHED);\n            this.setEntryConnectionState(entry, state, ticker);\n        }\n\n        // REST failure: mark BROKEN and cache placeholder so later subscribers see same status tile.\n        handleFetchError(entry) {\n            if (!entry) {\n                return;\n            }\n\n            this.setEntryConnectionState(entry, this.connectionStates.BROKEN);\n            const key = entry.key;\n            const cached = this.cache[key];\n            if (cached) {\n                cached.connectionState = this.connectionStates.BROKEN;\n                this.notifySubscribers(entry, cached);\n                return;\n            }\n\n            const fallbackTicker = {\n                changeDaily: 0,\n                changeDailyPercent: 0,\n                last: 0,\n                volume: 0,\n                high: 0,\n                low: 0,\n                pair: entry.params.symbol,\n                pairDisplay: entry.params.symbol,\n                connectionState: this.connectionStates.BROKEN\n            };\n\n            this.cache[key] = fallbackTicker;\n            this.notifySubscribers(entry, fallbackTicker);\n        }\n    }\n\n    return {\n        TickerSubscriptionManager: TickerSubscriptionManager\n    };\n}));\n\ninterface TickerSubscriptionManagerGlobalRoot extends Record<string, unknown> {\n    CryptoTickerProviders?: Record<string, unknown> & {\n        TickerSubscriptionManager?: unknown;\n    };\n    CryptoTickerConnectionStates?: Record<string, unknown>;\n}\n", "/* eslint-disable @typescript-eslint/no-var-requires, @typescript-eslint/ban-ts-comment, @typescript-eslint/no-this-alias, no-var */\n// @ts-nocheck\n/* global signalR */\n\n(function (root, factory) {\n    const globalRoot = (typeof globalThis !== \"undefined\" ? globalThis : root) as GenericProviderGlobalRoot | undefined;\n    const args = typeof module === \"object\" && module.exports\n        ? [\n            require(\"./provider-interface\"),\n            require(\"./subscription-key\"),\n            require(\"./ticker-subscription-manager\"),\n            require(\"./connection-states\")\n        ]\n        : [\n            root?.CryptoTickerProviders,\n            root?.CryptoTickerProviders,\n            root?.CryptoTickerProviders,\n            root?.CryptoTickerConnectionStates\n        ];\n\n    const exportsValue = factory(\n        args[0],\n        args[1],\n        args[2],\n        args[3]\n    );\n\n    if (typeof module === \"object\" && module.exports) {\n        module.exports = exportsValue;\n    }\n\n    if (globalRoot) {\n        globalRoot.CryptoTickerProviders = globalRoot.CryptoTickerProviders || {};\n        globalRoot.CryptoTickerProviders.GenericProvider = exportsValue.GenericProvider;\n    }\n}(typeof self !== \"undefined\" ? (self as unknown as GenericProviderGlobalRoot) : (this as unknown as GenericProviderGlobalRoot), function (providerInterfaceModule, subscriptionKeyModule, managerModule, connectionStatesModule) {\n    const ProviderInterface = providerInterfaceModule.ProviderInterface || providerInterfaceModule;\n    const buildSubscriptionKey = subscriptionKeyModule.buildSubscriptionKey || subscriptionKeyModule;\n    const TickerSubscriptionManager = managerModule.TickerSubscriptionManager || managerModule;\n    const ConnectionStates = connectionStatesModule || {\n        LIVE: \"live\",\n        DETACHED: \"detached\",\n        BACKUP: \"backup\",\n        BROKEN: \"broken\"\n    };\n\n    const CONNECTION_STATE_CONNECTED = \"Connected\";\n    const DEFAULT_RETRY_DELAY_MS = 5000;\n\n    class GenericProvider extends ProviderInterface {\n        constructor(options) {\n            super(options);\n            const opts = options || {};\n            this.retryDelayMs = typeof opts.retryDelayMs === \"number\" ? opts.retryDelayMs : DEFAULT_RETRY_DELAY_MS;\n            this.connection = null;\n            this.shouldReconnect = true;\n            this.connectionState = \"Disconnected\";\n            this.startingConnection = false;\n\n            // Manager handles fallback polling + streaming so action code stays simple.\n            const managerOptions = {\n                logger: (...args) => {\n                    this.logger(...args);\n                },\n                fetchTicker: this.rawFetchTicker.bind(this),\n                subscribeStreaming: this.subscribeEntry.bind(this),\n                unsubscribeStreaming: this.unsubscribeEntry.bind(this),\n                ensureConnection: this.ensureConnection.bind(this),\n                buildSubscriptionKey: function (exchange, symbol, fromCurrency, toCurrency) {\n                    return buildSubscriptionKey(exchange, symbol, fromCurrency, toCurrency);\n                },\n                fallbackPollIntervalMs: opts.fallbackPollIntervalMs,\n                staleTickerTimeoutMs: opts.staleTickerTimeoutMs\n            };\n\n            this.subscriptionManager = new TickerSubscriptionManager(managerOptions);\n        }\n\n        getId() {\n            return \"GENERIC\";\n        }\n\n        subscribeTicker(params, handlers) {\n            return this.subscriptionManager.subscribe(params, handlers);\n        }\n\n        getCachedTicker(key) {\n            return this.subscriptionManager.getCachedTicker(key);\n        }\n\n        ensureConnection() {\n            if (this.connection && (this.connectionState === CONNECTION_STATE_CONNECTED || this.startingConnection)) {\n                return;\n            }\n\n            if (typeof signalR === \"undefined\" || !signalR.HubConnectionBuilder) {\n                this.logger(\"GenericProvider: SignalR not available, skipping WebSocket connection.\");\n                return;\n            }\n\n            if (!this.connection) {\n                this.connection = new signalR.HubConnectionBuilder()\n                    .withUrl(this.baseUrl + \"/tickerhub\")\n                    .withAutomaticReconnect()\n                    .configureLogging(signalR.LogLevel.Warning)\n                    .build();\n\n                const self = this;\n                this.connection.on(\"ticker\", function (ticker) {\n                    self.handleTickerMessage(ticker);\n                });\n                this.connection.onreconnected(function () {\n                    self.logger(\"GenericProvider: connection re-established, resubscribing.\");\n                    self.onConnectionEstablished();\n                });\n                this.connection.onclose(function () {\n                    self.connectionState = \"Disconnected\";\n                    if (self.shouldReconnect) {\n                        setTimeout(function () {\n                            self.startConnection();\n                        }, self.retryDelayMs);\n                    }\n                });\n            }\n\n            this.startConnection();\n        }\n\n        startConnection() {\n            if (!this.connection || this.startingConnection || this.connectionState === CONNECTION_STATE_CONNECTED) {\n                return;\n            }\n\n            const self = this;\n            this.startingConnection = true;\n            this.connection.start().then(function () {\n                self.connectionState = CONNECTION_STATE_CONNECTED;\n                self.startingConnection = false;\n                self.onConnectionEstablished();\n            }).catch(function (err) {\n                self.connectionState = \"Disconnected\";\n                self.startingConnection = false;\n                self.logger(\"GenericProvider: error starting connection\", err);\n                setTimeout(function () {\n                    self.startConnection();\n                }, self.retryDelayMs);\n            });\n        }\n\n        isConnected() {\n            return this.connection && this.connectionState === CONNECTION_STATE_CONNECTED;\n        }\n\n        onConnectionEstablished() {\n            const self = this;\n            this.subscriptionManager.forEachEntry(function (entry) {\n                if (entry) {\n                    entry.streamingActive = false;\n                    if (entry.meta) {\n                        entry.meta.isSubscribed = false;\n                        entry.meta.pending = true;\n                    }\n                    self.subscriptionManager.ensureStreaming(entry);\n                }\n            });\n        }\n\n        subscribeEntry(entry) {\n            if (!entry) {\n                return false;\n            }\n\n            entry.meta = entry.meta || {};\n\n            if (!this.connection) {\n                // Lazily boot SignalR on first subscriber to avoid sockets for idle keys.\n                this.ensureConnection();\n                entry.meta.pending = true;\n                entry.streamingActive = false;\n                return false;\n            }\n\n            if (!this.isConnected()) {\n                this.startConnection();\n                entry.meta.pending = true;\n                entry.streamingActive = false;\n                return false;\n            }\n\n            if (entry.meta.isSubscribed) {\n                entry.meta.pending = false;\n                return true;\n            }\n\n            entry.meta.pending = true;\n            const params = entry.params;\n            const self = this;\n\n            return this.connection.invoke(\n                \"Subscribe\",\n                params.exchange,\n                params.symbol,\n                params.fromCurrency,\n                params.toCurrency\n            ).then(function () {\n                entry.meta.isSubscribed = true;\n                entry.meta.pending = false;\n                entry.streamingActive = true;\n                return true;\n            }).catch(function (err) {\n                entry.meta.isSubscribed = false;\n                entry.meta.pending = false;\n                entry.streamingActive = false;\n                self.logger(\"GenericProvider: error invoking Subscribe\", err);\n                return false;\n            });\n        }\n\n        unsubscribeEntry(entry) {\n            if (!entry) {\n                return true;\n            }\n\n            entry.meta = entry.meta || {};\n\n            if (!this.connection || !entry.meta.isSubscribed) {\n                entry.meta.isSubscribed = false;\n                entry.streamingActive = false;\n                return true;\n            }\n\n            const params = entry.params;\n            const self = this;\n\n            return this.connection.invoke(\n                \"Unsubscribe\",\n                params.exchange,\n                params.symbol,\n                params.fromCurrency,\n                params.toCurrency\n            ).then(function () {\n                entry.meta.isSubscribed = false;\n                entry.streamingActive = false;\n                return true;\n            }).catch(function (err) {\n                entry.meta.isSubscribed = false;\n                entry.streamingActive = false;\n                self.logger(\"GenericProvider: error invoking Unsubscribe\", err);\n                return false;\n            });\n        }\n\n        fetchTicker(params) {\n            return this.rawFetchTicker(params);\n        }\n\n        rawFetchTicker(params) {\n            const exchange = params.exchange;\n            const symbol = params.symbol;\n            const fromCurrency = params.fromCurrency || \"USD\";\n            const toCurrency = params.toCurrency || null;\n            let url = this.baseUrl + \"/api/Ticker/json/\" + exchange + \"/\" + symbol + \"?fromCurrency=\" + encodeURIComponent(fromCurrency);\n            if (toCurrency !== null) {\n                url += \"&toCurrency=\" + encodeURIComponent(toCurrency);\n            }\n\n            const self = this;\n            return fetch(url).then(function (response) {\n                return response.json();\n            }).then(function (json) {\n                const ticker = self.transformTickerResponse(json);\n                ticker.connectionState = ConnectionStates.BACKUP;\n                return ticker;\n            }).catch(function (err) {\n                self.logger(\"GenericProvider: error fetching ticker\", err);\n                const key = self.subscriptionManager.buildKey(exchange, symbol, fromCurrency, toCurrency);\n                const cached = self.subscriptionManager.getCachedTicker(key);\n                if (cached) {\n                    cached.connectionState = cached.connectionState || ConnectionStates.BACKUP;\n                    return cached;\n                }\n                // Fallback: return empty ticker so renderer shows BROKEN, not runtime error.\n                const fallback = self.buildEmptyTicker(symbol);\n                fallback.connectionState = ConnectionStates.BROKEN;\n                return fallback;\n            });\n        }\n\n        handleTickerMessage(message) {\n            if (!message) {\n                return;\n            }\n\n            const provider = message.provider || message[\"provider\"];\n            const symbol = message.symbol || message[\"symbol\"];\n            const fromCurrency = message.conversionFromCurrency || message[\"conversionFromCurrency\"] || null;\n            const toCurrency = message.conversionToCurrency || message[\"conversionToCurrency\"] || null;\n            const key = this.subscriptionManager.buildKey(provider, symbol, fromCurrency, toCurrency);\n            const ticker = this.transformTickerResponse(message);\n\n            const entry = this.subscriptionManager.getEntry(key);\n            if (entry && entry.meta) {\n                entry.meta.isSubscribed = true;\n                entry.meta.pending = false;\n                entry.streamingActive = true;\n            }\n\n            // Notify all contexts; manager marks entry live and stops fallback polling.\n            this.subscriptionManager.handleStreamingUpdate(key, ticker);\n        }\n\n        async fetchCandles(params) {\n            const exchange = params.exchange;\n            const symbol = params.symbol;\n            const interval = params.interval;\n            const limit = typeof params.limit === \"number\" && params.limit > 0 ? params.limit : 24;\n            const base = this.baseUrl.replace(/\\/$/, \"\");\n            const url = base + \"/api/Candles/json/\" + encodeURIComponent(exchange) + \"/\" + encodeURIComponent(symbol) + \"/\" + interval + \"?limit=\" + limit;\n\n            try {\n                const response = await fetch(url);\n                if (!response || !response.ok) {\n                    throw new Error(\"GenericProvider: candles response not ok\");\n                }\n                const json = await response.json();\n                if (Array.isArray(json.candles)) {\n                    return json.candles;\n                }\n                return [];\n            } catch (err) {\n                this.logger(\"GenericProvider: error fetching candles\", err);\n                throw err;\n            }\n        }\n\n        transformTickerResponse(responseJson) {\n            const json = responseJson || {};\n            return {\n                changeDaily: json[\"dailyChange\"] || 0,\n                changeDailyPercent: json[\"dailyChangeRelative\"] || 0,\n                last: json[\"last\"] || 0,\n                volume: json[\"volume\"] || 0,\n                high: json[\"high24h\"] || 0,\n                low: json[\"low24h\"] || 0,\n                pair: json[\"symbol\"] || json[\"pair\"] || \"\",\n                pairDisplay: json[\"symbolDisplay\"] || json[\"symbol\"] || json[\"pair\"] || \"\"\n            };\n        }\n\n        buildEmptyTicker(symbol) {\n            const sym = symbol || \"\";\n            return {\n                changeDaily: 0,\n                changeDailyPercent: 0,\n                last: 0,\n                volume: 0,\n                high: 0,\n                low: 0,\n                pair: sym,\n                pairDisplay: sym,\n                connectionState: ConnectionStates.BROKEN\n            };\n        }\n    }\n\n    return {\n        GenericProvider: GenericProvider\n    };\n}));\n\ninterface GenericProviderGlobalRoot extends Record<string, unknown> {\n    CryptoTickerProviders?: Record<string, unknown> & {\n        GenericProvider?: unknown;\n    };\n    CryptoTickerConnectionStates?: Record<string, unknown>;\n}\n", "'use strict';\n\ninterface StringNormalizerOptions {\n  case?: 'upper' | 'lower';\n  allowEmptyString?: boolean;\n  allowNull?: boolean;\n  trim?: boolean;\n  allowedValues?: string[];\n}\n\ninterface NumberNormalizerOptions {\n  min?: number;\n  max?: number;\n  integer?: boolean;\n}\n\ntype Normalizer<T> = (value: unknown) => T | null | undefined;\n\ntype SettingsSchemaType = 'string' | 'number';\n\ninterface SettingsSchemaEntry<T> {\n  type: SettingsSchemaType;\n  default: T;\n  normalize: Normalizer<T>;\n}\n\ninterface SettingsValidationError {\n  key: string;\n  message: string;\n}\n\ninterface SettingsValidationResult {\n  settings: NormalizedSettings;\n  errors: SettingsValidationError[];\n}\n\ninterface CryptoTickerDefaultsExports {\n  settingsSchema: SettingsSchema;\n  defaultSettings: NormalizedSettings;\n  getDefaultSettings(): NormalizedSettings;\n  validateSettings(settings: unknown): SettingsValidationResult;\n  applyDefaults(partialSettings: unknown): NormalizedSettings;\n}\n\ntype SettingsSchema = Record<keyof CryptoTickerSettings, SettingsSchemaEntry<CryptoTickerSettings[keyof CryptoTickerSettings]>>;\n\ntype NormalizedSettings = CryptoTickerSettings & Record<string, unknown>;\n\ninterface GlobalDefaultsRoot extends Record<string, unknown> {\n  CryptoTickerDefaults?: CryptoTickerDefaultsExports;\n}\n\n(function loadDefaults(root: Record<string, unknown> | undefined, factory: () => CryptoTickerDefaultsExports) {\n  const exports = factory();\n  if (typeof module === 'object' && module.exports) {\n    module.exports = exports;\n  }\n  if (root && typeof root === 'object') {\n    (root as GlobalDefaultsRoot).CryptoTickerDefaults = exports;\n  }\n})(typeof self !== 'undefined' ? (self as unknown as Record<string, unknown>) : (this as unknown as Record<string, unknown>), function buildDefaults(): CryptoTickerDefaultsExports {\n  function clone<T>(obj: T): T {\n    if (obj === null || typeof obj !== 'object') {\n      return obj;\n    }\n    if (Array.isArray(obj)) {\n      return obj.map((item) => clone(item)) as unknown as T;\n    }\n    const copy: Record<string, unknown> = {};\n    for (const key in obj as Record<string, unknown>) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        copy[key] = clone((obj as Record<string, unknown>)[key]);\n      }\n    }\n    return copy as T;\n  }\n\n  function buildStringNormalizer(options?: StringNormalizerOptions): Normalizer<string> {\n    const normalizeCase = options?.case;\n    const allowEmpty = options?.allowEmptyString === true;\n    const allowNull = options?.allowNull === true;\n    const trim = Object.prototype.hasOwnProperty.call(options || {}, 'trim') ? !!options?.trim : true;\n    const allowedValues = Array.isArray(options?.allowedValues) ? options?.allowedValues : null;\n\n    return function normalizeString(value: unknown): string | null {\n      if (value === undefined) {\n        return null;\n      }\n\n      if (value === null) {\n        return allowNull ? null : '';\n      }\n\n      let str = String(value);\n      if (trim) {\n        str = str.trim();\n      }\n\n      if (!str && !allowEmpty) {\n        return null;\n      }\n\n      if (normalizeCase === 'upper') {\n        str = str.toUpperCase();\n      } else if (normalizeCase === 'lower') {\n        str = str.toLowerCase();\n      }\n\n      if (allowedValues && allowedValues.length > 0) {\n        const lookup = normalizeCase === 'lower' ? str.toLowerCase() : normalizeCase === 'upper' ? str.toUpperCase() : str;\n\n        const matches = allowedValues.some((allowed) => {\n          if (normalizeCase === 'lower') {\n            return allowed.toLowerCase() === lookup;\n          }\n          if (normalizeCase === 'upper') {\n            return allowed.toUpperCase() === lookup;\n          }\n          return allowed === lookup;\n        });\n\n        if (!matches) {\n          return null;\n        }\n\n        if (normalizeCase === 'lower' || normalizeCase === 'upper') {\n          return lookup;\n        }\n        return str;\n      }\n\n      return str;\n    };\n  }\n\n  function buildNumberNormalizer(options?: NumberNormalizerOptions): Normalizer<number> {\n    const min = typeof options?.min === 'number' ? options.min : null;\n    const max = typeof options?.max === 'number' ? options.max : null;\n    const integer = options?.integer === true;\n\n    return function normalizeNumber(value: unknown): number | null {\n      if (value === undefined || value === null || value === '') {\n        return null;\n      }\n\n      let numeric = typeof value === 'number' ? value : parseFloat(String(value));\n      if (Number.isNaN(numeric)) {\n        return null;\n      }\n\n      if (integer) {\n        numeric = Math.round(numeric);\n      }\n\n      if (min !== null && numeric < min) {\n        numeric = min;\n      }\n\n      if (max !== null && numeric > max) {\n        numeric = max;\n      }\n\n      return numeric;\n    };\n  }\n\n  const settingsSchema: SettingsSchema = {\n    title: {\n      type: 'string',\n      default: '',\n      normalize: buildStringNormalizer({ allowEmptyString: true, allowNull: true, trim: true })\n    },\n    exchange: {\n      type: 'string',\n      default: 'BINANCE',\n      normalize: buildStringNormalizer({ trim: true, allowEmptyString: false, case: 'upper' })\n    },\n    pair: {\n      type: 'string',\n      default: 'BTCUSD',\n      normalize: buildStringNormalizer({ trim: true, allowEmptyString: false, case: 'upper' })\n    },\n    fromCurrency: {\n      type: 'string',\n      default: 'USD',\n      normalize: buildStringNormalizer({ trim: true, allowEmptyString: false, case: 'upper' })\n    },\n    currency: {\n      type: 'string',\n      default: '',\n      normalize: buildStringNormalizer({ trim: true, allowEmptyString: true, case: 'upper', allowNull: true })\n    },\n    candlesInterval: {\n      type: 'string',\n      default: '1h',\n      normalize: buildStringNormalizer({ trim: true, allowEmptyString: false })\n    },\n    candlesDisplayed: {\n      type: 'number',\n      default: 20,\n      normalize: buildNumberNormalizer({ min: 5, max: 60, integer: true })\n    },\n    multiplier: {\n      type: 'number',\n      default: 1,\n      normalize: buildNumberNormalizer({ min: 0 })\n    },\n    digits: {\n      type: 'number',\n      default: 2,\n      normalize: buildNumberNormalizer({ min: 0, max: 10, integer: true })\n    },\n    highLowDigits: {\n      type: 'string',\n      default: '',\n      normalize: buildStringNormalizer({ trim: true, allowEmptyString: true })\n    },\n    font: {\n      type: 'string',\n      default: \"Lato,'Roboto Condensed',Helvetica,Calibri,sans-serif\",\n      normalize: buildStringNormalizer({ trim: true, allowEmptyString: false })\n    },\n    fontSizeBase: {\n      type: 'number',\n      default: 25,\n      normalize: buildNumberNormalizer({ min: 1, max: 200, integer: true })\n    },\n    fontSizePrice: {\n      type: 'number',\n      default: 35,\n      normalize: buildNumberNormalizer({ min: 1, max: 200, integer: true })\n    },\n    fontSizeHighLow: {\n      type: 'string',\n      default: '',\n      normalize: buildStringNormalizer({ trim: true, allowEmptyString: true })\n    },\n    fontSizeChange: {\n      type: 'number',\n      default: 19,\n      normalize: buildNumberNormalizer({ min: 1, max: 200, integer: true })\n    },\n    priceFormat: {\n      type: 'string',\n      default: 'compact',\n      normalize: buildStringNormalizer({ trim: true, allowEmptyString: false, case: 'lower' })\n    },\n    backgroundColor: {\n      type: 'string',\n      default: '#000000',\n      normalize: buildStringNormalizer({ trim: true, allowEmptyString: false })\n    },\n    textColor: {\n      type: 'string',\n      default: '#ffffff',\n      normalize: buildStringNormalizer({ trim: true, allowEmptyString: false })\n    },\n    displayHighLow: {\n      type: 'string',\n      default: 'on',\n      normalize: buildStringNormalizer({ trim: true, allowEmptyString: false, case: 'lower', allowedValues: ['on', 'off'] })\n    },\n    displayHighLowBar: {\n      type: 'string',\n      default: 'on',\n      normalize: buildStringNormalizer({ trim: true, allowEmptyString: false, case: 'lower', allowedValues: ['on', 'off'] })\n    },\n    displayDailyChange: {\n      type: 'string',\n      default: 'on',\n      normalize: buildStringNormalizer({ trim: true, allowEmptyString: false, case: 'lower', allowedValues: ['on', 'off'] })\n    },\n    displayConnectionStatusIcon: {\n      type: 'string',\n      default: 'OFF',\n      normalize: buildStringNormalizer({ trim: true, allowEmptyString: false, case: 'upper', allowedValues: ['OFF', 'TOP_RIGHT', 'BOTTOM_LEFT'] })\n    },\n    alertRule: {\n      type: 'string',\n      default: '',\n      normalize: buildStringNormalizer({ trim: true, allowEmptyString: true })\n    },\n    backgroundColorRule: {\n      type: 'string',\n      default: '',\n      normalize: buildStringNormalizer({ trim: true, allowEmptyString: true })\n    },\n    textColorRule: {\n      type: 'string',\n      default: '',\n      normalize: buildStringNormalizer({ trim: true, allowEmptyString: true })\n    },\n    mode: {\n      type: 'string',\n      default: 'ticker',\n      normalize: buildStringNormalizer({ trim: true, allowEmptyString: false, case: 'lower', allowedValues: ['ticker', 'candles'] })\n    }\n  };\n\n  function coerceValue<T>(schemaEntry: SettingsSchemaEntry<T>, value: unknown, hasValue: boolean): { value: T; error: string | null } {\n    if (!schemaEntry || typeof schemaEntry !== 'object') {\n      return { value: value as T, error: null };\n    }\n\n    const normalizer = schemaEntry.normalize;\n    const defaultValue = schemaEntry.default;\n    if (typeof normalizer !== 'function') {\n      const resolved = value === undefined ? clone(defaultValue) : (value as T);\n      return { value: resolved, error: null };\n    }\n\n    const normalized = normalizer(value);\n    if (normalized === null || normalized === undefined) {\n      const fallbackNormalized = normalizer(defaultValue);\n      const fallback = fallbackNormalized === null || fallbackNormalized === undefined ? clone(defaultValue) : (fallbackNormalized as T);\n      return {\n        value: fallback,\n        error: hasValue ? 'Invalid ' + schemaEntry.type : null\n      };\n    }\n\n    return {\n      value: normalized as T,\n      error: null\n    };\n  }\n\n  function validateSettings(input: unknown): SettingsValidationResult {\n    const provided = input && typeof input === 'object' ? (input as Record<string, unknown>) : {};\n    const normalized: Record<string, unknown> = {};\n    const errors: SettingsValidationError[] = [];\n\n    for (const key in settingsSchema) {\n      if (!Object.prototype.hasOwnProperty.call(settingsSchema, key)) {\n        continue;\n      }\n      const schemaEntry = settingsSchema[key as keyof CryptoTickerSettings];\n      const hasValue = Object.prototype.hasOwnProperty.call(provided, key);\n      const rawValue = hasValue ? provided[key] : undefined;\n      const result = coerceValue(schemaEntry, rawValue, hasValue);\n      normalized[key] = result.value;\n      if (result.error) {\n        errors.push({ key, message: result.error });\n      }\n    }\n\n    for (const extraKey in provided) {\n      if (\n        !Object.prototype.hasOwnProperty.call(settingsSchema, extraKey) &&\n        Object.prototype.hasOwnProperty.call(provided, extraKey)\n      ) {\n        normalized[extraKey] = provided[extraKey];\n      }\n    }\n\n    return {\n      settings: normalized as NormalizedSettings,\n      errors\n    };\n  }\n\n  function applyDefaults(partialSettings: unknown): NormalizedSettings {\n    const result = validateSettings(partialSettings);\n    return result.settings;\n  }\n\n  const defaultSettings = applyDefaults(null);\n\n  return {\n    settingsSchema,\n    defaultSettings,\n    getDefaultSettings: function (): NormalizedSettings {\n      return clone(defaultSettings);\n    },\n    validateSettings: function (settings: unknown): SettingsValidationResult {\n      const result = validateSettings(settings);\n      return {\n        settings: result.settings,\n        errors: result.errors.slice(0)\n      };\n    },\n    applyDefaults\n  };\n});\n", "/* eslint-disable @typescript-eslint/no-var-requires, @typescript-eslint/ban-ts-comment, @typescript-eslint/no-this-alias, no-var */\n// @ts-nocheck\n(function (root, factory) {\n    const globalRoot = (typeof globalThis !== \"undefined\" ? globalThis : root) as WebSocketPoolGlobalRoot | undefined;\n    const exportsValue = factory();\n\n    if (typeof module === \"object\" && module.exports) {\n        module.exports = exportsValue;\n    }\n\n    if (globalRoot) {\n        globalRoot.CryptoTickerProviders = globalRoot.CryptoTickerProviders || {};\n        globalRoot.CryptoTickerProviders.WebSocketConnectionPool = exportsValue.WebSocketConnectionPool;\n    }\n}(typeof self !== \"undefined\" ? (self as unknown as WebSocketPoolGlobalRoot) : (this as unknown as WebSocketPoolGlobalRoot), function () {\n    function noop() {}\n\n    function mergeMeta(target, updates) {\n        if (!updates || typeof updates !== \"object\") {\n            return target;\n        }\n\n        const keys = Object.keys(updates);\n        for (let i = 0; i < keys.length; i++) {\n            const key = keys[i];\n            target[key] = updates[key];\n        }\n        return target;\n    }\n\n    class WebSocketConnectionPool {\n        constructor(options) {\n            const opts = options || {};\n            this.logger = typeof opts.logger === \"function\" ? opts.logger : noop;\n            this.createWebSocket = typeof opts.createWebSocket === \"function\" ? opts.createWebSocket : null;\n            this.subscribeHandler = typeof opts.subscribe === \"function\" ? opts.subscribe : null;\n            this.unsubscribeHandler = typeof opts.unsubscribe === \"function\" ? opts.unsubscribe : null;\n            this.handleMessageFn = typeof opts.handleMessage === \"function\" ? opts.handleMessage : null;\n            this.onOpen = typeof opts.onOpen === \"function\" ? opts.onOpen : null;\n            this.onError = typeof opts.onError === \"function\" ? opts.onError : null;\n            this.onClose = typeof opts.onClose === \"function\" ? opts.onClose : null;\n            this.reconnectDelayMs = typeof opts.reconnectDelayMs === \"number\" ? opts.reconnectDelayMs : 5000;\n            this.autoCloseDelayMs = typeof opts.autoCloseDelayMs === \"number\" ? opts.autoCloseDelayMs : 0;\n            this.shouldResubscribeOnReconnect = opts.shouldResubscribeOnReconnect !== false;\n\n            this.symbolEntries = {};\n            this.ws = null;\n            this.wsClosedByUser = false;\n            this.reconnectTimer = null;\n            this.closeTimer = null;\n            this.isConnecting = false;\n        }\n\n        // Pool used by Binance/Bitfinex: multiplex symbols on one socket to stay under WebView limits.\n        subscribe(symbol, subscriberOptions) {\n            const normalizedSymbol = typeof symbol === \"string\" ? symbol : \"\";\n            if (!normalizedSymbol) {\n                this.logger(\"WebSocketConnectionPool: subscribe called without symbol\");\n                return null;\n            }\n\n            if (!this.createWebSocket) {\n                this.logger(\"WebSocketConnectionPool: createWebSocket not configured\");\n                return null;\n            }\n\n            const subscriber = this.buildSubscriber(subscriberOptions);\n            if (!subscriber.onData) {\n                this.logger(\"WebSocketConnectionPool: subscriber missing onData handler for\", normalizedSymbol);\n                return null;\n            }\n\n            let entry = this.symbolEntries[normalizedSymbol];\n            if (!entry) {\n                entry = {\n                    symbol: normalizedSymbol,\n                    subscribers: [],\n                    subscribed: false,\n                    subscriptionRequested: false,\n                    meta: {}\n                };\n                this.symbolEntries[normalizedSymbol] = entry;\n            }\n\n            entry.subscribers.push(subscriber);\n            this.clearCloseTimer();\n            this.ensureConnection();\n\n            if (this.isSocketOpen() && !entry.subscribed && !entry.subscriptionRequested) {\n                this.requestSubscribe(entry);\n            }\n\n            const self = this;\n            return {\n                symbol: normalizedSymbol,\n                unsubscribe: function () {\n                    self.removeSubscriber(normalizedSymbol, subscriber);\n                },\n                updateMetadata: function (updates) {\n                    self.updateSymbolMetadata(normalizedSymbol, updates);\n                },\n                getMetadata: function () {\n                    const target = self.symbolEntries[normalizedSymbol];\n                    return target ? target.meta : null;\n                }\n            };\n        }\n\n        removeSubscriber(symbol, subscriber) {\n            const entry = this.symbolEntries[symbol];\n            if (!entry) {\n                return;\n            }\n\n            const idx = entry.subscribers.indexOf(subscriber);\n            if (idx >= 0) {\n                entry.subscribers.splice(idx, 1);\n            }\n\n            if (entry.subscribers.length > 0) {\n                return;\n            }\n\n            if (this.isSocketOpen() && this.unsubscribeHandler && (entry.subscribed || entry.subscriptionRequested)) {\n                try {\n                    this.unsubscribeHandler(this.ws, symbol, entry.meta);\n                } catch (err) {\n                    this.logger(\"WebSocketConnectionPool: unsubscribe handler error\", err);\n                }\n            }\n\n            delete this.symbolEntries[symbol];\n            this.maybeCloseConnection();\n        }\n\n        ensureConnection() {\n            if (this.ws || this.isConnecting) {\n                return;\n            }\n\n            let ws = null;\n            try {\n                ws = this.createWebSocket();\n            } catch (err) {\n                this.logger(\"WebSocketConnectionPool: failed to create WebSocket\", err);\n                return;\n            }\n\n            if (!ws) {\n                this.logger(\"WebSocketConnectionPool: createWebSocket returned falsy value\");\n                this.scheduleReconnect();\n                return;\n            }\n\n            this.ws = ws;\n            this.wsClosedByUser = false;\n            this.isConnecting = true;\n            this.attachSocketHandlers(ws);\n        }\n\n        attachSocketHandlers(ws) {\n            const self = this;\n\n            ws.onopen = function () {\n                self.isConnecting = false;\n                if (self.onOpen) {\n                    try {\n                        self.onOpen(self.ws);\n                    } catch (err) {\n                        self.logger(\"WebSocketConnectionPool: onOpen handler error\", err);\n                    }\n                }\n                self.flushPendingSubscriptions();\n            };\n\n            ws.onmessage = function (event) {\n                if (!self.handleMessageFn) {\n                    return;\n                }\n                try {\n                    self.handleMessageFn(event, self.buildMessageHelpers());\n                } catch (err) {\n                    self.logger(\"WebSocketConnectionPool: handleMessage error\", err);\n                }\n            };\n\n            ws.onerror = function (err) {\n                if (self.onError) {\n                    try {\n                        self.onError(err);\n                    } catch (handlerErr) {\n                        self.logger(\"WebSocketConnectionPool: onError handler error\", handlerErr);\n                    }\n                }\n            };\n\n            ws.onclose = function (event) {\n                self.handleSocketClose(event);\n            };\n        }\n\n        handleSocketClose(event) {\n            if (this.onClose) {\n                try {\n                    this.onClose(event);\n                } catch (err) {\n                    this.logger(\"WebSocketConnectionPool: onClose handler error\", err);\n                }\n            }\n\n            const hadSubscribers = this.hasSubscribers();\n            this.isConnecting = false;\n            this.ws = null;\n\n            if (!this.wsClosedByUser && hadSubscribers) {\n                this.resetSubscriptionState();\n                this.notifyAllDisconnected();\n                this.scheduleReconnect();\n                return;\n            }\n\n            this.wsClosedByUser = false;\n            this.resetSubscriptionState();\n        }\n\n        resetSubscriptionState() {\n            const symbols = Object.keys(this.symbolEntries);\n            for (let i = 0; i < symbols.length; i++) {\n                const entry = this.symbolEntries[symbols[i]];\n                entry.subscribed = false;\n                entry.subscriptionRequested = false;\n            }\n        }\n\n        scheduleReconnect() {\n            if (this.reconnectTimer || !this.hasSubscribers()) {\n                return;\n            }\n\n            const self = this;\n            this.reconnectTimer = setTimeout(function () {\n                self.reconnectTimer = null;\n                if (!self.hasSubscribers()) {\n                    return;\n                }\n                self.ensureConnection();\n            }, this.reconnectDelayMs);\n        }\n\n        clearReconnectTimer() {\n            if (this.reconnectTimer) {\n                clearTimeout(this.reconnectTimer);\n                this.reconnectTimer = null;\n            }\n        }\n\n        flushPendingSubscriptions() {\n            const symbols = Object.keys(this.symbolEntries);\n            for (let i = 0; i < symbols.length; i++) {\n                const entry = this.symbolEntries[symbols[i]];\n                if (!entry.subscribed && !entry.subscriptionRequested) {\n                    this.requestSubscribe(entry);\n                }\n            }\n        }\n\n        requestSubscribe(entry) {\n            if (!entry || !this.isSocketOpen()) {\n                return;\n            }\n\n            if (!this.subscribeHandler) {\n                entry.subscribed = true;\n                this.notifySubscribed(entry.symbol, null);\n                return;\n            }\n\n            try {\n                entry.subscriptionRequested = true;\n                this.subscribeHandler(this.ws, entry.symbol, entry.meta);\n            } catch (err) {\n                entry.subscriptionRequested = false;\n                this.logger(\"WebSocketConnectionPool: subscribe handler error\", err);\n                this.notifySubscribeError(entry.symbol, err);\n            }\n        }\n\n        notifySubscribed(symbol, metaUpdates) {\n            const entry = this.symbolEntries[symbol];\n            if (!entry) {\n                return;\n            }\n\n            if (entry.subscribed) {\n                if (metaUpdates) {\n                    mergeMeta(entry.meta, metaUpdates);\n                }\n                return;\n            }\n\n            entry.subscribed = true;\n            entry.subscriptionRequested = false;\n            if (metaUpdates) {\n                mergeMeta(entry.meta, metaUpdates);\n            }\n\n            const subscribers = entry.subscribers;\n            for (let i = 0; i < subscribers.length; i++) {\n                const subscriber = subscribers[i];\n                if (subscriber.onSubscribed) {\n                    try {\n                        subscriber.onSubscribed(subscriber.context);\n                    } catch (err) {\n                        this.logger(\"WebSocketConnectionPool: onSubscribed handler error\", err);\n                    }\n                }\n            }\n        }\n\n        notifySubscribeError(symbol, err) {\n            const entry = this.symbolEntries[symbol];\n            if (!entry) {\n                return;\n            }\n\n            const subscribers = entry.subscribers;\n            for (let i = 0; i < subscribers.length; i++) {\n                const subscriber = subscribers[i];\n                if (subscriber.onError) {\n                    try {\n                        subscriber.onError(err, subscriber.context);\n                    } catch (handlerErr) {\n                        this.logger(\"WebSocketConnectionPool: onError handler error\", handlerErr);\n                    }\n                }\n            }\n        }\n\n        notifyAllDisconnected() {\n            const symbols = Object.keys(this.symbolEntries);\n            for (let i = 0; i < symbols.length; i++) {\n                this.notifyDisconnected(symbols[i]);\n            }\n        }\n\n        notifyDisconnected(symbol) {\n            const entry = this.symbolEntries[symbol];\n            if (!entry) {\n                return;\n            }\n\n            const subscribers = entry.subscribers;\n            for (let i = 0; i < subscribers.length; i++) {\n                const subscriber = subscribers[i];\n                if (subscriber.onDisconnected) {\n                    try {\n                        subscriber.onDisconnected(subscriber.context);\n                    } catch (err) {\n                        this.logger(\"WebSocketConnectionPool: onDisconnected handler error\", err);\n                    }\n                }\n            }\n        }\n\n        // Notify each subscriber; keep context so provider metadata (chanId etc.) sticks around.\n        dispatch(symbol, payload, rawMessage) {\n            const entry = this.symbolEntries[symbol];\n            if (!entry) {\n                return;\n            }\n\n            const subscribers = entry.subscribers;\n            for (let i = 0; i < subscribers.length; i++) {\n                const subscriber = subscribers[i];\n                if (!subscriber.onData) {\n                    continue;\n                }\n                try {\n                    subscriber.onData(payload, rawMessage, subscriber.context);\n                } catch (err) {\n                    this.logger(\"WebSocketConnectionPool: subscriber onData error\", err);\n                }\n            }\n        }\n\n        dispatchToAll(payload, rawMessage) {\n            const symbols = Object.keys(this.symbolEntries);\n            for (let i = 0; i < symbols.length; i++) {\n                this.dispatch(symbols[i], payload, rawMessage);\n            }\n        }\n\n        markSymbolSubscribed(symbol, metaUpdates) {\n            this.notifySubscribed(symbol, metaUpdates);\n        }\n\n        markSymbolUnsubscribed(symbol) {\n            const entry = this.symbolEntries[symbol];\n            if (!entry) {\n                return;\n            }\n            entry.subscribed = false;\n            entry.subscriptionRequested = false;\n        }\n\n        updateSymbolMetadata(symbol, updates) {\n            const entry = this.symbolEntries[symbol];\n            if (!entry) {\n                return;\n            }\n            mergeMeta(entry.meta, updates);\n        }\n\n        getSymbolMetadata(symbol) {\n            const entry = this.symbolEntries[symbol];\n            return entry ? entry.meta : null;\n        }\n\n        findSymbolByMeta(predicate) {\n            if (typeof predicate !== \"function\") {\n                return null;\n            }\n\n            const symbols = Object.keys(this.symbolEntries);\n            for (let i = 0; i < symbols.length; i++) {\n                const entry = this.symbolEntries[symbols[i]];\n                if (predicate(entry.meta, entry.symbol)) {\n                    return entry.symbol;\n                }\n            }\n\n            return null;\n        }\n\n        hasSubscribers() {\n            const symbols = Object.keys(this.symbolEntries);\n            for (let i = 0; i < symbols.length; i++) {\n                if (this.symbolEntries[symbols[i]].subscribers.length > 0) {\n                    return true;\n                }\n            }\n            return false;\n        }\n\n        maybeCloseConnection() {\n            if (this.hasSubscribers()) {\n                return;\n            }\n\n            if (this.autoCloseDelayMs > 0) {\n                this.scheduleCloseTimer();\n            } else {\n                this.closeConnection();\n            }\n        }\n\n        scheduleCloseTimer() {\n            if (this.closeTimer) {\n                return;\n            }\n\n            const self = this;\n            this.closeTimer = setTimeout(function () {\n                self.closeTimer = null;\n                if (!self.hasSubscribers()) {\n                    self.closeConnection();\n                }\n            }, this.autoCloseDelayMs);\n        }\n\n        clearCloseTimer() {\n            if (this.closeTimer) {\n                clearTimeout(this.closeTimer);\n                this.closeTimer = null;\n            }\n        }\n\n        closeConnection() {\n            this.clearReconnectTimer();\n            if (!this.ws) {\n                return;\n            }\n\n            this.wsClosedByUser = true;\n            try {\n                this.ws.close();\n            } catch (err) {\n                this.logger(\"WebSocketConnectionPool: error closing WebSocket\", err);\n            }\n            this.ws = null;\n        }\n\n        buildSubscriber(options) {\n            const opts = options || {};\n            return {\n                context: opts.context || null,\n                onData: typeof opts.onData === \"function\" ? opts.onData : null,\n                onError: typeof opts.onError === \"function\" ? opts.onError : null,\n                onSubscribed: typeof opts.onSubscribed === \"function\" ? opts.onSubscribed : null,\n                onDisconnected: typeof opts.onDisconnected === \"function\" ? opts.onDisconnected : null\n            };\n        }\n\n        buildMessageHelpers() {\n            const self = this;\n            return {\n                dispatch: function (symbol, payload, rawMessage) {\n                    self.dispatch(symbol, payload, rawMessage);\n                },\n                dispatchToAll: function (payload, rawMessage) {\n                    self.dispatchToAll(payload, rawMessage);\n                },\n                markSubscribed: function (symbol, metaUpdates) {\n                    self.markSymbolSubscribed(symbol, metaUpdates);\n                },\n                markUnsubscribed: function (symbol) {\n                    self.markSymbolUnsubscribed(symbol);\n                },\n                updateMetadata: function (symbol, updates) {\n                    self.updateSymbolMetadata(symbol, updates);\n                },\n                getMetadata: function (symbol) {\n                    return self.getSymbolMetadata(symbol);\n                },\n                findSymbol: function (predicate) {\n                    return self.findSymbolByMeta(predicate);\n                },\n                getActiveSymbols: function () {\n                    return Object.keys(self.symbolEntries);\n                }\n            };\n        }\n\n        isSocketOpen() {\n            return this.ws && this.ws.readyState === 1;\n        }\n    }\n\n    return {\n        WebSocketConnectionPool: WebSocketConnectionPool\n    };\n}));\n\ninterface WebSocketPoolGlobalRoot extends Record<string, unknown> {\n    CryptoTickerProviders?: Record<string, unknown> & {\n        WebSocketConnectionPool?: unknown;\n    };\n}\n", "/* eslint-disable @typescript-eslint/no-var-requires, @typescript-eslint/ban-ts-comment, @typescript-eslint/no-this-alias, no-var */\n// @ts-nocheck\n(function (root, factory) {\n    const globalRoot = (typeof globalThis !== \"undefined\" ? globalThis : root) as BinanceProviderGlobalRoot | undefined;\n    const args = typeof module === \"object\" && module.exports\n        ? [\n            require(\"./provider-interface\"),\n            require(\"./generic-provider\"),\n            require(\"./ticker-subscription-manager\"),\n            require(\"./connection-states\"),\n            require(\"./websocket-connection-pool\")\n        ]\n        : [\n            root?.CryptoTickerProviders,\n            root?.CryptoTickerProviders,\n            root?.CryptoTickerProviders,\n            root?.CryptoTickerConnectionStates,\n            root?.CryptoTickerProviders\n        ];\n\n    const exportsValue = factory(\n        args[0],\n        args[1],\n        args[2],\n        args[3],\n        args[4]\n    );\n\n    if (typeof module === \"object\" && module.exports) {\n        module.exports = exportsValue;\n    }\n\n    if (globalRoot) {\n        globalRoot.CryptoTickerProviders = globalRoot.CryptoTickerProviders || {};\n        globalRoot.CryptoTickerProviders.BinanceProvider = exportsValue.BinanceProvider;\n    }\n}(typeof self !== \"undefined\" ? (self as unknown as BinanceProviderGlobalRoot) : (this as unknown as BinanceProviderGlobalRoot), function (providerInterfaceModule, genericModule, managerModule, connectionStatesModule, poolModule) {\n    const ProviderInterface = providerInterfaceModule.ProviderInterface || providerInterfaceModule;\n    const GenericProvider = genericModule.GenericProvider || genericModule;\n    const TickerSubscriptionManager = managerModule.TickerSubscriptionManager || managerModule;\n    const ConnectionStates = connectionStatesModule || {\n        LIVE: \"live\",\n        DETACHED: \"detached\",\n        BACKUP: \"backup\",\n        BROKEN: \"broken\"\n    };\n    const WebSocketConnectionPool = poolModule.WebSocketConnectionPool || poolModule;\n\n    const DEFAULT_WS_RECONNECT_DELAY_MS = 5000;\n\n    function getWebSocketConstructor() {\n        if (typeof WebSocket !== \"undefined\") {\n            return WebSocket;\n        }\n\n        if (typeof window !== \"undefined\" && window.WebSocket) {\n            return window.WebSocket;\n        }\n\n        if (typeof global !== \"undefined\" && global.WebSocket) {\n            return global.WebSocket;\n        }\n\n        return null;\n    }\n\n    function toNumber(value) {\n        const parsed = parseFloat(value);\n        if (isNaN(parsed)) {\n            return 0;\n        }\n        return parsed;\n    }\n\n    function toPercent(value) {\n        return toNumber(value) / 100;\n    }\n\n    function mapIntervalToBinance(interval) {\n        switch (interval) {\n            case \"MINUTES_1\":\n                return \"1m\";\n            case \"MINUTES_5\":\n                return \"5m\";\n            case \"MINUTES_15\":\n                return \"15m\";\n            case \"HOURS_1\":\n                return \"1h\";\n            case \"HOURS_6\":\n                return \"6h\";\n            case \"HOURS_12\":\n                return \"12h\";\n            case \"DAYS_1\":\n                return \"1d\";\n            case \"DAYS_7\":\n                return \"1w\";\n            case \"MONTHS_1\":\n                return \"1M\";\n        }\n\n        return null;\n    }\n\n    class BinanceProvider extends ProviderInterface {\n        constructor(options) {\n            super(options);\n            const opts = options || {};\n            this.genericFallback = opts.genericFallback instanceof GenericProvider\n                ? opts.genericFallback\n                : new GenericProvider(options);\n\n            this.restBaseUrl = typeof opts.binanceRestBaseUrl === \"string\" && opts.binanceRestBaseUrl.length > 0\n                ? opts.binanceRestBaseUrl\n                : \"https://api.binance.com\";\n            this.wsBaseUrl = typeof opts.binanceWsBaseUrl === \"string\" && opts.binanceWsBaseUrl.length > 0\n                ? opts.binanceWsBaseUrl\n                : \"wss://stream.binance.com:9443/ws\";\n            this.symbolOverrides = opts.binanceSymbolOverrides || {};\n            this.wsReconnectDelayMs = typeof opts.retryDelayMs === \"number\" ? opts.retryDelayMs : DEFAULT_WS_RECONNECT_DELAY_MS;\n\n            const managerOptions = {\n                logger: (...args) => {\n                    this.logger(...args);\n                },\n                fetchTicker: this.fetchTickerDirect.bind(this),\n                subscribeStreaming: this.subscribeStream.bind(this),\n                unsubscribeStreaming: this.unsubscribeStream.bind(this),\n                fallbackPollIntervalMs: opts.fallbackPollIntervalMs,\n                staleTickerTimeoutMs: opts.staleTickerTimeoutMs\n            };\n\n            this.subscriptionManager = new TickerSubscriptionManager(managerOptions);\n\n            this.wsRequestId = 0;\n            // Binance multi-stream socket; pool keeps connection alive and muxes symbols.\n            this.webSocketPool = new WebSocketConnectionPool({\n                logger: (...args) => {\n                    this.logger(...args);\n                },\n                reconnectDelayMs: this.wsReconnectDelayMs,\n                createWebSocket: () => {\n                    const WebSocketCtor = getWebSocketConstructor();\n                    if (!WebSocketCtor) {\n                        this.logger(\"BinanceProvider: WebSocket not available in this environment\");\n                        return null;\n                    }\n\n                    const url = this.wsBaseUrl.replace(/\\/$/, \"\");\n                    try {\n                        return new WebSocketCtor(url);\n                    } catch (err) {\n                        this.logger(\"BinanceProvider: error creating pooled WebSocket\", err);\n                        return null;\n                    }\n                },\n                subscribe: (ws, symbol) => {\n                    this.sendBinanceSubscription(ws, symbol, true);\n                },\n                unsubscribe: (ws, symbol) => {\n                    this.sendBinanceSubscription(ws, symbol, false);\n                },\n                handleMessage: (event, helpers) => {\n                    this.handlePoolMessage(event, helpers);\n                },\n                onError: (err) => {\n                    this.logger(\"BinanceProvider: pooled WebSocket error\", err);\n                },\n                onClose: () => {\n                    this.wsRequestId = 0;\n                }\n            });\n        }\n\n        getId() {\n            return \"BINANCE\";\n        }\n\n        subscribeTicker(params, handlers) {\n            return this.subscriptionManager.subscribe(params, handlers);\n        }\n\n        getCachedTicker(key) {\n            const cached = this.subscriptionManager.getCachedTicker(key);\n            if (cached) {\n                return cached;\n            }\n            if (this.genericFallback && typeof this.genericFallback.getCachedTicker === \"function\") {\n                return this.genericFallback.getCachedTicker(key);\n            }\n            return null;\n        }\n\n        ensureConnection() {\n            const self = this;\n            this.subscriptionManager.forEachEntry(function (entry) {\n                self.subscriptionManager.ensureStreaming(entry);\n            });\n        }\n\n        async fetchTicker(params) {\n            try {\n                return await this.fetchTickerDirect(params);\n            } catch (err) {\n                this.logger(\"BinanceProvider: direct fetch failed, using fallback\", err);\n                if (this.genericFallback && typeof this.genericFallback.fetchTicker === \"function\") {\n                    return this.genericFallback.fetchTicker(params);\n                }\n                throw err;\n            }\n        }\n\n        async fetchTickerDirect(params) {\n            const symbol = this.resolveSymbol(params);\n            if (!symbol) {\n                throw new Error(\"BinanceProvider: unable to resolve symbol for \" + (params.symbol || \"\"));\n            }\n\n            const url = this.buildRestUrl(symbol);\n            try {\n                const response = await fetch(url);\n                if (!response || !response.ok) {\n                    throw new Error(\"BinanceProvider: REST response not ok for \" + symbol);\n                }\n                const json = await response.json();\n                const ticker = this.transformRestTicker(json, params, symbol);\n                ticker.connectionState = ConnectionStates.DETACHED;\n                return ticker;\n            } catch (err) {\n                this.logger(\"BinanceProvider: REST fetch error\", err);\n                if (this.genericFallback && typeof this.genericFallback.fetchTicker === \"function\") {\n                    const fallbackTicker = await this.genericFallback.fetchTicker(params);\n                    if (fallbackTicker && typeof fallbackTicker === \"object\" && !fallbackTicker.connectionState) {\n                        fallbackTicker.connectionState = ConnectionStates.BACKUP;\n                    }\n                    return fallbackTicker;\n                }\n                throw err;\n            }\n        }\n\n        subscribeStream(entry) {\n            if (!entry) {\n                return false;\n            }\n\n            const meta = this.ensureEntryMeta(entry);\n            meta.binanceSymbol = this.resolveSymbol(entry.params);\n            if (!meta.binanceSymbol) {\n                this.logger(\"BinanceProvider: cannot subscribe, unresolved symbol\", entry.params);\n                return false;\n            }\n\n            const subscriptionHandle = this.webSocketPool.subscribe(meta.binanceSymbol, {\n                context: entry,\n                onData: (payload) => {\n                    const ticker = this.transformStreamTicker(payload, entry, meta.binanceSymbol);\n                    this.subscriptionManager.handleStreamingUpdate(entry.key, ticker);\n                },\n                onSubscribed: () => {\n                    entry.streamingActive = true;\n                },\n                onDisconnected: () => {\n                    entry.streamingActive = false;\n                },\n                onError: (err) => {\n                    this.logger(\"BinanceProvider: subscription error\", err);\n                }\n            });\n\n            if (!subscriptionHandle) {\n                entry.streamingActive = false;\n                return false;\n            }\n\n            meta.poolSubscription = subscriptionHandle;\n            entry.streamingActive = true;\n            return true;\n        }\n\n        unsubscribeStream(entry) {\n            if (!entry) {\n                return true;\n            }\n\n            const meta = this.ensureEntryMeta(entry);\n            if (meta.poolSubscription && typeof meta.poolSubscription.unsubscribe === \"function\") {\n                meta.poolSubscription.unsubscribe();\n            }\n            meta.poolSubscription = null;\n            entry.streamingActive = false;\n            return true;\n        }\n\n        // Binance tickers usually end with USDT; remap PI-friendly USD symbols to live endpoints.\n        resolveSymbol(params) {\n            if (!params) {\n                return null;\n            }\n\n            const original = (params.symbol || \"\").toUpperCase();\n            if (!original) {\n                return null;\n            }\n\n            if (this.symbolOverrides && this.symbolOverrides[original]) {\n                return (this.symbolOverrides[original] || \"\").toUpperCase();\n            }\n\n            if (original.endsWith(\"USD\")) {\n                return original.slice(0, -3) + \"USDT\";\n            }\n\n            return original;\n        }\n\n        buildRestUrl(symbol) {\n            const base = this.restBaseUrl.replace(/\\/$/, \"\");\n            return base + \"/api/v3/ticker/24hr?symbol=\" + encodeURIComponent(symbol);\n        }\n\n        sendBinanceSubscription(ws, symbol, subscribe) {\n            if (!ws || !symbol) {\n                return;\n            }\n\n            const streamName = symbol.toLowerCase() + \"@ticker\";\n            const payload = {\n                method: subscribe ? \"SUBSCRIBE\" : \"UNSUBSCRIBE\",\n                params: [streamName],\n                id: this.nextWsRequestId()\n            };\n\n            try {\n                ws.send(JSON.stringify(payload));\n            } catch (err) {\n                this.logger(\"BinanceProvider: error sending subscription message\", err);\n            }\n        }\n\n        nextWsRequestId() {\n            this.wsRequestId += 1;\n            if (this.wsRequestId > 1000000) {\n                this.wsRequestId = 1;\n            }\n            return this.wsRequestId;\n        }\n\n        handlePoolMessage(event, helpers) {\n            if (!event) {\n                return;\n            }\n\n            let message = event.data;\n            if (!message) {\n                return;\n            }\n\n            if (typeof message === \"string\") {\n                try {\n                    message = JSON.parse(message);\n                } catch (err) {\n                    this.logger(\"BinanceProvider: failed to parse WebSocket message\", err);\n                    return;\n                }\n            }\n\n            if (!message) {\n                return;\n            }\n\n            if (Array.isArray(message)) {\n                return;\n            }\n\n            if (message.error) {\n                this.logger(\"BinanceProvider: WebSocket error message\", message.error);\n                return;\n            }\n\n            if (typeof message.result !== \"undefined\") {\n                return;\n            }\n\n            let payload = message;\n            if (message.data && typeof message.data === \"object\") {\n                payload = message.data;\n            }\n\n            if (!payload || typeof payload !== \"object\") {\n                return;\n            }\n\n            const symbol = (payload.s || payload.symbol || \"\").toUpperCase();\n            if (!symbol) {\n                return;\n            }\n\n            // Mark stream healthy so pool does not re-request subscription on reconnect.\n            helpers.markSubscribed(symbol);\n            helpers.dispatch(symbol, payload, message);\n        }\n\n        transformRestTicker(json, params, resolvedSymbol) {\n            const pair = params && params.symbol ? params.symbol : resolvedSymbol;\n            return {\n                changeDaily: toNumber(json[\"priceChange\"]),\n                changeDailyPercent: toPercent(json[\"priceChangePercent\"]),\n                last: toNumber(json[\"lastPrice\"]),\n                volume: toNumber(json[\"volume\"]),\n                high: toNumber(json[\"highPrice\"]),\n                low: toNumber(json[\"lowPrice\"]),\n                pair: pair,\n                pairDisplay: pair\n            };\n        }\n\n        transformStreamTicker(json, entry, resolvedSymbol) {\n            const params = entry ? entry.params : null;\n            const pair = params && params.symbol ? params.symbol : resolvedSymbol;\n            return {\n                changeDaily: toNumber(json[\"p\"] || json[\"priceChange\"]),\n                changeDailyPercent: toPercent(json[\"P\"] || json[\"priceChangePercent\"]),\n                last: toNumber(json[\"c\"] || json[\"lastPrice\"]),\n                volume: toNumber(json[\"v\"] || json[\"volume\"]),\n                high: toNumber(json[\"h\"] || json[\"highPrice\"]),\n                low: toNumber(json[\"l\"] || json[\"lowPrice\"]),\n                pair: pair,\n                pairDisplay: pair\n            };\n        }\n\n        ensureEntryMeta(entry) {\n            entry.meta = entry.meta || {};\n            return entry.meta;\n        }\n\n        async fetchCandles(params) {\n            const symbol = this.resolveSymbol(params);\n            if (!symbol) {\n                throw new Error(\"BinanceProvider: unable to resolve symbol for candles\");\n            }\n\n            const interval = mapIntervalToBinance(params.interval);\n            if (!interval) {\n                throw new Error(\"BinanceProvider: unsupported interval \" + params.interval);\n            }\n\n            const limit = Math.min(Math.max(parseInt(params.limit, 10) || 24, 1), 1000);\n            const base = this.restBaseUrl.replace(/\\/$/, \"\");\n            const url = base + \"/api/v3/klines?symbol=\" + encodeURIComponent(symbol) + \"&interval=\" + encodeURIComponent(interval) + \"&limit=\" + limit;\n\n            try {\n                const response = await fetch(url);\n                if (!response || !response.ok) {\n                    throw new Error(\"BinanceProvider: candles response not ok\");\n                }\n\n                const json = await response.json();\n                if (!Array.isArray(json)) {\n                    throw new Error(\"BinanceProvider: unexpected candles payload\");\n                }\n\n                return json.map(function (item) {\n                    return {\n                        ts: Math.floor((item[0] || 0) / 1000),\n                        open: toNumber(item[1]),\n                        high: toNumber(item[2]),\n                        low: toNumber(item[3]),\n                        close: toNumber(item[4]),\n                        volume: toNumber(item[5]),\n                        volumeQuote: toNumber(item[7])\n                    };\n                });\n            } catch (err) {\n                this.logger(\"BinanceProvider: error fetching candles\", err);\n                if (this.genericFallback && typeof this.genericFallback.fetchCandles === \"function\") {\n                    return this.genericFallback.fetchCandles(params);\n                }\n                throw err;\n            }\n        }\n    }\n\n    return {\n        BinanceProvider: BinanceProvider\n    };\n}));\n\ninterface BinanceProviderGlobalRoot extends Record<string, unknown> {\n    CryptoTickerProviders?: Record<string, unknown> & {\n        BinanceProvider?: unknown;\n    };\n    CryptoTickerConnectionStates?: Record<string, unknown>;\n}\n", "/* eslint-disable @typescript-eslint/no-var-requires, @typescript-eslint/ban-ts-comment, @typescript-eslint/no-this-alias, no-var */\n// @ts-nocheck\n(function (root, factory) {\n    const globalRoot = (typeof globalThis !== \"undefined\" ? globalThis : root) as BitfinexProviderGlobalRoot | undefined;\n    const args = typeof module === \"object\" && module.exports\n        ? [\n            require(\"./provider-interface\"),\n            require(\"./generic-provider\"),\n            require(\"./ticker-subscription-manager\"),\n            require(\"./connection-states\"),\n            require(\"./websocket-connection-pool\")\n        ]\n        : [\n            root?.CryptoTickerProviders,\n            root?.CryptoTickerProviders,\n            root?.CryptoTickerProviders,\n            root?.CryptoTickerConnectionStates,\n            root?.CryptoTickerProviders\n        ];\n\n    const exportsValue = factory(\n        args[0],\n        args[1],\n        args[2],\n        args[3],\n        args[4]\n    );\n\n    if (typeof module === \"object\" && module.exports) {\n        module.exports = exportsValue;\n    }\n\n    if (globalRoot) {\n        globalRoot.CryptoTickerProviders = globalRoot.CryptoTickerProviders || {};\n        globalRoot.CryptoTickerProviders.BitfinexProvider = exportsValue.BitfinexProvider;\n    }\n}(typeof self !== \"undefined\" ? (self as unknown as BitfinexProviderGlobalRoot) : (this as unknown as BitfinexProviderGlobalRoot), function (providerInterfaceModule, genericModule, managerModule, connectionStatesModule, poolModule) {\n    const ProviderInterface = providerInterfaceModule.ProviderInterface || providerInterfaceModule;\n    const GenericProvider = genericModule.GenericProvider || genericModule;\n    const TickerSubscriptionManager = managerModule.TickerSubscriptionManager || managerModule;\n    const ConnectionStates = connectionStatesModule || {\n        LIVE: \"live\",\n        DETACHED: \"detached\",\n        BACKUP: \"backup\",\n        BROKEN: \"broken\"\n    };\n    const WebSocketConnectionPool = poolModule.WebSocketConnectionPool || poolModule;\n\n    const DEFAULT_WS_RECONNECT_DELAY_MS = 5000;\n\n    function getWebSocketConstructor() {\n        if (typeof WebSocket !== \"undefined\") {\n            return WebSocket;\n        }\n\n        if (typeof window !== \"undefined\" && window.WebSocket) {\n            return window.WebSocket;\n        }\n\n        if (typeof global !== \"undefined\" && global.WebSocket) {\n            return global.WebSocket;\n        }\n\n        return null;\n    }\n\n    function toNumber(val) {\n        const parsed = parseFloat(val);\n        if (isNaN(parsed)) {\n            return 0;\n        }\n        return parsed;\n    }\n\n    function mapIntervalToBitfinex(interval) {\n        switch (interval) {\n            case \"MINUTES_1\":\n                return \"1m\";\n            case \"MINUTES_5\":\n                return \"5m\";\n            case \"MINUTES_15\":\n                return \"15m\";\n            case \"HOURS_1\":\n                return \"1h\";\n            case \"HOURS_6\":\n                return \"6h\";\n            case \"HOURS_12\":\n                return \"12h\";\n            case \"DAYS_1\":\n                return \"1D\";\n            case \"DAYS_7\":\n                return \"1W\";\n            case \"MONTHS_1\":\n                return \"1M\";\n        }\n\n        return null;\n    }\n\n    class BitfinexProvider extends ProviderInterface {\n        constructor(options) {\n            super(options);\n            const opts = options || {};\n            this.genericFallback = opts.genericFallback instanceof GenericProvider\n                ? opts.genericFallback\n                : new GenericProvider(options);\n\n            this.restBaseUrl = typeof opts.bitfinexRestBaseUrl === \"string\" && opts.bitfinexRestBaseUrl.length > 0\n                ? opts.bitfinexRestBaseUrl\n                : \"https://api-pub.bitfinex.com\";\n            this.wsBaseUrl = typeof opts.bitfinexWsBaseUrl === \"string\" && opts.bitfinexWsBaseUrl.length > 0\n                ? opts.bitfinexWsBaseUrl\n                : \"wss://api-pub.bitfinex.com/ws/2\";\n            this.symbolOverrides = opts.bitfinexSymbolOverrides || {};\n            this.wsReconnectDelayMs = typeof opts.retryDelayMs === \"number\" ? opts.retryDelayMs : DEFAULT_WS_RECONNECT_DELAY_MS;\n\n            const managerOptions = {\n                logger: (...args) => {\n                    this.logger(...args);\n                },\n                fetchTicker: this.fetchTickerDirect.bind(this),\n                subscribeStreaming: this.subscribeStream.bind(this),\n                unsubscribeStreaming: this.unsubscribeStream.bind(this),\n                fallbackPollIntervalMs: opts.fallbackPollIntervalMs,\n                staleTickerTimeoutMs: opts.staleTickerTimeoutMs\n            };\n\n            this.subscriptionManager = new TickerSubscriptionManager(managerOptions);\n\n            this.channelIdToSymbol = {};\n            // Bitfinex reuses one channel; store chanId metadata so unsubscribe works later.\n            this.webSocketPool = new WebSocketConnectionPool({\n                logger: (...args) => {\n                    this.logger(...args);\n                },\n                reconnectDelayMs: this.wsReconnectDelayMs,\n                createWebSocket: () => {\n                    const WebSocketCtor = getWebSocketConstructor();\n                    if (!WebSocketCtor) {\n                        this.logger(\"BitfinexProvider: WebSocket not available in this environment\");\n                        return null;\n                    }\n\n                    const url = this.wsBaseUrl.replace(/\\/$/, \"\");\n                    try {\n                        return new WebSocketCtor(url);\n                    } catch (err) {\n                        this.logger(\"BitfinexProvider: error creating pooled WebSocket\", err);\n                        return null;\n                    }\n                },\n                subscribe: (ws, symbol) => {\n                    this.sendBitfinexSubscribe(ws, symbol);\n                },\n                unsubscribe: (ws, symbol, meta) => {\n                    this.sendBitfinexUnsubscribe(ws, symbol, meta);\n                },\n                handleMessage: (event, helpers) => {\n                    this.handlePoolMessage(event, helpers);\n                },\n                onError: (err) => {\n                    this.logger(\"BitfinexProvider: pooled WebSocket error\", err);\n                },\n                onClose: () => {\n            this.channelIdToSymbol = {};\n                }\n            });\n        }\n\n        getId() {\n            return \"BITFINEX\";\n        }\n\n        subscribeTicker(params, handlers) {\n            return this.subscriptionManager.subscribe(params, handlers);\n        }\n\n        getCachedTicker(key) {\n            const cached = this.subscriptionManager.getCachedTicker(key);\n            if (cached) {\n                return cached;\n            }\n            if (this.genericFallback && typeof this.genericFallback.getCachedTicker === \"function\") {\n                return this.genericFallback.getCachedTicker(key);\n            }\n            return null;\n        }\n\n        ensureConnection() {\n            const self = this;\n            this.subscriptionManager.forEachEntry(function (entry) {\n                self.subscriptionManager.ensureStreaming(entry);\n            });\n        }\n\n        async fetchTicker(params) {\n            try {\n                return await this.fetchTickerDirect(params);\n            } catch (err) {\n                this.logger(\"BitfinexProvider: direct fetch failed, using fallback\", err);\n                if (this.genericFallback && typeof this.genericFallback.fetchTicker === \"function\") {\n                    return this.genericFallback.fetchTicker(params);\n                }\n                throw err;\n            }\n        }\n\n        async fetchTickerDirect(params) {\n            const symbol = this.resolveSymbol(params);\n            if (!symbol) {\n                throw new Error(\"BitfinexProvider: unable to resolve symbol for \" + (params.symbol || \"\"));\n            }\n\n            const url = this.buildRestUrl(symbol);\n            try {\n                const response = await fetch(url);\n                if (!response || !response.ok) {\n                    throw new Error(\"BitfinexProvider: REST response not ok for \" + symbol);\n                }\n                const json = await response.json();\n                const ticker = this.transformRestTicker(json, params, symbol);\n                ticker.connectionState = ConnectionStates.DETACHED;\n                return ticker;\n            } catch (err) {\n                this.logger(\"BitfinexProvider: REST fetch error\", err);\n                if (this.genericFallback && typeof this.genericFallback.fetchTicker === \"function\") {\n                    const fallbackTicker = await this.genericFallback.fetchTicker(params);\n                    if (fallbackTicker && typeof fallbackTicker === \"object\" && !fallbackTicker.connectionState) {\n                        fallbackTicker.connectionState = ConnectionStates.BACKUP;\n                    }\n                    return fallbackTicker;\n                }\n                throw err;\n            }\n        }\n\n        subscribeStream(entry) {\n            if (!entry) {\n                return false;\n            }\n\n            const meta = this.ensureEntryMeta(entry);\n            meta.bitfinexSymbol = this.resolveSymbol(entry.params);\n            if (!meta.bitfinexSymbol) {\n                this.logger(\"BitfinexProvider: cannot subscribe, unresolved symbol\", entry.params);\n                return false;\n            }\n\n            meta.chanId = null;\n\n            const subscriptionHandle = this.webSocketPool.subscribe(meta.bitfinexSymbol, {\n                context: entry,\n                onData: (payload) => {\n                    const ticker = this.buildTickerFromArray(payload, entry);\n                    if (ticker) {\n                        this.subscriptionManager.handleStreamingUpdate(entry.key, ticker);\n                    }\n                },\n                onSubscribed: () => {\n                    entry.streamingActive = true;\n                    const poolMeta = subscriptionHandle.getMetadata ? subscriptionHandle.getMetadata() : null;\n                    if (poolMeta && poolMeta.chanId) {\n                        meta.chanId = poolMeta.chanId;\n                        this.channelIdToSymbol[meta.chanId] = meta.bitfinexSymbol;\n                    }\n                },\n                onDisconnected: () => {\n                    entry.streamingActive = false;\n                    meta.chanId = null;\n                },\n                onError: (err) => {\n                    this.logger(\"BitfinexProvider: subscription error\", err);\n                }\n            });\n\n            if (!subscriptionHandle) {\n                entry.streamingActive = false;\n                return false;\n            }\n\n            meta.poolSubscription = subscriptionHandle;\n            entry.streamingActive = true;\n            return true;\n        }\n\n        unsubscribeStream(entry) {\n            if (!entry) {\n                return true;\n            }\n\n            const meta = this.ensureEntryMeta(entry);\n            if (meta.poolSubscription && typeof meta.poolSubscription.unsubscribe === \"function\") {\n                meta.poolSubscription.unsubscribe();\n            }\n            meta.poolSubscription = null;\n            meta.chanId = null;\n            entry.streamingActive = false;\n            return true;\n        }\n\n        resolveSymbol(params) {\n            if (!params) {\n                return null;\n            }\n\n            const original = (params.symbol || \"\").toUpperCase();\n            if (!original) {\n                return null;\n            }\n\n            if (this.symbolOverrides && this.symbolOverrides[original]) {\n                return (this.symbolOverrides[original] || \"\").toUpperCase();\n            }\n\n            const sanitized = original.replace(/[:/]/g, \"\");\n            if (!sanitized) {\n                return null;\n            }\n\n            const upper = sanitized.toUpperCase();\n            const withoutLeadingT = upper.startsWith(\"T\") ? upper.substring(1) : upper;\n            return \"t\" + withoutLeadingT;\n        }\n\n        buildRestUrl(symbol) {\n            const base = this.restBaseUrl.replace(/\\/$/, \"\");\n            return base + \"/v2/ticker/\" + encodeURIComponent(symbol);\n        }\n\n        sendBitfinexSubscribe(ws, symbol) {\n            if (!ws || !symbol) {\n                return;\n            }\n\n            const payload = {\n                event: \"subscribe\",\n                channel: \"ticker\",\n                symbol: symbol\n            };\n\n            try {\n                ws.send(JSON.stringify(payload));\n            } catch (err) {\n                this.logger(\"BitfinexProvider: error sending subscribe\", err);\n            }\n        }\n\n        sendBitfinexUnsubscribe(ws, symbol, meta) {\n            if (!ws) {\n                return;\n            }\n\n            const chanId = meta && meta.chanId;\n            if (!chanId) {\n                return;\n            }\n\n            try {\n                ws.send(JSON.stringify({\n                    event: \"unsubscribe\",\n                    chanId: chanId\n                }));\n            } catch (err) {\n                this.logger(\"BitfinexProvider: error sending unsubscribe\", err);\n            }\n        }\n\n        handlePoolMessage(event, helpers) {\n            if (!event) {\n                return;\n            }\n\n            let message = event.data;\n            if (!message) {\n                return;\n            }\n\n            if (typeof message === \"string\") {\n                try {\n                    message = JSON.parse(message);\n                } catch (err) {\n                    this.logger(\"BitfinexProvider: failed to parse WebSocket message\", err);\n                    return;\n                }\n            }\n\n            if (!message) {\n                return;\n            }\n\n            if (Array.isArray(message)) {\n                this.handleBitfinexDataArray(message, helpers);\n                return;\n            }\n\n            if (message && typeof message === \"object\") {\n                this.handleBitfinexEvent(message, helpers);\n            }\n        }\n\n        handleBitfinexEvent(eventObj, helpers) {\n            if (!eventObj || typeof eventObj !== \"object\") {\n                return;\n            }\n\n            const eventType = eventObj.event;\n            if (eventType === \"subscribed\" && eventObj.channel === \"ticker\") {\n                const symbol = typeof eventObj.symbol === \"string\" ? eventObj.symbol : \"\";\n                if (!symbol) {\n                    return;\n                }\n\n                const chanId = eventObj.chanId;\n                if (chanId) {\n                    this.channelIdToSymbol[chanId] = symbol;\n                }\n\n                helpers.markSubscribed(symbol, {\n                    chanId: chanId || null\n                });\n                return;\n            }\n\n            if (eventType === \"unsubscribed\") {\n                const chanId = eventObj.chanId;\n                let symbol = null;\n                if (chanId) {\n                    symbol = this.channelIdToSymbol[chanId] || helpers.findSymbol(function (meta) {\n                        return meta && meta.chanId === chanId;\n                    });\n                    delete this.channelIdToSymbol[chanId];\n                }\n\n                if (symbol) {\n                    helpers.markUnsubscribed(symbol);\n                    helpers.updateMetadata(symbol, { chanId: null });\n                }\n                return;\n            }\n\n            if (eventType === \"error\") {\n                this.logger(\"BitfinexProvider: subscription error\", eventObj);\n            }\n        }\n\n        handleBitfinexDataArray(arr, helpers) {\n            if (!Array.isArray(arr) || arr.length < 2) {\n                return;\n            }\n\n            const chanId = arr[0];\n            const data = arr[1];\n            if (data === \"hb\") {\n                return;\n            }\n\n            if (!Array.isArray(data)) {\n                return;\n            }\n\n            const symbol = this.channelIdToSymbol[chanId] || helpers.findSymbol(function (meta) {\n                return meta && meta.chanId === chanId;\n            });\n\n            if (!symbol) {\n                return;\n            }\n\n            helpers.dispatch(symbol, data, arr);\n        }\n\n        buildTickerFromArray(data, entry) {\n            if (!Array.isArray(data)) {\n                return null;\n            }\n\n            const params = entry ? entry.params : null;\n            const pair = params && params.symbol ? params.symbol : this.ensureEntryMeta(entry).bitfinexSymbol;\n            return {\n                changeDaily: toNumber(data[4]),\n                changeDailyPercent: toNumber(data[5]),\n                last: toNumber(data[6]),\n                volume: toNumber(data[7]),\n                high: toNumber(data[8]),\n                low: toNumber(data[9]),\n                pair: pair,\n                pairDisplay: pair\n            };\n        }\n\n        transformRestTicker(json, params, resolvedSymbol) {\n            if (!Array.isArray(json)) {\n                throw new Error(\"BitfinexProvider: unexpected REST payload for \" + resolvedSymbol);\n            }\n\n            const pair = params && params.symbol ? params.symbol : resolvedSymbol;\n            return {\n                changeDaily: toNumber(json[4]),\n                changeDailyPercent: toNumber(json[5]),\n                last: toNumber(json[6]),\n                volume: toNumber(json[7]),\n                high: toNumber(json[8]),\n                low: toNumber(json[9]),\n                pair: pair,\n                pairDisplay: pair\n            };\n        }\n\n        ensureEntryMeta(entry) {\n            entry.meta = entry.meta || {};\n            return entry.meta;\n        }\n\n        async fetchCandles(params) {\n            const symbol = this.resolveSymbol(params);\n            if (!symbol) {\n                throw new Error(\"BitfinexProvider: unable to resolve symbol for candles\");\n            }\n\n            const interval = mapIntervalToBitfinex(params.interval);\n            if (!interval) {\n                throw new Error(\"BitfinexProvider: unsupported interval \" + params.interval);\n            }\n\n            const limit = Math.min(Math.max(parseInt(params.limit, 10) || 24, 1), 1000);\n            const base = this.restBaseUrl.replace(/\\/$/, \"\");\n            const url = base + \"/v2/candles/trade:\" + interval + \":\" + encodeURIComponent(symbol) + \"/hist?limit=\" + limit;\n\n            try {\n                const response = await fetch(url);\n                if (!response || !response.ok) {\n                    throw new Error(\"BitfinexProvider: candles response not ok\");\n                }\n\n                const json = await response.json();\n                if (!Array.isArray(json)) {\n                    throw new Error(\"BitfinexProvider: unexpected candles payload\");\n                }\n\n                return json.map(function (item) {\n                    return {\n                        ts: Math.floor((item[0] || 0) / 1000),\n                        open: toNumber(item[1]),\n                        close: toNumber(item[2]),\n                        high: toNumber(item[3]),\n                        low: toNumber(item[4]),\n                        volume: toNumber(item[5]),\n                        volumeQuote: toNumber(item[5])\n                    };\n                });\n            } catch (err) {\n                this.logger(\"BitfinexProvider: error fetching candles\", err);\n                if (this.genericFallback && typeof this.genericFallback.fetchCandles === \"function\") {\n                    return this.genericFallback.fetchCandles(params);\n                }\n                throw err;\n            }\n        }\n    }\n\n    return {\n        BitfinexProvider: BitfinexProvider\n    };\n}));\n\ninterface BitfinexProviderGlobalRoot extends Record<string, unknown> {\n    CryptoTickerProviders?: Record<string, unknown> & {\n        BitfinexProvider?: unknown;\n    };\n    CryptoTickerConnectionStates?: Record<string, unknown>;\n}\n", "/* eslint-disable @typescript-eslint/no-var-requires, @typescript-eslint/ban-ts-comment, @typescript-eslint/no-this-alias, no-var */\n// @ts-nocheck\n(function (root, factory) {\n    const globalRoot = (typeof globalThis !== \"undefined\" ? globalThis : root) as YFinanceProviderGlobalRoot | undefined;\n    const args = typeof module === \"object\" && module.exports\n        ? [\n            require(\"./provider-interface\"),\n            require(\"./generic-provider\")\n        ]\n        : [\n            root?.CryptoTickerProviders,\n            root?.CryptoTickerProviders\n        ];\n\n    const exportsValue = factory(\n        args[0],\n        args[1]\n    );\n\n    if (typeof module === \"object\" && module.exports) {\n        module.exports = exportsValue;\n    }\n\n    if (globalRoot) {\n        globalRoot.CryptoTickerProviders = globalRoot.CryptoTickerProviders || {};\n        globalRoot.CryptoTickerProviders.YFinanceProvider = exportsValue.YFinanceProvider;\n    }\n}(typeof self !== \"undefined\" ? (self as unknown as YFinanceProviderGlobalRoot) : (this as unknown as YFinanceProviderGlobalRoot), function (providerInterfaceModule, genericModule) {\n    const ProviderInterface = providerInterfaceModule.ProviderInterface || providerInterfaceModule;\n    const GenericProvider = genericModule.GenericProvider || genericModule;\n\n    // Temporary GenericProvider wrapper so Yahoo wiring can ship later without breaking registry shape.\n    class YFinanceProvider extends ProviderInterface {\n        constructor(options) {\n            super(options);\n            const opts = options || {};\n            this.genericFallback = opts.genericFallback instanceof GenericProvider\n                ? opts.genericFallback\n                : new GenericProvider(options);\n        }\n\n        getId() {\n            return \"YFINANCE\";\n        }\n\n        ensureConnection() {\n            this.genericFallback.ensureConnection();\n        }\n\n        subscribeTicker(params, handlers) {\n            // TODO: implement direct Yahoo Finance streaming when available.\n            return this.genericFallback.subscribeTicker(params, handlers);\n        }\n\n        async fetchTicker(params) {\n            // TODO: implement Yahoo Finance REST call before falling back to proxy.\n            return this.genericFallback.fetchTicker(params);\n        }\n\n        getCachedTicker(key) {\n            return this.genericFallback.getCachedTicker(key);\n        }\n    }\n\n    return {\n        YFinanceProvider: YFinanceProvider\n    };\n}));\n\ninterface YFinanceProviderGlobalRoot extends Record<string, unknown> {\n    CryptoTickerProviders?: Record<string, unknown> & {\n        YFinanceProvider?: unknown;\n    };\n}\n", "/* eslint-disable @typescript-eslint/no-var-requires, @typescript-eslint/ban-ts-comment, @typescript-eslint/no-this-alias, no-var */\n// @ts-nocheck\n(function (root, factory) {\n    const globalRoot = (typeof globalThis !== \"undefined\" ? globalThis : root) as CryptoTickerProvidersGlobal | undefined;\n    const args = typeof module === \"object\" && module.exports\n        ? [\n            require(\"./generic-provider\"),\n            require(\"./binance-provider\"),\n            require(\"./bitfinex-provider\"),\n            require(\"./yfinance-provider\")\n        ]\n        : [\n            root?.CryptoTickerProviders,\n            root?.CryptoTickerProviders,\n            root?.CryptoTickerProviders,\n            root?.CryptoTickerProviders\n        ];\n\n    const exportsValue = factory(\n        args[0],\n        args[1],\n        args[2],\n        args[3]\n    );\n\n    if (typeof module === \"object\" && module.exports) {\n        module.exports = exportsValue;\n    }\n\n    if (globalRoot) {\n        globalRoot.CryptoTickerProviders = globalRoot.CryptoTickerProviders || {};\n        globalRoot.CryptoTickerProviders.ProviderRegistry = exportsValue.ProviderRegistry;\n    }\n}(typeof self !== \"undefined\" ? (self as unknown as CryptoTickerProvidersGlobal) : (this as unknown as CryptoTickerProvidersGlobal), function (genericModule, binanceModule, bitfinexModule, yfinanceModule) {\n    const GenericProvider = genericModule.GenericProvider || genericModule;\n    const BinanceProvider = binanceModule.BinanceProvider || binanceModule;\n    const BitfinexProvider = bitfinexModule.BitfinexProvider || bitfinexModule;\n    const YFinanceProvider = yfinanceModule.YFinanceProvider || yfinanceModule;\n\n    class ProviderRegistry {\n        constructor(options) {\n            const opts = options || {};\n            // Share logger/fallback timing so exchange swaps stay consistent.\n            this.logger = typeof opts.logger === \"function\" ? opts.logger : function () {};\n            this.baseUrl = opts.baseUrl || \"\";\n            this.providers = {};\n            this.fallbackPollIntervalMs = typeof opts.fallbackPollIntervalMs === \"number\" ? opts.fallbackPollIntervalMs : undefined;\n            this.staleTickerTimeoutMs = typeof opts.staleTickerTimeoutMs === \"number\" ? opts.staleTickerTimeoutMs : undefined;\n            this.binanceRestBaseUrl = typeof opts.binanceRestBaseUrl === \"string\" && opts.binanceRestBaseUrl.length > 0\n                ? opts.binanceRestBaseUrl\n                : \"https://api.binance.com\";\n            this.binanceWsBaseUrl = typeof opts.binanceWsBaseUrl === \"string\" && opts.binanceWsBaseUrl.length > 0\n                ? opts.binanceWsBaseUrl\n                : \"wss://stream.binance.com:9443/ws\";\n            this.binanceSymbolOverrides = opts.binanceSymbolOverrides || {};\n            this.bitfinexRestBaseUrl = typeof opts.bitfinexRestBaseUrl === \"string\" && opts.bitfinexRestBaseUrl.length > 0\n                ? opts.bitfinexRestBaseUrl\n                : \"https://api-pub.bitfinex.com\";\n            this.bitfinexWsBaseUrl = typeof opts.bitfinexWsBaseUrl === \"string\" && opts.bitfinexWsBaseUrl.length > 0\n                ? opts.bitfinexWsBaseUrl\n                : \"wss://api-pub.bitfinex.com/ws/2\";\n            this.bitfinexSymbolOverrides = opts.bitfinexSymbolOverrides || {};\n\n            const genericOptions = {\n                baseUrl: this.baseUrl,\n                logger: this.logger,\n                fallbackPollIntervalMs: this.fallbackPollIntervalMs,\n                staleTickerTimeoutMs: this.staleTickerTimeoutMs\n            };\n\n            this.genericProvider = opts.genericProvider instanceof GenericProvider\n                ? opts.genericProvider\n                : new GenericProvider(genericOptions);\n\n            this.register(this.genericProvider);\n            // Eager-load providers so `getProvider()` stays sync while still passing shared fallbacks + overrides.\n            this.register(new BinanceProvider({\n                baseUrl: this.baseUrl,\n                logger: this.logger,\n                fallbackPollIntervalMs: this.fallbackPollIntervalMs,\n                staleTickerTimeoutMs: this.staleTickerTimeoutMs,\n                genericFallback: this.genericProvider,\n                binanceRestBaseUrl: this.binanceRestBaseUrl,\n                binanceWsBaseUrl: this.binanceWsBaseUrl,\n                binanceSymbolOverrides: this.binanceSymbolOverrides\n            }));\n            this.register(new BitfinexProvider({\n                baseUrl: this.baseUrl,\n                logger: this.logger,\n                fallbackPollIntervalMs: this.fallbackPollIntervalMs,\n                staleTickerTimeoutMs: this.staleTickerTimeoutMs,\n                genericFallback: this.genericProvider,\n                bitfinexRestBaseUrl: this.bitfinexRestBaseUrl,\n                bitfinexWsBaseUrl: this.bitfinexWsBaseUrl,\n                bitfinexSymbolOverrides: this.bitfinexSymbolOverrides\n            }));\n            this.register(new YFinanceProvider({\n                baseUrl: this.baseUrl,\n                logger: this.logger,\n                fallbackPollIntervalMs: this.fallbackPollIntervalMs,\n                staleTickerTimeoutMs: this.staleTickerTimeoutMs,\n                genericFallback: this.genericProvider\n            }));\n        }\n\n        register(provider) {\n            if (!provider || typeof provider.getId !== \"function\") {\n                return;\n            }\n            const id = provider.getId();\n            if (id) {\n                this.providers[id.toUpperCase()] = provider;\n            }\n        }\n\n        getProvider(exchange) {\n            const key = (exchange || \"\").toUpperCase();\n            return this.providers[key] || this.genericProvider;\n        }\n\n        getGenericProvider() {\n            return this.genericProvider;\n        }\n\n        ensureAllConnections() {\n            const keys = Object.keys(this.providers);\n            for (let i = 0; i < keys.length; i++) {\n                const provider = this.providers[keys[i]];\n                if (provider && typeof provider.ensureConnection === \"function\") {\n                    provider.ensureConnection();\n                }\n            }\n        }\n    }\n\n    return {\n        ProviderRegistry: ProviderRegistry\n    };\n}));\n\ninterface CryptoTickerProvidersNamespace {\n    ProviderRegistry?: unknown;\n    [key: string]: unknown;\n}\n\ninterface CryptoTickerProvidersGlobal extends Record<string, unknown> {\n    CryptoTickerProviders?: CryptoTickerProvidersNamespace;\n}\n", "\"use strict\";\n\n(function (root: Record<string, unknown> | undefined, factory: () => CryptoTickerFormatters) {\n    const exports = factory();\n    if (typeof module === \"object\" && module.exports) {\n        module.exports = exports;\n    }\n    if (root && typeof root === \"object\") {\n        (root as FormattersGlobalRoot).CryptoTickerFormatters = exports;\n    }\n}(typeof self !== \"undefined\" ? (self as unknown as Record<string, unknown>) : (this as unknown as Record<string, unknown>), function (): CryptoTickerFormatters {\n    // Use const assertion for literal types\n    const NUMERIC_FORMATS = [\"auto\", \"full\", \"compact\", \"plain\"] as const;\n    type NumericFormatMode = typeof NUMERIC_FORMATS[number];\n\n    // Use readonly tuple for compact units\n    const COMPACT_UNITS = [\n        { value: 1000000000000, suffix: \"T\" },\n        { value: 1000000000, suffix: \"B\" },\n        { value: 1000000, suffix: \"M\" },\n        { value: 1000, suffix: \"K\" }\n    ] as const;\n\n    // Shared formatter for action + PI: handles localization, scaling, compact suffixes, and bad input.\n    function getRoundedValue(\n        value: number,\n        digits: number | string | null | undefined,\n        multiplier: number | null | undefined,\n        format?: string | null\n    ): string {\n        const formatOption = (format || \"auto\") as NumericFormatMode;\n        const parsedDigits = typeof digits === \"number\" ? digits : parseInt(String(digits ?? \"\"), 10);\n        let precision = parsedDigits;\n        if (Number.isNaN(precision) || precision < 0) {\n            precision = 2;\n        }\n\n        const scaledValue = value * (typeof multiplier === \"number\" ? multiplier : 1);\n        const absoluteValue = Math.abs(scaledValue);\n        const sign = scaledValue < 0 ? \"-\" : \"\";\n\n        function roundWithPrecision(val: number, localPrecision: number): number {\n            const pow = Math.pow(10, localPrecision);\n            return Math.round(val * pow) / pow;\n        }\n\n        function toLocale(val: number, options: Intl.NumberFormatOptions): string {\n            try {\n                return val.toLocaleString(undefined, options);\n            } catch (err) {\n                return val.toString();\n            }\n        }\n\n        let formattedValue = \"\";\n        const fixedDigits = Math.max(0, precision);\n\n        switch (formatOption) {\n            case \"full\": {\n                const roundedFull = roundWithPrecision(absoluteValue, fixedDigits);\n                formattedValue = toLocale(roundedFull, {\n                    minimumFractionDigits: fixedDigits,\n                    maximumFractionDigits: fixedDigits,\n                    useGrouping: true\n                });\n                break;\n            }\n            case \"compact\": {\n                // T=trillion, B=billion, M=million, K=thousand; pick largest threshold that fits.\n                let suffix = \"\";\n                let compactValue = absoluteValue;\n                for (const unit of COMPACT_UNITS) {\n                    if (absoluteValue >= unit.value) {\n                        suffix = unit.suffix;\n                        compactValue = absoluteValue / unit.value;\n                        break;\n                    }\n                }\n\n                const roundedCompact = roundWithPrecision(compactValue, fixedDigits);\n                formattedValue = toLocale(roundedCompact, {\n                    minimumFractionDigits: fixedDigits,\n                    maximumFractionDigits: fixedDigits,\n                    useGrouping: !suffix\n                }) + suffix;\n                break;\n            }\n            case \"plain\": {\n                const roundedPlain = roundWithPrecision(absoluteValue, fixedDigits);\n                formattedValue = toLocale(roundedPlain, {\n                    minimumFractionDigits: fixedDigits,\n                    maximumFractionDigits: fixedDigits,\n                    useGrouping: false\n                });\n                break;\n            }\n            case \"auto\":\n            default: {\n                // Legacy auto mode: add K suffix above 100k threshold only.\n                let autoSuffix = \"\";\n                let autoValue = absoluteValue;\n                if (absoluteValue > 100000) {\n                    autoSuffix = \"K\";\n                    autoValue = absoluteValue / 1000;\n                }\n\n                const roundedAuto = roundWithPrecision(autoValue, fixedDigits);\n                formattedValue = toLocale(roundedAuto, {\n                    minimumFractionDigits: fixedDigits,\n                    maximumFractionDigits: fixedDigits,\n                    useGrouping: false\n                }) + autoSuffix;\n                break;\n            }\n        }\n\n        return sign + formattedValue;\n    }\n\n    // Normalize into [0,1] for price cursors; clamp to 0.5 when min==max prevents divide-by-zero.\n    function normalizeValue(value: number, min: number, max: number): number {\n        if (max - min === 0) {\n            return 0.5;\n        }\n\n        return (value - min) / (max - min);\n    }\n\n    return {\n        getRoundedValue,\n        normalizeValue\n    };\n}));\n\ninterface FormattersGlobalRoot extends Record<string, unknown> {\n    CryptoTickerFormatters?: CryptoTickerFormatters;\n}\n\ninterface CryptoTickerFormatters {\n    getRoundedValue(\n        value: number,\n        digits: number | string | null | undefined,\n        multiplier: number | null | undefined,\n        format?: string | null\n    ): string;\n    normalizeValue(value: number, min: number, max: number): number;\n}\n", "(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.exprEval = {}));\n}(this, function (exports) { 'use strict';\n\n  var INUMBER = 'INUMBER';\n  var IOP1 = 'IOP1';\n  var IOP2 = 'IOP2';\n  var IOP3 = 'IOP3';\n  var IVAR = 'IVAR';\n  var IVARNAME = 'IVARNAME';\n  var IFUNCALL = 'IFUNCALL';\n  var IFUNDEF = 'IFUNDEF';\n  var IEXPR = 'IEXPR';\n  var IEXPREVAL = 'IEXPREVAL';\n  var IMEMBER = 'IMEMBER';\n  var IENDSTATEMENT = 'IENDSTATEMENT';\n  var IARRAY = 'IARRAY';\n\n  function Instruction(type, value) {\n    this.type = type;\n    this.value = (value !== undefined && value !== null) ? value : 0;\n  }\n\n  Instruction.prototype.toString = function () {\n    switch (this.type) {\n      case INUMBER:\n      case IOP1:\n      case IOP2:\n      case IOP3:\n      case IVAR:\n      case IVARNAME:\n      case IENDSTATEMENT:\n        return this.value;\n      case IFUNCALL:\n        return 'CALL ' + this.value;\n      case IFUNDEF:\n        return 'DEF ' + this.value;\n      case IARRAY:\n        return 'ARRAY ' + this.value;\n      case IMEMBER:\n        return '.' + this.value;\n      default:\n        return 'Invalid Instruction';\n    }\n  };\n\n  function unaryInstruction(value) {\n    return new Instruction(IOP1, value);\n  }\n\n  function binaryInstruction(value) {\n    return new Instruction(IOP2, value);\n  }\n\n  function ternaryInstruction(value) {\n    return new Instruction(IOP3, value);\n  }\n\n  function simplify(tokens, unaryOps, binaryOps, ternaryOps, values) {\n    var nstack = [];\n    var newexpression = [];\n    var n1, n2, n3;\n    var f;\n    for (var i = 0; i < tokens.length; i++) {\n      var item = tokens[i];\n      var type = item.type;\n      if (type === INUMBER || type === IVARNAME) {\n        if (Array.isArray(item.value)) {\n          nstack.push.apply(nstack, simplify(item.value.map(function (x) {\n            return new Instruction(INUMBER, x);\n          }).concat(new Instruction(IARRAY, item.value.length)), unaryOps, binaryOps, ternaryOps, values));\n        } else {\n          nstack.push(item);\n        }\n      } else if (type === IVAR && values.hasOwnProperty(item.value)) {\n        item = new Instruction(INUMBER, values[item.value]);\n        nstack.push(item);\n      } else if (type === IOP2 && nstack.length > 1) {\n        n2 = nstack.pop();\n        n1 = nstack.pop();\n        f = binaryOps[item.value];\n        item = new Instruction(INUMBER, f(n1.value, n2.value));\n        nstack.push(item);\n      } else if (type === IOP3 && nstack.length > 2) {\n        n3 = nstack.pop();\n        n2 = nstack.pop();\n        n1 = nstack.pop();\n        if (item.value === '?') {\n          nstack.push(n1.value ? n2.value : n3.value);\n        } else {\n          f = ternaryOps[item.value];\n          item = new Instruction(INUMBER, f(n1.value, n2.value, n3.value));\n          nstack.push(item);\n        }\n      } else if (type === IOP1 && nstack.length > 0) {\n        n1 = nstack.pop();\n        f = unaryOps[item.value];\n        item = new Instruction(INUMBER, f(n1.value));\n        nstack.push(item);\n      } else if (type === IEXPR) {\n        while (nstack.length > 0) {\n          newexpression.push(nstack.shift());\n        }\n        newexpression.push(new Instruction(IEXPR, simplify(item.value, unaryOps, binaryOps, ternaryOps, values)));\n      } else if (type === IMEMBER && nstack.length > 0) {\n        n1 = nstack.pop();\n        nstack.push(new Instruction(INUMBER, n1.value[item.value]));\n      } /* else if (type === IARRAY && nstack.length >= item.value) {\n        var length = item.value;\n        while (length-- > 0) {\n          newexpression.push(nstack.pop());\n        }\n        newexpression.push(new Instruction(IARRAY, item.value));\n      } */ else {\n        while (nstack.length > 0) {\n          newexpression.push(nstack.shift());\n        }\n        newexpression.push(item);\n      }\n    }\n    while (nstack.length > 0) {\n      newexpression.push(nstack.shift());\n    }\n    return newexpression;\n  }\n\n  function substitute(tokens, variable, expr) {\n    var newexpression = [];\n    for (var i = 0; i < tokens.length; i++) {\n      var item = tokens[i];\n      var type = item.type;\n      if (type === IVAR && item.value === variable) {\n        for (var j = 0; j < expr.tokens.length; j++) {\n          var expritem = expr.tokens[j];\n          var replitem;\n          if (expritem.type === IOP1) {\n            replitem = unaryInstruction(expritem.value);\n          } else if (expritem.type === IOP2) {\n            replitem = binaryInstruction(expritem.value);\n          } else if (expritem.type === IOP3) {\n            replitem = ternaryInstruction(expritem.value);\n          } else {\n            replitem = new Instruction(expritem.type, expritem.value);\n          }\n          newexpression.push(replitem);\n        }\n      } else if (type === IEXPR) {\n        newexpression.push(new Instruction(IEXPR, substitute(item.value, variable, expr)));\n      } else {\n        newexpression.push(item);\n      }\n    }\n    return newexpression;\n  }\n\n  function evaluate(tokens, expr, values) {\n    var nstack = [];\n    var n1, n2, n3;\n    var f, args, argCount;\n\n    if (isExpressionEvaluator(tokens)) {\n      return resolveExpression(tokens, values);\n    }\n\n    var numTokens = tokens.length;\n\n    for (var i = 0; i < numTokens; i++) {\n      var item = tokens[i];\n      var type = item.type;\n      if (type === INUMBER || type === IVARNAME) {\n        nstack.push(item.value);\n      } else if (type === IOP2) {\n        n2 = nstack.pop();\n        n1 = nstack.pop();\n        if (item.value === 'and') {\n          nstack.push(n1 ? !!evaluate(n2, expr, values) : false);\n        } else if (item.value === 'or') {\n          nstack.push(n1 ? true : !!evaluate(n2, expr, values));\n        } else if (item.value === '=') {\n          f = expr.binaryOps[item.value];\n          nstack.push(f(n1, evaluate(n2, expr, values), values));\n        } else {\n          f = expr.binaryOps[item.value];\n          nstack.push(f(resolveExpression(n1, values), resolveExpression(n2, values)));\n        }\n      } else if (type === IOP3) {\n        n3 = nstack.pop();\n        n2 = nstack.pop();\n        n1 = nstack.pop();\n        if (item.value === '?') {\n          nstack.push(evaluate(n1 ? n2 : n3, expr, values));\n        } else {\n          f = expr.ternaryOps[item.value];\n          nstack.push(f(resolveExpression(n1, values), resolveExpression(n2, values), resolveExpression(n3, values)));\n        }\n      } else if (type === IVAR) {\n        if (item.value in expr.functions) {\n          nstack.push(expr.functions[item.value]);\n        } else if (item.value in expr.unaryOps && expr.parser.isOperatorEnabled(item.value)) {\n          nstack.push(expr.unaryOps[item.value]);\n        } else {\n          var v = values[item.value];\n          if (v !== undefined) {\n            nstack.push(v);\n          } else {\n            throw new Error('undefined variable: ' + item.value);\n          }\n        }\n      } else if (type === IOP1) {\n        n1 = nstack.pop();\n        f = expr.unaryOps[item.value];\n        nstack.push(f(resolveExpression(n1, values)));\n      } else if (type === IFUNCALL) {\n        argCount = item.value;\n        args = [];\n        while (argCount-- > 0) {\n          args.unshift(resolveExpression(nstack.pop(), values));\n        }\n        f = nstack.pop();\n        if (f.apply && f.call) {\n          nstack.push(f.apply(undefined, args));\n        } else {\n          throw new Error(f + ' is not a function');\n        }\n      } else if (type === IFUNDEF) {\n        // Create closure to keep references to arguments and expression\n        nstack.push((function () {\n          var n2 = nstack.pop();\n          var args = [];\n          var argCount = item.value;\n          while (argCount-- > 0) {\n            args.unshift(nstack.pop());\n          }\n          var n1 = nstack.pop();\n          var f = function () {\n            var scope = Object.assign({}, values);\n            for (var i = 0, len = args.length; i < len; i++) {\n              scope[args[i]] = arguments[i];\n            }\n            return evaluate(n2, expr, scope);\n          };\n          // f.name = n1\n          Object.defineProperty(f, 'name', {\n            value: n1,\n            writable: false\n          });\n          values[n1] = f;\n          return f;\n        })());\n      } else if (type === IEXPR) {\n        nstack.push(createExpressionEvaluator(item, expr));\n      } else if (type === IEXPREVAL) {\n        nstack.push(item);\n      } else if (type === IMEMBER) {\n        n1 = nstack.pop();\n        nstack.push(n1[item.value]);\n      } else if (type === IENDSTATEMENT) {\n        nstack.pop();\n      } else if (type === IARRAY) {\n        argCount = item.value;\n        args = [];\n        while (argCount-- > 0) {\n          args.unshift(nstack.pop());\n        }\n        nstack.push(args);\n      } else {\n        throw new Error('invalid Expression');\n      }\n    }\n    if (nstack.length > 1) {\n      throw new Error('invalid Expression (parity)');\n    }\n    // Explicitly return zero to avoid test issues caused by -0\n    return nstack[0] === 0 ? 0 : resolveExpression(nstack[0], values);\n  }\n\n  function createExpressionEvaluator(token, expr, values) {\n    if (isExpressionEvaluator(token)) return token;\n    return {\n      type: IEXPREVAL,\n      value: function (scope) {\n        return evaluate(token.value, expr, scope);\n      }\n    };\n  }\n\n  function isExpressionEvaluator(n) {\n    return n && n.type === IEXPREVAL;\n  }\n\n  function resolveExpression(n, values) {\n    return isExpressionEvaluator(n) ? n.value(values) : n;\n  }\n\n  function expressionToString(tokens, toJS) {\n    var nstack = [];\n    var n1, n2, n3;\n    var f, args, argCount;\n    for (var i = 0; i < tokens.length; i++) {\n      var item = tokens[i];\n      var type = item.type;\n      if (type === INUMBER) {\n        if (typeof item.value === 'number' && item.value < 0) {\n          nstack.push('(' + item.value + ')');\n        } else if (Array.isArray(item.value)) {\n          nstack.push('[' + item.value.map(escapeValue).join(', ') + ']');\n        } else {\n          nstack.push(escapeValue(item.value));\n        }\n      } else if (type === IOP2) {\n        n2 = nstack.pop();\n        n1 = nstack.pop();\n        f = item.value;\n        if (toJS) {\n          if (f === '^') {\n            nstack.push('Math.pow(' + n1 + ', ' + n2 + ')');\n          } else if (f === 'and') {\n            nstack.push('(!!' + n1 + ' && !!' + n2 + ')');\n          } else if (f === 'or') {\n            nstack.push('(!!' + n1 + ' || !!' + n2 + ')');\n          } else if (f === '||') {\n            nstack.push('(function(a,b){ return Array.isArray(a) && Array.isArray(b) ? a.concat(b) : String(a) + String(b); }((' + n1 + '),(' + n2 + ')))');\n          } else if (f === '==') {\n            nstack.push('(' + n1 + ' === ' + n2 + ')');\n          } else if (f === '!=') {\n            nstack.push('(' + n1 + ' !== ' + n2 + ')');\n          } else if (f === '[') {\n            nstack.push(n1 + '[(' + n2 + ') | 0]');\n          } else {\n            nstack.push('(' + n1 + ' ' + f + ' ' + n2 + ')');\n          }\n        } else {\n          if (f === '[') {\n            nstack.push(n1 + '[' + n2 + ']');\n          } else {\n            nstack.push('(' + n1 + ' ' + f + ' ' + n2 + ')');\n          }\n        }\n      } else if (type === IOP3) {\n        n3 = nstack.pop();\n        n2 = nstack.pop();\n        n1 = nstack.pop();\n        f = item.value;\n        if (f === '?') {\n          nstack.push('(' + n1 + ' ? ' + n2 + ' : ' + n3 + ')');\n        } else {\n          throw new Error('invalid Expression');\n        }\n      } else if (type === IVAR || type === IVARNAME) {\n        nstack.push(item.value);\n      } else if (type === IOP1) {\n        n1 = nstack.pop();\n        f = item.value;\n        if (f === '-' || f === '+') {\n          nstack.push('(' + f + n1 + ')');\n        } else if (toJS) {\n          if (f === 'not') {\n            nstack.push('(' + '!' + n1 + ')');\n          } else if (f === '!') {\n            nstack.push('fac(' + n1 + ')');\n          } else {\n            nstack.push(f + '(' + n1 + ')');\n          }\n        } else if (f === '!') {\n          nstack.push('(' + n1 + '!)');\n        } else {\n          nstack.push('(' + f + ' ' + n1 + ')');\n        }\n      } else if (type === IFUNCALL) {\n        argCount = item.value;\n        args = [];\n        while (argCount-- > 0) {\n          args.unshift(nstack.pop());\n        }\n        f = nstack.pop();\n        nstack.push(f + '(' + args.join(', ') + ')');\n      } else if (type === IFUNDEF) {\n        n2 = nstack.pop();\n        argCount = item.value;\n        args = [];\n        while (argCount-- > 0) {\n          args.unshift(nstack.pop());\n        }\n        n1 = nstack.pop();\n        if (toJS) {\n          nstack.push('(' + n1 + ' = function(' + args.join(', ') + ') { return ' + n2 + ' })');\n        } else {\n          nstack.push('(' + n1 + '(' + args.join(', ') + ') = ' + n2 + ')');\n        }\n      } else if (type === IMEMBER) {\n        n1 = nstack.pop();\n        nstack.push(n1 + '.' + item.value);\n      } else if (type === IARRAY) {\n        argCount = item.value;\n        args = [];\n        while (argCount-- > 0) {\n          args.unshift(nstack.pop());\n        }\n        nstack.push('[' + args.join(', ') + ']');\n      } else if (type === IEXPR) {\n        nstack.push('(' + expressionToString(item.value, toJS) + ')');\n      } else if (type === IENDSTATEMENT) ; else {\n        throw new Error('invalid Expression');\n      }\n    }\n    if (nstack.length > 1) {\n      if (toJS) {\n        nstack = [ nstack.join(',') ];\n      } else {\n        nstack = [ nstack.join(';') ];\n      }\n    }\n    return String(nstack[0]);\n  }\n\n  function escapeValue(v) {\n    if (typeof v === 'string') {\n      return JSON.stringify(v).replace(/\\u2028/g, '\\\\u2028').replace(/\\u2029/g, '\\\\u2029');\n    }\n    return v;\n  }\n\n  function contains(array, obj) {\n    for (var i = 0; i < array.length; i++) {\n      if (array[i] === obj) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  function getSymbols(tokens, symbols, options) {\n    options = options || {};\n    var withMembers = !!options.withMembers;\n    var prevVar = null;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var item = tokens[i];\n      if (item.type === IVAR || item.type === IVARNAME) {\n        if (!withMembers && !contains(symbols, item.value)) {\n          symbols.push(item.value);\n        } else if (prevVar !== null) {\n          if (!contains(symbols, prevVar)) {\n            symbols.push(prevVar);\n          }\n          prevVar = item.value;\n        } else {\n          prevVar = item.value;\n        }\n      } else if (item.type === IMEMBER && withMembers && prevVar !== null) {\n        prevVar += '.' + item.value;\n      } else if (item.type === IEXPR) {\n        getSymbols(item.value, symbols, options);\n      } else if (prevVar !== null) {\n        if (!contains(symbols, prevVar)) {\n          symbols.push(prevVar);\n        }\n        prevVar = null;\n      }\n    }\n\n    if (prevVar !== null && !contains(symbols, prevVar)) {\n      symbols.push(prevVar);\n    }\n  }\n\n  function Expression(tokens, parser) {\n    this.tokens = tokens;\n    this.parser = parser;\n    this.unaryOps = parser.unaryOps;\n    this.binaryOps = parser.binaryOps;\n    this.ternaryOps = parser.ternaryOps;\n    this.functions = parser.functions;\n  }\n\n  Expression.prototype.simplify = function (values) {\n    values = values || {};\n    return new Expression(simplify(this.tokens, this.unaryOps, this.binaryOps, this.ternaryOps, values), this.parser);\n  };\n\n  Expression.prototype.substitute = function (variable, expr) {\n    if (!(expr instanceof Expression)) {\n      expr = this.parser.parse(String(expr));\n    }\n\n    return new Expression(substitute(this.tokens, variable, expr), this.parser);\n  };\n\n  Expression.prototype.evaluate = function (values) {\n    values = values || {};\n    return evaluate(this.tokens, this, values);\n  };\n\n  Expression.prototype.toString = function () {\n    return expressionToString(this.tokens, false);\n  };\n\n  Expression.prototype.symbols = function (options) {\n    options = options || {};\n    var vars = [];\n    getSymbols(this.tokens, vars, options);\n    return vars;\n  };\n\n  Expression.prototype.variables = function (options) {\n    options = options || {};\n    var vars = [];\n    getSymbols(this.tokens, vars, options);\n    var functions = this.functions;\n    return vars.filter(function (name) {\n      return !(name in functions);\n    });\n  };\n\n  Expression.prototype.toJSFunction = function (param, variables) {\n    var expr = this;\n    var f = new Function(param, 'with(this.functions) with (this.ternaryOps) with (this.binaryOps) with (this.unaryOps) { return ' + expressionToString(this.simplify(variables).tokens, true) + '; }'); // eslint-disable-line no-new-func\n    return function () {\n      return f.apply(expr, arguments);\n    };\n  };\n\n  var TEOF = 'TEOF';\n  var TOP = 'TOP';\n  var TNUMBER = 'TNUMBER';\n  var TSTRING = 'TSTRING';\n  var TPAREN = 'TPAREN';\n  var TBRACKET = 'TBRACKET';\n  var TCOMMA = 'TCOMMA';\n  var TNAME = 'TNAME';\n  var TSEMICOLON = 'TSEMICOLON';\n\n  function Token(type, value, index) {\n    this.type = type;\n    this.value = value;\n    this.index = index;\n  }\n\n  Token.prototype.toString = function () {\n    return this.type + ': ' + this.value;\n  };\n\n  function TokenStream(parser, expression) {\n    this.pos = 0;\n    this.current = null;\n    this.unaryOps = parser.unaryOps;\n    this.binaryOps = parser.binaryOps;\n    this.ternaryOps = parser.ternaryOps;\n    this.consts = parser.consts;\n    this.expression = expression;\n    this.savedPosition = 0;\n    this.savedCurrent = null;\n    this.options = parser.options;\n    this.parser = parser;\n  }\n\n  TokenStream.prototype.newToken = function (type, value, pos) {\n    return new Token(type, value, pos != null ? pos : this.pos);\n  };\n\n  TokenStream.prototype.save = function () {\n    this.savedPosition = this.pos;\n    this.savedCurrent = this.current;\n  };\n\n  TokenStream.prototype.restore = function () {\n    this.pos = this.savedPosition;\n    this.current = this.savedCurrent;\n  };\n\n  TokenStream.prototype.next = function () {\n    if (this.pos >= this.expression.length) {\n      return this.newToken(TEOF, 'EOF');\n    }\n\n    if (this.isWhitespace() || this.isComment()) {\n      return this.next();\n    } else if (this.isRadixInteger() ||\n        this.isNumber() ||\n        this.isOperator() ||\n        this.isString() ||\n        this.isParen() ||\n        this.isBracket() ||\n        this.isComma() ||\n        this.isSemicolon() ||\n        this.isNamedOp() ||\n        this.isConst() ||\n        this.isName()) {\n      return this.current;\n    } else {\n      this.parseError('Unknown character \"' + this.expression.charAt(this.pos) + '\"');\n    }\n  };\n\n  TokenStream.prototype.isString = function () {\n    var r = false;\n    var startPos = this.pos;\n    var quote = this.expression.charAt(startPos);\n\n    if (quote === '\\'' || quote === '\"') {\n      var index = this.expression.indexOf(quote, startPos + 1);\n      while (index >= 0 && this.pos < this.expression.length) {\n        this.pos = index + 1;\n        if (this.expression.charAt(index - 1) !== '\\\\') {\n          var rawString = this.expression.substring(startPos + 1, index);\n          this.current = this.newToken(TSTRING, this.unescape(rawString), startPos);\n          r = true;\n          break;\n        }\n        index = this.expression.indexOf(quote, index + 1);\n      }\n    }\n    return r;\n  };\n\n  TokenStream.prototype.isParen = function () {\n    var c = this.expression.charAt(this.pos);\n    if (c === '(' || c === ')') {\n      this.current = this.newToken(TPAREN, c);\n      this.pos++;\n      return true;\n    }\n    return false;\n  };\n\n  TokenStream.prototype.isBracket = function () {\n    var c = this.expression.charAt(this.pos);\n    if ((c === '[' || c === ']') && this.isOperatorEnabled('[')) {\n      this.current = this.newToken(TBRACKET, c);\n      this.pos++;\n      return true;\n    }\n    return false;\n  };\n\n  TokenStream.prototype.isComma = function () {\n    var c = this.expression.charAt(this.pos);\n    if (c === ',') {\n      this.current = this.newToken(TCOMMA, ',');\n      this.pos++;\n      return true;\n    }\n    return false;\n  };\n\n  TokenStream.prototype.isSemicolon = function () {\n    var c = this.expression.charAt(this.pos);\n    if (c === ';') {\n      this.current = this.newToken(TSEMICOLON, ';');\n      this.pos++;\n      return true;\n    }\n    return false;\n  };\n\n  TokenStream.prototype.isConst = function () {\n    var startPos = this.pos;\n    var i = startPos;\n    for (; i < this.expression.length; i++) {\n      var c = this.expression.charAt(i);\n      if (c.toUpperCase() === c.toLowerCase()) {\n        if (i === this.pos || (c !== '_' && c !== '.' && (c < '0' || c > '9'))) {\n          break;\n        }\n      }\n    }\n    if (i > startPos) {\n      var str = this.expression.substring(startPos, i);\n      if (str in this.consts) {\n        this.current = this.newToken(TNUMBER, this.consts[str]);\n        this.pos += str.length;\n        return true;\n      }\n    }\n    return false;\n  };\n\n  TokenStream.prototype.isNamedOp = function () {\n    var startPos = this.pos;\n    var i = startPos;\n    for (; i < this.expression.length; i++) {\n      var c = this.expression.charAt(i);\n      if (c.toUpperCase() === c.toLowerCase()) {\n        if (i === this.pos || (c !== '_' && (c < '0' || c > '9'))) {\n          break;\n        }\n      }\n    }\n    if (i > startPos) {\n      var str = this.expression.substring(startPos, i);\n      if (this.isOperatorEnabled(str) && (str in this.binaryOps || str in this.unaryOps || str in this.ternaryOps)) {\n        this.current = this.newToken(TOP, str);\n        this.pos += str.length;\n        return true;\n      }\n    }\n    return false;\n  };\n\n  TokenStream.prototype.isName = function () {\n    var startPos = this.pos;\n    var i = startPos;\n    var hasLetter = false;\n    for (; i < this.expression.length; i++) {\n      var c = this.expression.charAt(i);\n      if (c.toUpperCase() === c.toLowerCase()) {\n        if (i === this.pos && (c === '$' || c === '_')) {\n          if (c === '_') {\n            hasLetter = true;\n          }\n          continue;\n        } else if (i === this.pos || !hasLetter || (c !== '_' && (c < '0' || c > '9'))) {\n          break;\n        }\n      } else {\n        hasLetter = true;\n      }\n    }\n    if (hasLetter) {\n      var str = this.expression.substring(startPos, i);\n      this.current = this.newToken(TNAME, str);\n      this.pos += str.length;\n      return true;\n    }\n    return false;\n  };\n\n  TokenStream.prototype.isWhitespace = function () {\n    var r = false;\n    var c = this.expression.charAt(this.pos);\n    while (c === ' ' || c === '\\t' || c === '\\n' || c === '\\r') {\n      r = true;\n      this.pos++;\n      if (this.pos >= this.expression.length) {\n        break;\n      }\n      c = this.expression.charAt(this.pos);\n    }\n    return r;\n  };\n\n  var codePointPattern = /^[0-9a-f]{4}$/i;\n\n  TokenStream.prototype.unescape = function (v) {\n    var index = v.indexOf('\\\\');\n    if (index < 0) {\n      return v;\n    }\n\n    var buffer = v.substring(0, index);\n    while (index >= 0) {\n      var c = v.charAt(++index);\n      switch (c) {\n        case '\\'':\n          buffer += '\\'';\n          break;\n        case '\"':\n          buffer += '\"';\n          break;\n        case '\\\\':\n          buffer += '\\\\';\n          break;\n        case '/':\n          buffer += '/';\n          break;\n        case 'b':\n          buffer += '\\b';\n          break;\n        case 'f':\n          buffer += '\\f';\n          break;\n        case 'n':\n          buffer += '\\n';\n          break;\n        case 'r':\n          buffer += '\\r';\n          break;\n        case 't':\n          buffer += '\\t';\n          break;\n        case 'u':\n          // interpret the following 4 characters as the hex of the unicode code point\n          var codePoint = v.substring(index + 1, index + 5);\n          if (!codePointPattern.test(codePoint)) {\n            this.parseError('Illegal escape sequence: \\\\u' + codePoint);\n          }\n          buffer += String.fromCharCode(parseInt(codePoint, 16));\n          index += 4;\n          break;\n        default:\n          throw this.parseError('Illegal escape sequence: \"\\\\' + c + '\"');\n      }\n      ++index;\n      var backslash = v.indexOf('\\\\', index);\n      buffer += v.substring(index, backslash < 0 ? v.length : backslash);\n      index = backslash;\n    }\n\n    return buffer;\n  };\n\n  TokenStream.prototype.isComment = function () {\n    var c = this.expression.charAt(this.pos);\n    if (c === '/' && this.expression.charAt(this.pos + 1) === '*') {\n      this.pos = this.expression.indexOf('*/', this.pos) + 2;\n      if (this.pos === 1) {\n        this.pos = this.expression.length;\n      }\n      return true;\n    }\n    return false;\n  };\n\n  TokenStream.prototype.isRadixInteger = function () {\n    var pos = this.pos;\n\n    if (pos >= this.expression.length - 2 || this.expression.charAt(pos) !== '0') {\n      return false;\n    }\n    ++pos;\n\n    var radix;\n    var validDigit;\n    if (this.expression.charAt(pos) === 'x') {\n      radix = 16;\n      validDigit = /^[0-9a-f]$/i;\n      ++pos;\n    } else if (this.expression.charAt(pos) === 'b') {\n      radix = 2;\n      validDigit = /^[01]$/i;\n      ++pos;\n    } else {\n      return false;\n    }\n\n    var valid = false;\n    var startPos = pos;\n\n    while (pos < this.expression.length) {\n      var c = this.expression.charAt(pos);\n      if (validDigit.test(c)) {\n        pos++;\n        valid = true;\n      } else {\n        break;\n      }\n    }\n\n    if (valid) {\n      this.current = this.newToken(TNUMBER, parseInt(this.expression.substring(startPos, pos), radix));\n      this.pos = pos;\n    }\n    return valid;\n  };\n\n  TokenStream.prototype.isNumber = function () {\n    var valid = false;\n    var pos = this.pos;\n    var startPos = pos;\n    var resetPos = pos;\n    var foundDot = false;\n    var foundDigits = false;\n    var c;\n\n    while (pos < this.expression.length) {\n      c = this.expression.charAt(pos);\n      if ((c >= '0' && c <= '9') || (!foundDot && c === '.')) {\n        if (c === '.') {\n          foundDot = true;\n        } else {\n          foundDigits = true;\n        }\n        pos++;\n        valid = foundDigits;\n      } else {\n        break;\n      }\n    }\n\n    if (valid) {\n      resetPos = pos;\n    }\n\n    if (c === 'e' || c === 'E') {\n      pos++;\n      var acceptSign = true;\n      var validExponent = false;\n      while (pos < this.expression.length) {\n        c = this.expression.charAt(pos);\n        if (acceptSign && (c === '+' || c === '-')) {\n          acceptSign = false;\n        } else if (c >= '0' && c <= '9') {\n          validExponent = true;\n          acceptSign = false;\n        } else {\n          break;\n        }\n        pos++;\n      }\n\n      if (!validExponent) {\n        pos = resetPos;\n      }\n    }\n\n    if (valid) {\n      this.current = this.newToken(TNUMBER, parseFloat(this.expression.substring(startPos, pos)));\n      this.pos = pos;\n    } else {\n      this.pos = resetPos;\n    }\n    return valid;\n  };\n\n  TokenStream.prototype.isOperator = function () {\n    var startPos = this.pos;\n    var c = this.expression.charAt(this.pos);\n\n    if (c === '+' || c === '-' || c === '*' || c === '/' || c === '%' || c === '^' || c === '?' || c === ':' || c === '.') {\n      this.current = this.newToken(TOP, c);\n    } else if (c === '\u2219' || c === '\u2022') {\n      this.current = this.newToken(TOP, '*');\n    } else if (c === '>') {\n      if (this.expression.charAt(this.pos + 1) === '=') {\n        this.current = this.newToken(TOP, '>=');\n        this.pos++;\n      } else {\n        this.current = this.newToken(TOP, '>');\n      }\n    } else if (c === '<') {\n      if (this.expression.charAt(this.pos + 1) === '=') {\n        this.current = this.newToken(TOP, '<=');\n        this.pos++;\n      } else {\n        this.current = this.newToken(TOP, '<');\n      }\n    } else if (c === '|') {\n      if (this.expression.charAt(this.pos + 1) === '|') {\n        this.current = this.newToken(TOP, '||');\n        this.pos++;\n      } else {\n        return false;\n      }\n    } else if (c === '=') {\n      if (this.expression.charAt(this.pos + 1) === '=') {\n        this.current = this.newToken(TOP, '==');\n        this.pos++;\n      } else {\n        this.current = this.newToken(TOP, c);\n      }\n    } else if (c === '!') {\n      if (this.expression.charAt(this.pos + 1) === '=') {\n        this.current = this.newToken(TOP, '!=');\n        this.pos++;\n      } else {\n        this.current = this.newToken(TOP, c);\n      }\n    } else {\n      return false;\n    }\n    this.pos++;\n\n    if (this.isOperatorEnabled(this.current.value)) {\n      return true;\n    } else {\n      this.pos = startPos;\n      return false;\n    }\n  };\n\n  TokenStream.prototype.isOperatorEnabled = function (op) {\n    return this.parser.isOperatorEnabled(op);\n  };\n\n  TokenStream.prototype.getCoordinates = function () {\n    var line = 0;\n    var column;\n    var newline = -1;\n    do {\n      line++;\n      column = this.pos - newline;\n      newline = this.expression.indexOf('\\n', newline + 1);\n    } while (newline >= 0 && newline < this.pos);\n\n    return {\n      line: line,\n      column: column\n    };\n  };\n\n  TokenStream.prototype.parseError = function (msg) {\n    var coords = this.getCoordinates();\n    throw new Error('parse error [' + coords.line + ':' + coords.column + ']: ' + msg);\n  };\n\n  function ParserState(parser, tokenStream, options) {\n    this.parser = parser;\n    this.tokens = tokenStream;\n    this.current = null;\n    this.nextToken = null;\n    this.next();\n    this.savedCurrent = null;\n    this.savedNextToken = null;\n    this.allowMemberAccess = options.allowMemberAccess !== false;\n  }\n\n  ParserState.prototype.next = function () {\n    this.current = this.nextToken;\n    return (this.nextToken = this.tokens.next());\n  };\n\n  ParserState.prototype.tokenMatches = function (token, value) {\n    if (typeof value === 'undefined') {\n      return true;\n    } else if (Array.isArray(value)) {\n      return contains(value, token.value);\n    } else if (typeof value === 'function') {\n      return value(token);\n    } else {\n      return token.value === value;\n    }\n  };\n\n  ParserState.prototype.save = function () {\n    this.savedCurrent = this.current;\n    this.savedNextToken = this.nextToken;\n    this.tokens.save();\n  };\n\n  ParserState.prototype.restore = function () {\n    this.tokens.restore();\n    this.current = this.savedCurrent;\n    this.nextToken = this.savedNextToken;\n  };\n\n  ParserState.prototype.accept = function (type, value) {\n    if (this.nextToken.type === type && this.tokenMatches(this.nextToken, value)) {\n      this.next();\n      return true;\n    }\n    return false;\n  };\n\n  ParserState.prototype.expect = function (type, value) {\n    if (!this.accept(type, value)) {\n      var coords = this.tokens.getCoordinates();\n      throw new Error('parse error [' + coords.line + ':' + coords.column + ']: Expected ' + (value || type));\n    }\n  };\n\n  ParserState.prototype.parseAtom = function (instr) {\n    var unaryOps = this.tokens.unaryOps;\n    function isPrefixOperator(token) {\n      return token.value in unaryOps;\n    }\n\n    if (this.accept(TNAME) || this.accept(TOP, isPrefixOperator)) {\n      instr.push(new Instruction(IVAR, this.current.value));\n    } else if (this.accept(TNUMBER)) {\n      instr.push(new Instruction(INUMBER, this.current.value));\n    } else if (this.accept(TSTRING)) {\n      instr.push(new Instruction(INUMBER, this.current.value));\n    } else if (this.accept(TPAREN, '(')) {\n      this.parseExpression(instr);\n      this.expect(TPAREN, ')');\n    } else if (this.accept(TBRACKET, '[')) {\n      if (this.accept(TBRACKET, ']')) {\n        instr.push(new Instruction(IARRAY, 0));\n      } else {\n        var argCount = this.parseArrayList(instr);\n        instr.push(new Instruction(IARRAY, argCount));\n      }\n    } else {\n      throw new Error('unexpected ' + this.nextToken);\n    }\n  };\n\n  ParserState.prototype.parseExpression = function (instr) {\n    var exprInstr = [];\n    if (this.parseUntilEndStatement(instr, exprInstr)) {\n      return;\n    }\n    this.parseVariableAssignmentExpression(exprInstr);\n    if (this.parseUntilEndStatement(instr, exprInstr)) {\n      return;\n    }\n    this.pushExpression(instr, exprInstr);\n  };\n\n  ParserState.prototype.pushExpression = function (instr, exprInstr) {\n    for (var i = 0, len = exprInstr.length; i < len; i++) {\n      instr.push(exprInstr[i]);\n    }\n  };\n\n  ParserState.prototype.parseUntilEndStatement = function (instr, exprInstr) {\n    if (!this.accept(TSEMICOLON)) return false;\n    if (this.nextToken && this.nextToken.type !== TEOF && !(this.nextToken.type === TPAREN && this.nextToken.value === ')')) {\n      exprInstr.push(new Instruction(IENDSTATEMENT));\n    }\n    if (this.nextToken.type !== TEOF) {\n      this.parseExpression(exprInstr);\n    }\n    instr.push(new Instruction(IEXPR, exprInstr));\n    return true;\n  };\n\n  ParserState.prototype.parseArrayList = function (instr) {\n    var argCount = 0;\n\n    while (!this.accept(TBRACKET, ']')) {\n      this.parseExpression(instr);\n      ++argCount;\n      while (this.accept(TCOMMA)) {\n        this.parseExpression(instr);\n        ++argCount;\n      }\n    }\n\n    return argCount;\n  };\n\n  ParserState.prototype.parseVariableAssignmentExpression = function (instr) {\n    this.parseConditionalExpression(instr);\n    while (this.accept(TOP, '=')) {\n      var varName = instr.pop();\n      var varValue = [];\n      var lastInstrIndex = instr.length - 1;\n      if (varName.type === IFUNCALL) {\n        if (!this.tokens.isOperatorEnabled('()=')) {\n          throw new Error('function definition is not permitted');\n        }\n        for (var i = 0, len = varName.value + 1; i < len; i++) {\n          var index = lastInstrIndex - i;\n          if (instr[index].type === IVAR) {\n            instr[index] = new Instruction(IVARNAME, instr[index].value);\n          }\n        }\n        this.parseVariableAssignmentExpression(varValue);\n        instr.push(new Instruction(IEXPR, varValue));\n        instr.push(new Instruction(IFUNDEF, varName.value));\n        continue;\n      }\n      if (varName.type !== IVAR && varName.type !== IMEMBER) {\n        throw new Error('expected variable for assignment');\n      }\n      this.parseVariableAssignmentExpression(varValue);\n      instr.push(new Instruction(IVARNAME, varName.value));\n      instr.push(new Instruction(IEXPR, varValue));\n      instr.push(binaryInstruction('='));\n    }\n  };\n\n  ParserState.prototype.parseConditionalExpression = function (instr) {\n    this.parseOrExpression(instr);\n    while (this.accept(TOP, '?')) {\n      var trueBranch = [];\n      var falseBranch = [];\n      this.parseConditionalExpression(trueBranch);\n      this.expect(TOP, ':');\n      this.parseConditionalExpression(falseBranch);\n      instr.push(new Instruction(IEXPR, trueBranch));\n      instr.push(new Instruction(IEXPR, falseBranch));\n      instr.push(ternaryInstruction('?'));\n    }\n  };\n\n  ParserState.prototype.parseOrExpression = function (instr) {\n    this.parseAndExpression(instr);\n    while (this.accept(TOP, 'or')) {\n      var falseBranch = [];\n      this.parseAndExpression(falseBranch);\n      instr.push(new Instruction(IEXPR, falseBranch));\n      instr.push(binaryInstruction('or'));\n    }\n  };\n\n  ParserState.prototype.parseAndExpression = function (instr) {\n    this.parseComparison(instr);\n    while (this.accept(TOP, 'and')) {\n      var trueBranch = [];\n      this.parseComparison(trueBranch);\n      instr.push(new Instruction(IEXPR, trueBranch));\n      instr.push(binaryInstruction('and'));\n    }\n  };\n\n  var COMPARISON_OPERATORS = ['==', '!=', '<', '<=', '>=', '>', 'in'];\n\n  ParserState.prototype.parseComparison = function (instr) {\n    this.parseAddSub(instr);\n    while (this.accept(TOP, COMPARISON_OPERATORS)) {\n      var op = this.current;\n      this.parseAddSub(instr);\n      instr.push(binaryInstruction(op.value));\n    }\n  };\n\n  var ADD_SUB_OPERATORS = ['+', '-', '||'];\n\n  ParserState.prototype.parseAddSub = function (instr) {\n    this.parseTerm(instr);\n    while (this.accept(TOP, ADD_SUB_OPERATORS)) {\n      var op = this.current;\n      this.parseTerm(instr);\n      instr.push(binaryInstruction(op.value));\n    }\n  };\n\n  var TERM_OPERATORS = ['*', '/', '%'];\n\n  ParserState.prototype.parseTerm = function (instr) {\n    this.parseFactor(instr);\n    while (this.accept(TOP, TERM_OPERATORS)) {\n      var op = this.current;\n      this.parseFactor(instr);\n      instr.push(binaryInstruction(op.value));\n    }\n  };\n\n  ParserState.prototype.parseFactor = function (instr) {\n    var unaryOps = this.tokens.unaryOps;\n    function isPrefixOperator(token) {\n      return token.value in unaryOps;\n    }\n\n    this.save();\n    if (this.accept(TOP, isPrefixOperator)) {\n      if (this.current.value !== '-' && this.current.value !== '+') {\n        if (this.nextToken.type === TPAREN && this.nextToken.value === '(') {\n          this.restore();\n          this.parseExponential(instr);\n          return;\n        } else if (this.nextToken.type === TSEMICOLON || this.nextToken.type === TCOMMA || this.nextToken.type === TEOF || (this.nextToken.type === TPAREN && this.nextToken.value === ')')) {\n          this.restore();\n          this.parseAtom(instr);\n          return;\n        }\n      }\n\n      var op = this.current;\n      this.parseFactor(instr);\n      instr.push(unaryInstruction(op.value));\n    } else {\n      this.parseExponential(instr);\n    }\n  };\n\n  ParserState.prototype.parseExponential = function (instr) {\n    this.parsePostfixExpression(instr);\n    while (this.accept(TOP, '^')) {\n      this.parseFactor(instr);\n      instr.push(binaryInstruction('^'));\n    }\n  };\n\n  ParserState.prototype.parsePostfixExpression = function (instr) {\n    this.parseFunctionCall(instr);\n    while (this.accept(TOP, '!')) {\n      instr.push(unaryInstruction('!'));\n    }\n  };\n\n  ParserState.prototype.parseFunctionCall = function (instr) {\n    var unaryOps = this.tokens.unaryOps;\n    function isPrefixOperator(token) {\n      return token.value in unaryOps;\n    }\n\n    if (this.accept(TOP, isPrefixOperator)) {\n      var op = this.current;\n      this.parseAtom(instr);\n      instr.push(unaryInstruction(op.value));\n    } else {\n      this.parseMemberExpression(instr);\n      while (this.accept(TPAREN, '(')) {\n        if (this.accept(TPAREN, ')')) {\n          instr.push(new Instruction(IFUNCALL, 0));\n        } else {\n          var argCount = this.parseArgumentList(instr);\n          instr.push(new Instruction(IFUNCALL, argCount));\n        }\n      }\n    }\n  };\n\n  ParserState.prototype.parseArgumentList = function (instr) {\n    var argCount = 0;\n\n    while (!this.accept(TPAREN, ')')) {\n      this.parseExpression(instr);\n      ++argCount;\n      while (this.accept(TCOMMA)) {\n        this.parseExpression(instr);\n        ++argCount;\n      }\n    }\n\n    return argCount;\n  };\n\n  ParserState.prototype.parseMemberExpression = function (instr) {\n    this.parseAtom(instr);\n    while (this.accept(TOP, '.') || this.accept(TBRACKET, '[')) {\n      var op = this.current;\n\n      if (op.value === '.') {\n        if (!this.allowMemberAccess) {\n          throw new Error('unexpected \".\", member access is not permitted');\n        }\n\n        this.expect(TNAME);\n        instr.push(new Instruction(IMEMBER, this.current.value));\n      } else if (op.value === '[') {\n        if (!this.tokens.isOperatorEnabled('[')) {\n          throw new Error('unexpected \"[]\", arrays are disabled');\n        }\n\n        this.parseExpression(instr);\n        this.expect(TBRACKET, ']');\n        instr.push(binaryInstruction('['));\n      } else {\n        throw new Error('unexpected symbol: ' + op.value);\n      }\n    }\n  };\n\n  function add(a, b) {\n    return Number(a) + Number(b);\n  }\n\n  function sub(a, b) {\n    return a - b;\n  }\n\n  function mul(a, b) {\n    return a * b;\n  }\n\n  function div(a, b) {\n    return a / b;\n  }\n\n  function mod(a, b) {\n    return a % b;\n  }\n\n  function concat(a, b) {\n    if (Array.isArray(a) && Array.isArray(b)) {\n      return a.concat(b);\n    }\n    return '' + a + b;\n  }\n\n  function equal(a, b) {\n    return a === b;\n  }\n\n  function notEqual(a, b) {\n    return a !== b;\n  }\n\n  function greaterThan(a, b) {\n    return a > b;\n  }\n\n  function lessThan(a, b) {\n    return a < b;\n  }\n\n  function greaterThanEqual(a, b) {\n    return a >= b;\n  }\n\n  function lessThanEqual(a, b) {\n    return a <= b;\n  }\n\n  function andOperator(a, b) {\n    return Boolean(a && b);\n  }\n\n  function orOperator(a, b) {\n    return Boolean(a || b);\n  }\n\n  function inOperator(a, b) {\n    return contains(b, a);\n  }\n\n  function sinh(a) {\n    return ((Math.exp(a) - Math.exp(-a)) / 2);\n  }\n\n  function cosh(a) {\n    return ((Math.exp(a) + Math.exp(-a)) / 2);\n  }\n\n  function tanh(a) {\n    if (a === Infinity) return 1;\n    if (a === -Infinity) return -1;\n    return (Math.exp(a) - Math.exp(-a)) / (Math.exp(a) + Math.exp(-a));\n  }\n\n  function asinh(a) {\n    if (a === -Infinity) return a;\n    return Math.log(a + Math.sqrt((a * a) + 1));\n  }\n\n  function acosh(a) {\n    return Math.log(a + Math.sqrt((a * a) - 1));\n  }\n\n  function atanh(a) {\n    return (Math.log((1 + a) / (1 - a)) / 2);\n  }\n\n  function log10(a) {\n    return Math.log(a) * Math.LOG10E;\n  }\n\n  function neg(a) {\n    return -a;\n  }\n\n  function not(a) {\n    return !a;\n  }\n\n  function trunc(a) {\n    return a < 0 ? Math.ceil(a) : Math.floor(a);\n  }\n\n  function random(a) {\n    return Math.random() * (a || 1);\n  }\n\n  function factorial(a) { // a!\n    return gamma(a + 1);\n  }\n\n  function isInteger(value) {\n    return isFinite(value) && (value === Math.round(value));\n  }\n\n  var GAMMA_G = 4.7421875;\n  var GAMMA_P = [\n    0.99999999999999709182,\n    57.156235665862923517, -59.597960355475491248,\n    14.136097974741747174, -0.49191381609762019978,\n    0.33994649984811888699e-4,\n    0.46523628927048575665e-4, -0.98374475304879564677e-4,\n    0.15808870322491248884e-3, -0.21026444172410488319e-3,\n    0.21743961811521264320e-3, -0.16431810653676389022e-3,\n    0.84418223983852743293e-4, -0.26190838401581408670e-4,\n    0.36899182659531622704e-5\n  ];\n\n  // Gamma function from math.js\n  function gamma(n) {\n    var t, x;\n\n    if (isInteger(n)) {\n      if (n <= 0) {\n        return isFinite(n) ? Infinity : NaN;\n      }\n\n      if (n > 171) {\n        return Infinity; // Will overflow\n      }\n\n      var value = n - 2;\n      var res = n - 1;\n      while (value > 1) {\n        res *= value;\n        value--;\n      }\n\n      if (res === 0) {\n        res = 1; // 0! is per definition 1\n      }\n\n      return res;\n    }\n\n    if (n < 0.5) {\n      return Math.PI / (Math.sin(Math.PI * n) * gamma(1 - n));\n    }\n\n    if (n >= 171.35) {\n      return Infinity; // will overflow\n    }\n\n    if (n > 85.0) { // Extended Stirling Approx\n      var twoN = n * n;\n      var threeN = twoN * n;\n      var fourN = threeN * n;\n      var fiveN = fourN * n;\n      return Math.sqrt(2 * Math.PI / n) * Math.pow((n / Math.E), n) *\n        (1 + (1 / (12 * n)) + (1 / (288 * twoN)) - (139 / (51840 * threeN)) -\n        (571 / (2488320 * fourN)) + (163879 / (209018880 * fiveN)) +\n        (5246819 / (75246796800 * fiveN * n)));\n    }\n\n    --n;\n    x = GAMMA_P[0];\n    for (var i = 1; i < GAMMA_P.length; ++i) {\n      x += GAMMA_P[i] / (n + i);\n    }\n\n    t = n + GAMMA_G + 0.5;\n    return Math.sqrt(2 * Math.PI) * Math.pow(t, n + 0.5) * Math.exp(-t) * x;\n  }\n\n  function stringOrArrayLength(s) {\n    if (Array.isArray(s)) {\n      return s.length;\n    }\n    return String(s).length;\n  }\n\n  function hypot() {\n    var sum = 0;\n    var larg = 0;\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = Math.abs(arguments[i]);\n      var div;\n      if (larg < arg) {\n        div = larg / arg;\n        sum = (sum * div * div) + 1;\n        larg = arg;\n      } else if (arg > 0) {\n        div = arg / larg;\n        sum += div * div;\n      } else {\n        sum += arg;\n      }\n    }\n    return larg === Infinity ? Infinity : larg * Math.sqrt(sum);\n  }\n\n  function condition(cond, yep, nope) {\n    return cond ? yep : nope;\n  }\n\n  /**\n  * Decimal adjustment of a number.\n  * From @escopecz.\n  *\n  * @param {Number} value The number.\n  * @param {Integer} exp  The exponent (the 10 logarithm of the adjustment base).\n  * @return {Number} The adjusted value.\n  */\n  function roundTo(value, exp) {\n    // If the exp is undefined or zero...\n    if (typeof exp === 'undefined' || +exp === 0) {\n      return Math.round(value);\n    }\n    value = +value;\n    exp = -(+exp);\n    // If the value is not a number or the exp is not an integer...\n    if (isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {\n      return NaN;\n    }\n    // Shift\n    value = value.toString().split('e');\n    value = Math.round(+(value[0] + 'e' + (value[1] ? (+value[1] - exp) : -exp)));\n    // Shift back\n    value = value.toString().split('e');\n    return +(value[0] + 'e' + (value[1] ? (+value[1] + exp) : exp));\n  }\n\n  function setVar(name, value, variables) {\n    if (variables) variables[name] = value;\n    return value;\n  }\n\n  function arrayIndex(array, index) {\n    return array[index | 0];\n  }\n\n  function max(array) {\n    if (arguments.length === 1 && Array.isArray(array)) {\n      return Math.max.apply(Math, array);\n    } else {\n      return Math.max.apply(Math, arguments);\n    }\n  }\n\n  function min(array) {\n    if (arguments.length === 1 && Array.isArray(array)) {\n      return Math.min.apply(Math, array);\n    } else {\n      return Math.min.apply(Math, arguments);\n    }\n  }\n\n  function arrayMap(f, a) {\n    if (typeof f !== 'function') {\n      throw new Error('First argument to map is not a function');\n    }\n    if (!Array.isArray(a)) {\n      throw new Error('Second argument to map is not an array');\n    }\n    return a.map(function (x, i) {\n      return f(x, i);\n    });\n  }\n\n  function arrayFold(f, init, a) {\n    if (typeof f !== 'function') {\n      throw new Error('First argument to fold is not a function');\n    }\n    if (!Array.isArray(a)) {\n      throw new Error('Second argument to fold is not an array');\n    }\n    return a.reduce(function (acc, x, i) {\n      return f(acc, x, i);\n    }, init);\n  }\n\n  function arrayFilter(f, a) {\n    if (typeof f !== 'function') {\n      throw new Error('First argument to filter is not a function');\n    }\n    if (!Array.isArray(a)) {\n      throw new Error('Second argument to filter is not an array');\n    }\n    return a.filter(function (x, i) {\n      return f(x, i);\n    });\n  }\n\n  function stringOrArrayIndexOf(target, s) {\n    if (!(Array.isArray(s) || typeof s === 'string')) {\n      throw new Error('Second argument to indexOf is not a string or array');\n    }\n\n    return s.indexOf(target);\n  }\n\n  function arrayJoin(sep, a) {\n    if (!Array.isArray(a)) {\n      throw new Error('Second argument to join is not an array');\n    }\n\n    return a.join(sep);\n  }\n\n  function sign(x) {\n    return ((x > 0) - (x < 0)) || +x;\n  }\n\n  var ONE_THIRD = 1/3;\n  function cbrt(x) {\n    return x < 0 ? -Math.pow(-x, ONE_THIRD) : Math.pow(x, ONE_THIRD);\n  }\n\n  function expm1(x) {\n    return Math.exp(x) - 1;\n  }\n\n  function log1p(x) {\n    return Math.log(1 + x);\n  }\n\n  function log2(x) {\n    return Math.log(x) / Math.LN2;\n  }\n\n  function Parser(options) {\n    this.options = options || {};\n    this.unaryOps = {\n      sin: Math.sin,\n      cos: Math.cos,\n      tan: Math.tan,\n      asin: Math.asin,\n      acos: Math.acos,\n      atan: Math.atan,\n      sinh: Math.sinh || sinh,\n      cosh: Math.cosh || cosh,\n      tanh: Math.tanh || tanh,\n      asinh: Math.asinh || asinh,\n      acosh: Math.acosh || acosh,\n      atanh: Math.atanh || atanh,\n      sqrt: Math.sqrt,\n      cbrt: Math.cbrt || cbrt,\n      log: Math.log,\n      log2: Math.log2 || log2,\n      ln: Math.log,\n      lg: Math.log10 || log10,\n      log10: Math.log10 || log10,\n      expm1: Math.expm1 || expm1,\n      log1p: Math.log1p || log1p,\n      abs: Math.abs,\n      ceil: Math.ceil,\n      floor: Math.floor,\n      round: Math.round,\n      trunc: Math.trunc || trunc,\n      '-': neg,\n      '+': Number,\n      exp: Math.exp,\n      not: not,\n      length: stringOrArrayLength,\n      '!': factorial,\n      sign: Math.sign || sign\n    };\n\n    this.binaryOps = {\n      '+': add,\n      '-': sub,\n      '*': mul,\n      '/': div,\n      '%': mod,\n      '^': Math.pow,\n      '||': concat,\n      '==': equal,\n      '!=': notEqual,\n      '>': greaterThan,\n      '<': lessThan,\n      '>=': greaterThanEqual,\n      '<=': lessThanEqual,\n      and: andOperator,\n      or: orOperator,\n      'in': inOperator,\n      '=': setVar,\n      '[': arrayIndex\n    };\n\n    this.ternaryOps = {\n      '?': condition\n    };\n\n    this.functions = {\n      random: random,\n      fac: factorial,\n      min: min,\n      max: max,\n      hypot: Math.hypot || hypot,\n      pyt: Math.hypot || hypot, // backward compat\n      pow: Math.pow,\n      atan2: Math.atan2,\n      'if': condition,\n      gamma: gamma,\n      roundTo: roundTo,\n      map: arrayMap,\n      fold: arrayFold,\n      filter: arrayFilter,\n      indexOf: stringOrArrayIndexOf,\n      join: arrayJoin\n    };\n\n    this.consts = {\n      E: Math.E,\n      PI: Math.PI,\n      'true': true,\n      'false': false\n    };\n  }\n\n  Parser.prototype.parse = function (expr) {\n    var instr = [];\n    var parserState = new ParserState(\n      this,\n      new TokenStream(this, expr),\n      { allowMemberAccess: this.options.allowMemberAccess }\n    );\n\n    parserState.parseExpression(instr);\n    parserState.expect(TEOF, 'EOF');\n\n    return new Expression(instr, this);\n  };\n\n  Parser.prototype.evaluate = function (expr, variables) {\n    return this.parse(expr).evaluate(variables);\n  };\n\n  var sharedParser = new Parser();\n\n  Parser.parse = function (expr) {\n    return sharedParser.parse(expr);\n  };\n\n  Parser.evaluate = function (expr, variables) {\n    return sharedParser.parse(expr).evaluate(variables);\n  };\n\n  var optionNameMap = {\n    '+': 'add',\n    '-': 'subtract',\n    '*': 'multiply',\n    '/': 'divide',\n    '%': 'remainder',\n    '^': 'power',\n    '!': 'factorial',\n    '<': 'comparison',\n    '>': 'comparison',\n    '<=': 'comparison',\n    '>=': 'comparison',\n    '==': 'comparison',\n    '!=': 'comparison',\n    '||': 'concatenate',\n    'and': 'logical',\n    'or': 'logical',\n    'not': 'logical',\n    '?': 'conditional',\n    ':': 'conditional',\n    '=': 'assignment',\n    '[': 'array',\n    '()=': 'fndef'\n  };\n\n  function getOptionName(op) {\n    return optionNameMap.hasOwnProperty(op) ? optionNameMap[op] : op;\n  }\n\n  Parser.prototype.isOperatorEnabled = function (op) {\n    var optionName = getOptionName(op);\n    var operators = this.options.operators || {};\n\n    return !(optionName in operators) || !!operators[optionName];\n  };\n\n  /*!\n   Based on ndef.parser, by Raphael Graf(r@undefined.ch)\n   http://www.undefined.ch/mparser/index.html\n\n   Ported to JavaScript and modified by Matthew Crumley (email@matthewcrumley.com, http://silentmatt.com/)\n\n   You are free to use and modify this code in anyway you find useful. Please leave this comment in the code\n   to acknowledge its original source. If you feel like it, I enjoy hearing about projects that use my code,\n   but don't feel like you have to let me know or ask permission.\n  */\n\n  // Backwards compatibility\n  var index = {\n    Parser: Parser,\n    Expression: Expression\n  };\n\n  exports.Expression = Expression;\n  exports.Parser = Parser;\n  exports.default = index;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n", "'use strict';\n\ninterface ExpressionEvaluatorOptions {\n  allowedVariables?: string[];\n}\n\ninterface ParserExpression {\n  variables(options?: { withMembers?: boolean }): string[];\n  evaluate(context?: Record<string, unknown>): unknown;\n}\n\ninterface ParserInstance {\n  parse(expression: string): ParserExpression;\n}\n\ninterface ParserConstructor {\n  new (options?: unknown): ParserInstance;\n}\n\ninterface ExpressionCacheEntry {\n  expression: string;\n  compiled: ParserExpression;\n  variables: string[];\n  disallowedVariables: string[];\n}\n\ninterface ValidationResult {\n  ok: boolean;\n  error?: string;\n  variables?: string[];\n}\n\ninterface ExpressionEvaluatorExports {\n  createEvaluator(options?: ExpressionEvaluatorOptions): ExpressionEvaluator;\n  ExpressionEvaluator: typeof ExpressionEvaluator;\n  normalizeNumericValue(value: unknown): number;\n  buildBaseContext(values: Record<string, unknown> | null | undefined): Record<string, unknown>;\n  buildContext(\n    values: Record<string, unknown> | null | undefined,\n    overrides?: Record<string, unknown> | null\n  ): Record<string, unknown>;\n  allowedVariables: string[];\n}\n\nclass ExpressionEvaluator {\n  public readonly allowedVariables: string[];\n  private readonly parser: ParserInstance;\n  private cache: Record<string, ExpressionCacheEntry>;\n\n  constructor(options?: ExpressionEvaluatorOptions, ParserCtor?: ParserConstructor) {\n    const evaluatorOptions = options || {};\n    const allowed =\n      Array.isArray(evaluatorOptions.allowedVariables) && evaluatorOptions.allowedVariables.length > 0\n        ? evaluatorOptions.allowedVariables.slice()\n        : DEFAULT_ALLOWED_VARIABLES.slice();\n\n    this.allowedVariables = allowed;\n    const ParserFactory = ParserCtor || getDefaultParser();\n    this.parser = new ParserFactory({\n      operators: {\n        add: true,\n        subtract: true,\n        multiply: true,\n        divide: true,\n        remainder: true,\n        power: false,\n        factorial: false,\n        comparison: true,\n        logical: true,\n        conditional: true,\n        concatenate: false,\n        assignment: false,\n        array: false,\n        fndef: false\n      },\n      allowMemberAccess: false\n    });\n    this.cache = {};\n  }\n\n  validate(expression: unknown): ValidationResult {\n    let entry: ExpressionCacheEntry | null;\n    try {\n      entry = this.getCacheEntry(expression);\n    } catch (err) {\n      const error = err instanceof Error ? err.message : 'Invalid expression';\n      return {\n        ok: false,\n        error\n      };\n    }\n\n    if (!entry) {\n      return {\n        ok: false,\n        error: 'Expression cannot be empty'\n      };\n    }\n\n    if (entry.disallowedVariables.length > 0) {\n      return {\n        ok: false,\n        error:\n          'Unknown variables: ' +\n          entry.disallowedVariables.join(', ') +\n          '. Allowed variables: ' +\n          this.allowedVariables.join(', ')\n      };\n    }\n\n    return {\n      ok: true,\n      variables: entry.variables.slice()\n    };\n  }\n\n  evaluate(expression: unknown, variables?: Record<string, unknown> | null): unknown {\n    const entry = this.getCacheEntry(expression);\n    if (!entry) {\n      throw new Error('Expression cannot be empty');\n    }\n\n    if (entry.disallowedVariables.length > 0) {\n      throw new Error(\n        'Unknown variables: ' +\n          entry.disallowedVariables.join(', ') +\n          '. Allowed variables: ' +\n          this.allowedVariables.join(', ')\n      );\n    }\n\n    const sanitized: Record<string, unknown> = {};\n    const source = variables || {};\n    for (const name of this.allowedVariables) {\n      const rawValue = Object.prototype.hasOwnProperty.call(source, name)\n        ? (source as Record<string, unknown>)[name]\n        : undefined;\n\n      if (DEFAULT_ALLOWED_VARIABLES.indexOf(name) !== -1) {\n        sanitized[name] = normalizeNumericValue(rawValue);\n        continue;\n      }\n\n      if (typeof rawValue === 'number') {\n        sanitized[name] = Number.isFinite(rawValue) ? rawValue : 0;\n      } else if (typeof rawValue === 'boolean' || typeof rawValue === 'string') {\n        sanitized[name] = rawValue;\n      } else if (rawValue === undefined || rawValue === null) {\n        sanitized[name] = 0;\n      } else {\n        sanitized[name] = rawValue;\n      }\n    }\n\n    return entry.compiled.evaluate(sanitized);\n  }\n\n  clearCache(): void {\n    this.cache = {};\n  }\n\n  private getCacheEntry(expression: unknown): ExpressionCacheEntry | null {\n    const normalized = this.normalizeExpression(expression);\n    if (!normalized) {\n      return null;\n    }\n\n    if (this.cache[normalized]) {\n      return this.cache[normalized];\n    }\n\n    let compiled: ParserExpression;\n    try {\n      compiled = this.parser.parse(normalized);\n    } catch (err) {\n      throw this.wrapParseError(err);\n    }\n\n    const variables = compiled.variables({ withMembers: false }) || [];\n    const disallowed = variables.filter((variableName) => this.allowedVariables.indexOf(variableName) === -1);\n\n    const entry: ExpressionCacheEntry = {\n      expression: normalized,\n      compiled,\n      variables: variables.slice(),\n      disallowedVariables: disallowed.slice()\n    };\n    this.cache[normalized] = entry;\n    return entry;\n  }\n\n  private normalizeExpression(expression: unknown): string {\n    if (typeof expression !== 'string') {\n      return '';\n    }\n    return expression.trim();\n  }\n\n  private wrapParseError(error: unknown): Error {\n    const message =\n      error && typeof error === 'object' && error instanceof Error && error.message\n        ? enhanceErrorMessage(error.message)\n        : 'Invalid expression';\n    const wrappedError = new Error(message);\n    if (error && typeof error === 'object') {\n      (wrappedError as Error & { originalError?: unknown }).originalError = error;\n    }\n    return wrappedError;\n  }\n}\n\nconst DEFAULT_ALLOWED_VARIABLES = ['value', 'high', 'low', 'changeDaily', 'changeDailyPercent', 'volume'];\n\nfunction cloneArray<T>(source: T[] | null | undefined): T[] {\n  return source ? source.slice() : [];\n}\n\n// Providers sometimes send strings/null; coerce to safe numbers so expressions never throw.\nfunction normalizeNumericValue(value: unknown): number {\n  if (value === undefined || value === null) {\n    return 0;\n  }\n\n  if (typeof value === 'number') {\n    if (!Number.isFinite(value)) {\n      return 0;\n    }\n    return value;\n  }\n\n  if (typeof value === 'string' && value.trim() !== '') {\n    const parsed = Number(value);\n    if (!Number.isNaN(parsed) && Number.isFinite(parsed)) {\n      return parsed;\n    }\n  }\n\n  return 0;\n}\n\n// Canonical expression variable map keeps alerts and color rules in sync across action + PI.\nfunction buildBaseContext(values: Record<string, unknown> | null | undefined): Record<string, unknown> {\n  const source = values || {};\n  return {\n    value: normalizeNumericValue(source.last),\n    high: normalizeNumericValue(source.high),\n    low: normalizeNumericValue(source.low),\n    changeDaily: normalizeNumericValue(source.changeDaily),\n    changeDailyPercent: normalizeNumericValue(source.changeDailyPercent),\n    volume: normalizeNumericValue(source.volume)\n  };\n}\n\nfunction buildContext(\n  values: Record<string, unknown> | null | undefined,\n  overrides?: Record<string, unknown> | null\n): Record<string, unknown> {\n  const context = buildBaseContext(values);\n  if (overrides && typeof overrides === 'object') {\n    for (const key in overrides) {\n      if (Object.prototype.hasOwnProperty.call(overrides, key)) {\n        context[key] = overrides[key];\n      }\n    }\n  }\n\n  return context;\n}\n\nfunction enhanceErrorMessage(message: string): string {\n  if (!message) {\n    return 'Invalid expression';\n  }\n\n  if (message.indexOf('member access is not permitted') >= 0) {\n    return (\n      message + '. Remove object-style prefixes (for example use \"value\" instead of \"values.last\").'\n    );\n  }\n\n  return message;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction createEvaluator(options?: ExpressionEvaluatorOptions): ExpressionEvaluator {\n  return new ExpressionEvaluator(options);\n}\n\nfunction getDefaultParser(): ParserConstructor {\n  if (typeof require === 'function') {\n    try {\n      // eslint-disable-next-line @typescript-eslint/no-var-requires\n      const exprEval = require('expr-eval');\n      if (exprEval && exprEval.Parser) {\n        return exprEval.Parser as ParserConstructor;\n      }\n    } catch (err) {\n      // ignore, fall back to global\n    }\n  }\n\n  const root = typeof globalThis !== 'undefined' ? (globalThis as unknown as Record<string, unknown>) : {};\n  const parserFromGlobal = root.exprEval && (root.exprEval as Record<string, unknown>).Parser;\n  if (parserFromGlobal) {\n    return parserFromGlobal as ParserConstructor;\n  }\n\n  throw new Error('expr-eval dependency is missing');\n}\n\n(function loadExpressionEvaluator(root: Record<string, unknown> | undefined, factory: (Parser: ParserConstructor) => ExpressionEvaluatorExports) {\n  const parserCtor = getDefaultParser();\n  const exports = factory(parserCtor);\n  if (typeof module === 'object' && module.exports) {\n    module.exports = exports;\n  }\n  if (root && typeof root === 'object') {\n    (root as ExpressionEvaluatorGlobalRoot).CryptoTickerExpressionEvaluator = exports;\n  }\n})(typeof self !== 'undefined' ? (self as unknown as Record<string, unknown>) : (this as unknown as Record<string, unknown>), function buildExports(\n  Parser\n): ExpressionEvaluatorExports {\n  return {\n    createEvaluator: (options?: ExpressionEvaluatorOptions) => new ExpressionEvaluator(options, Parser),\n    ExpressionEvaluator,\n    normalizeNumericValue,\n    buildBaseContext,\n    buildContext,\n    allowedVariables: cloneArray(DEFAULT_ALLOWED_VARIABLES)\n  };\n});\n\ninterface ExpressionEvaluatorGlobalRoot extends Record<string, unknown> {\n  CryptoTickerExpressionEvaluator?: ExpressionEvaluatorExports;\n}\n", "/* eslint-disable @typescript-eslint/no-var-requires */\n\"use strict\";\n\n(function (root: Record<string, unknown> | undefined, factory: (expressionEvaluator: ExpressionEvaluatorModule | undefined) => CryptoTickerAlertManager) {\n    const expressionEvaluatorModule = typeof module === \"object\" && module.exports\n        ? require(\"./expression-evaluator\")\n        : root?.CryptoTickerExpressionEvaluator;\n\n    const dependency = factory(expressionEvaluatorModule as ExpressionEvaluatorModule | undefined);\n\n    if (typeof module === \"object\" && module.exports) {\n        module.exports = dependency;\n    }\n\n    if (root && typeof root === \"object\") {\n        (root as AlertManagerGlobalRoot).CryptoTickerAlertManager = dependency;\n    }\n}(typeof self !== \"undefined\" ? (self as unknown as Record<string, unknown>) : (this as unknown as Record<string, unknown>), function (expressionEvaluator: ExpressionEvaluatorModule | undefined): CryptoTickerAlertManager {\n    if (!expressionEvaluator) {\n        throw new Error(\"Expression evaluator dependency is missing\");\n    }\n\n    const evaluator = expressionEvaluator;\n    const alertRuleEvaluator = evaluator.createEvaluator();\n    const alertStatuses: Record<string, \"on\" | \"off\" | \"error\"> = {};\n    const alertArmedStates: Record<string, \"on\" | \"off\"> = {};\n\n    function getAlertStatus(context: string): \"on\" | \"off\" | \"error\" {\n        return alertStatuses[context] || \"off\";\n    }\n\n    function isAlertArmed(context: string): boolean {\n        return alertArmedStates[context] !== \"off\";\n    }\n\n    function disarmAlert(context: string): void {\n        alertArmedStates[context] = \"off\";\n    }\n\n    function armAlert(context: string): void {\n        alertArmedStates[context] = \"on\";\n    }\n\n    function shouldDisarmOnKeyPress(context: string): boolean {\n        return isAlertArmed(context) && getAlertStatus(context) === \"on\";\n    }\n\n    function clearContext(context: string): void {\n        delete alertStatuses[context];\n        delete alertArmedStates[context];\n    }\n\n    function evaluateAlert(params: EvaluateAlertParams): EvaluateAlertResult {\n        const context = params.context;\n        const settings = params.settings || ({} as CryptoTickerSettings & Record<string, unknown>);\n        const values = params.values || {};\n        let backgroundColor = params.backgroundColor;\n        let textColor = params.textColor;\n        let alertMode = false;\n\n        const alertRule = settings.alertRule;\n        if (!alertRule) {\n            alertStatuses[context] = \"off\";\n            return {\n                alertMode,\n                backgroundColor,\n                textColor\n            };\n        }\n\n        try {\n            const contextVariables = evaluator.buildBaseContext(values);\n            const evaluationResult = alertRuleEvaluator.evaluate(alertRule, contextVariables);\n\n            if (evaluationResult) {\n                alertStatuses[context] = \"on\";\n                if (isAlertArmed(context)) {\n                    alertMode = true;\n                    const tmp = backgroundColor;\n                    backgroundColor = textColor;\n                    textColor = tmp;\n                }\n            } else {\n                alertStatuses[context] = \"off\";\n                armAlert(context);\n            }\n        } catch (err) {\n            alertStatuses[context] = \"error\";\n            console.error(\"Error evaluating alertRule\", {\n                context,\n                settings,\n                values,\n                error: err instanceof Error ? err.message : err\n            });\n        }\n\n        return {\n            alertMode,\n            backgroundColor,\n            textColor\n        };\n    }\n\n    return {\n        evaluateAlert,\n        shouldDisarmOnKeyPress,\n        disarmAlert,\n        armAlert,\n        clearContext,\n        getAlertStatus,\n        isAlertArmed\n    };\n}));\n\ninterface AlertManagerGlobalRoot extends Record<string, unknown> {\n    CryptoTickerAlertManager?: CryptoTickerAlertManager;\n    CryptoTickerExpressionEvaluator?: ExpressionEvaluatorModule;\n}\n\ninterface EvaluateAlertParams {\n    context: string;\n    settings?: CryptoTickerSettings & Record<string, unknown>;\n    values?: CryptoTickerTickerData | Record<string, unknown>;\n    backgroundColor: string;\n    textColor: string;\n}\n\ninterface EvaluateAlertResult {\n    alertMode: boolean;\n    backgroundColor: string;\n    textColor: string;\n}\n\ninterface CryptoTickerAlertManager {\n    evaluateAlert(params: EvaluateAlertParams): EvaluateAlertResult;\n    shouldDisarmOnKeyPress(context: string): boolean;\n    disarmAlert(context: string): void;\n    armAlert(context: string): void;\n    clearContext(context: string): void;\n    getAlertStatus(context: string): \"on\" | \"off\" | \"error\";\n    isAlertArmed(context: string): boolean;\n}\n\ninterface ExpressionEvaluatorModule {\n    createEvaluator(options?: ExpressionEvaluatorOptions): ExpressionEvaluatorInstance;\n    buildBaseContext(values: Record<string, unknown>): Record<string, number>;\n}\n\ninterface ExpressionEvaluatorOptions {\n    allowedVariables?: string[];\n}\n\ninterface ExpressionEvaluatorInstance {\n    evaluate(expression: string, variables: Record<string, unknown>): unknown;\n}\n", "\"use strict\";\n\ninterface ContextDetailsEntry {\n  context: string;\n  settings: CryptoTickerSettings & Record<string, unknown>;\n}\n\ninterface SubscriptionLike {\n  unsubscribe?: () => void;\n  [key: string]: unknown;\n}\n\ninterface ConversionRateCacheEntry {\n  rate?: number;\n  fetchedAt?: number;\n  promise?: Promise<number>;\n  [key: string]: unknown;\n}\n\ninterface CandlesCacheEntry {\n  time?: number;\n  candles?: CryptoTickerCandleData[] | null;\n  [key: string]: unknown;\n}\n\ninterface LastGoodTickerEntry {\n  values: CryptoTickerTickerData;\n  timestamp: number;\n}\n\ninterface TickerStateExports {\n  setContextDetails(context: string, settings: CryptoTickerSettings & Record<string, unknown>): void;\n  getContextDetails(context: string): ContextDetailsEntry | null;\n  forEachContext(callback: (entry: ContextDetailsEntry, context: string) => void): void;\n  clearContextDetails(context: string): void;\n  setSubscription(context: string, subscription: SubscriptionLike | null): void;\n  getSubscription(context: string): SubscriptionLike | null;\n  clearSubscription(context: string): void;\n  setConnectionState(context: string, state: CryptoTickerConnectionState | string | null): void;\n  getConnectionState(context: string): CryptoTickerConnectionState | string | null;\n  clearConnectionState(context: string): void;\n  getOrCreateConversionRateEntry(key: string): ConversionRateCacheEntry;\n  setConversionRateEntry(key: string, entry: ConversionRateCacheEntry): void;\n  getCandlesCacheEntry(key: string): CandlesCacheEntry | undefined;\n  setCandlesCacheEntry(key: string, entry: CandlesCacheEntry): void;\n  resetAllState(): void;\n  setLastGoodTicker(context: string, values: CryptoTickerTickerData | null | undefined, timestamp?: number): void;\n  getLastGoodTicker(context: string): LastGoodTickerEntry | null;\n  clearLastGoodTicker(context: string): void;\n}\n\n(function loadTickerState(root: Record<string, unknown> | undefined, factory: () => TickerStateExports) {\n  const exports = factory();\n  if (typeof module === \"object\" && module.exports) {\n    module.exports = exports;\n  }\n  if (root && typeof root === \"object\") {\n    (root as TickerStateGlobalRoot).CryptoTickerState = exports;\n  }\n})(typeof self !== \"undefined\" ? (self as unknown as Record<string, unknown>) : (this as unknown as Record<string, unknown>), function buildTickerState(): TickerStateExports {\n  const contextDetails: Record<string, ContextDetailsEntry> = {};\n  const contextSubscriptions: Record<string, SubscriptionLike | null> = {};\n  const contextConnectionStates: Record<string, CryptoTickerConnectionState | string> = {};\n  const conversionRatesCache: Record<string, ConversionRateCacheEntry> = {};\n  const candlesCache: Record<string, CandlesCacheEntry> = {};\n  const lastGoodTickerValues: Record<string, LastGoodTickerEntry> = {};\n\n  function setContextDetails(context: string, settings: CryptoTickerSettings & Record<string, unknown>): void {\n    contextDetails[context] = {\n      context,\n      settings\n    };\n  }\n\n  function getContextDetails(context: string): ContextDetailsEntry | null {\n    return contextDetails[context] || null;\n  }\n\n  function forEachContext(callback: (entry: ContextDetailsEntry, context: string) => void): void {\n    Object.keys(contextDetails).forEach((ctx) => {\n      callback(contextDetails[ctx], ctx);\n    });\n  }\n\n  function clearContextDetails(context: string): void {\n    delete contextDetails[context];\n    delete lastGoodTickerValues[context];\n  }\n\n  function setSubscription(context: string, subscription: SubscriptionLike | null): void {\n    if (!context) {\n      return;\n    }\n    contextSubscriptions[context] = subscription || null;\n  }\n\n  function getSubscription(context: string): SubscriptionLike | null {\n    if (!context) {\n      return null;\n    }\n    return contextSubscriptions[context] || null;\n  }\n\n  function clearSubscription(context: string): void {\n    if (!context) {\n      return;\n    }\n    delete contextSubscriptions[context];\n  }\n\n  function setConnectionState(context: string, state: CryptoTickerConnectionState | string | null): void {\n    if (!context) {\n      return;\n    }\n    if (state) {\n      contextConnectionStates[context] = state;\n    }\n  }\n\n  function getConnectionState(context: string): CryptoTickerConnectionState | string | null {\n    if (!context) {\n      return null;\n    }\n    return contextConnectionStates[context] || null;\n  }\n\n  function clearConnectionState(context: string): void {\n    if (!context) {\n      return;\n    }\n    delete contextConnectionStates[context];\n    delete lastGoodTickerValues[context];\n  }\n\n  function getOrCreateConversionRateEntry(key: string): ConversionRateCacheEntry {\n    if (!conversionRatesCache[key]) {\n      conversionRatesCache[key] = {};\n    }\n    return conversionRatesCache[key];\n  }\n\n  function setConversionRateEntry(key: string, entry: ConversionRateCacheEntry): void {\n    conversionRatesCache[key] = entry;\n  }\n\n  function getCandlesCacheEntry(key: string): CandlesCacheEntry | undefined {\n    return candlesCache[key];\n  }\n\n  function setCandlesCacheEntry(key: string, entry: CandlesCacheEntry): void {\n    candlesCache[key] = entry;\n  }\n\n  function resetAllState(): void {\n    Object.keys(contextDetails).forEach((key) => {\n      delete contextDetails[key];\n    });\n    Object.keys(contextSubscriptions).forEach((key) => {\n      const sub = contextSubscriptions[key];\n      if (sub && typeof sub.unsubscribe === \"function\") {\n        try {\n          sub.unsubscribe();\n        } catch (err) {\n          // ignore errors while resetting state\n        }\n      }\n      delete contextSubscriptions[key];\n    });\n    Object.keys(contextConnectionStates).forEach((key) => {\n      delete contextConnectionStates[key];\n    });\n    Object.keys(conversionRatesCache).forEach((key) => {\n      delete conversionRatesCache[key];\n    });\n    Object.keys(candlesCache).forEach((key) => {\n      delete candlesCache[key];\n    });\n    Object.keys(lastGoodTickerValues).forEach((key) => {\n      delete lastGoodTickerValues[key];\n    });\n  }\n\n  function setLastGoodTicker(\n    context: string,\n    values: CryptoTickerTickerData | null | undefined,\n    timestamp?: number\n  ): void {\n    if (!context || !values) {\n      return;\n    }\n\n    const safeTimestamp = typeof timestamp === \"number\" ? timestamp : Date.now();\n    lastGoodTickerValues[context] = {\n      values: Object.assign({}, values),\n      timestamp: safeTimestamp\n    };\n  }\n\n  function getLastGoodTicker(context: string): LastGoodTickerEntry | null {\n    if (!context) {\n      return null;\n    }\n\n    return lastGoodTickerValues[context] || null;\n  }\n\n  function clearLastGoodTicker(context: string): void {\n    if (!context) {\n      return;\n    }\n\n    delete lastGoodTickerValues[context];\n  }\n\n  return {\n    setContextDetails,\n    getContextDetails,\n    forEachContext,\n    clearContextDetails,\n    setSubscription,\n    getSubscription,\n    clearSubscription,\n    setConnectionState,\n    getConnectionState,\n    clearConnectionState,\n    getOrCreateConversionRateEntry,\n    setConversionRateEntry,\n    getCandlesCacheEntry,\n    setCandlesCacheEntry,\n    resetAllState,\n    setLastGoodTicker,\n    getLastGoodTicker,\n    clearLastGoodTicker\n  };\n});\n\ninterface TickerStateGlobalRoot extends Record<string, unknown> {\n  CryptoTickerState?: TickerStateExports;\n}\n", "/* eslint-disable @typescript-eslint/no-var-requires */\n\"use strict\";\n\n(function (root: Record<string, unknown> | undefined, factory: (tickerState: TickerStateModule, globalRoot: GlobalRootScope) => CryptoTickerSettingsManager) {\n    const globalScope = typeof globalThis !== \"undefined\" ? globalThis : root;\n    const tickerStateModule = (typeof module === \"object\" && module.exports\n        ? require(\"./ticker-state\")\n        : root?.CryptoTickerState) as TickerStateModule;\n\n    const exportsValue = factory(tickerStateModule, globalScope as GlobalRootScope);\n\n    if (typeof module === \"object\" && module.exports) {\n        module.exports = exportsValue;\n    }\n\n    if (root && typeof root === \"object\") {\n        (root as GlobalRootScope).CryptoTickerSettingsManager = exportsValue;\n    }\n}(typeof self !== \"undefined\" ? (self as unknown as Record<string, unknown>) : (this as unknown as Record<string, unknown>), function buildSettingsManager(tickerState: TickerStateModule, globalRoot: GlobalRootScope): CryptoTickerSettingsManager {\n    function requireOrNull(modulePath: string): DefaultSettingsModule | null {\n        if (typeof require === \"function\") {\n            try {\n                return require(modulePath);\n            } catch (err) {\n                return null;\n            }\n        }\n\n        return null;\n    }\n\n    function resolveDefaultSettingsModule(): DefaultSettingsModule | null {\n        if (globalRoot && typeof globalRoot.CryptoTickerDefaults !== \"undefined\") {\n            return globalRoot.CryptoTickerDefaults as DefaultSettingsModule;\n        }\n        return requireOrNull(\"./default-settings\");\n    }\n\n    const defaultSettingsModule = resolveDefaultSettingsModule();\n\n    function ensureDefaultSettingsModule(): DefaultSettingsModule {\n        if (!defaultSettingsModule) {\n            throw new Error(\"Default settings module is not available\");\n        }\n        return defaultSettingsModule;\n    }\n\n    function applyDefaultSettings(partial: unknown): CryptoTickerSettings & Record<string, unknown> {\n        const moduleRef = ensureDefaultSettingsModule();\n        if (typeof moduleRef.applyDefaults === \"function\") {\n            return moduleRef.applyDefaults(partial);\n        }\n        if (moduleRef.defaultSettings) {\n            return Object.assign({}, moduleRef.defaultSettings, partial || {});\n        }\n        return Object.assign({}, partial || {}) as CryptoTickerSettings & Record<string, unknown>;\n    }\n\n    function getDefaultSettingsSnapshot(): CryptoTickerSettings & Record<string, unknown> {\n        const moduleRef = ensureDefaultSettingsModule();\n        if (typeof moduleRef.getDefaultSettings === \"function\") {\n            return moduleRef.getDefaultSettings();\n        }\n        if (moduleRef.defaultSettings) {\n            return JSON.parse(JSON.stringify(moduleRef.defaultSettings));\n        }\n        return {} as CryptoTickerSettings & Record<string, unknown>;\n    }\n\n    const defaultSettings = getDefaultSettingsSnapshot();\n\n    function refreshSettings(options: RefreshSettingsOptions): CryptoTickerSettings & Record<string, unknown> {\n        const context = options.context;\n        const settings = options.settings;\n        const updateSubscription = options.updateSubscription;\n\n        const normalizedSettings = applyDefaultSettings(settings);\n        tickerState.setContextDetails(context, normalizedSettings);\n\n        if (typeof updateSubscription === \"function\") {\n            updateSubscription(normalizedSettings);\n        }\n\n        return normalizedSettings;\n    }\n\n    const settingsSchema = defaultSettingsModule && defaultSettingsModule.settingsSchema\n        ? defaultSettingsModule.settingsSchema\n        : null;\n\n    return {\n        applyDefaultSettings,\n        getDefaultSettingsSnapshot,\n        defaultSettings,\n        settingsSchema,\n        refreshSettings\n    };\n}));\n\ninterface CryptoTickerSettingsManager {\n    applyDefaultSettings(partial: unknown): CryptoTickerSettings & Record<string, unknown>;\n    getDefaultSettingsSnapshot(): CryptoTickerSettings & Record<string, unknown>;\n    defaultSettings: CryptoTickerSettings & Record<string, unknown>;\n    settingsSchema: unknown;\n    refreshSettings(options: RefreshSettingsOptions): CryptoTickerSettings & Record<string, unknown>;\n}\n\ninterface RefreshSettingsOptions {\n    context: string;\n    settings: unknown;\n    updateSubscription?: (settings: CryptoTickerSettings & Record<string, unknown>) => void;\n}\n\ninterface TickerStateModule {\n    setContextDetails(context: string, settings: CryptoTickerSettings & Record<string, unknown>): void;\n}\n\ninterface DefaultSettingsModule {\n    settingsSchema?: unknown;\n    defaultSettings?: CryptoTickerSettings & Record<string, unknown>;\n    getDefaultSettings?: () => CryptoTickerSettings & Record<string, unknown>;\n    applyDefaults?: (partial: unknown) => CryptoTickerSettings & Record<string, unknown>;\n}\n\ninterface GlobalRootScope extends Record<string, unknown> {\n    CryptoTickerDefaults?: DefaultSettingsModule;\n    CryptoTickerState?: TickerStateModule;\n    CryptoTickerSettingsManager?: CryptoTickerSettingsManager;\n}\n", "\"use strict\";\n\n// Using as const for immutable constants with literal types\nconst CONSTANTS = {\n    TIMESTAMP_SECONDS_THRESHOLD: 9_999_999_999,\n    DEFAULT_PRICE_BAR_POSITION: 0.5\n} as const;\n\ntype CryptoTickerConstants = typeof CONSTANTS;\n\ninterface GlobalCryptoTickerScope extends Record<string, unknown> {\n    CryptoTickerConstants?: CryptoTickerConstants;\n}\n\n(function factoryLoader(root: GlobalCryptoTickerScope, factory: () => CryptoTickerConstants) {\n    const exports = factory();\n    if (typeof module === \"object\" && module.exports) {\n        module.exports = exports;\n    } else {\n        const current = root.CryptoTickerConstants || ({} as Partial<CryptoTickerConstants>);\n        root.CryptoTickerConstants = Object.assign({}, current, exports) as CryptoTickerConstants;\n    }\n}((typeof globalThis !== \"undefined\" ? globalThis : self) as GlobalCryptoTickerScope, function buildConstants(): CryptoTickerConstants {\n    return CONSTANTS;\n}));\n", "/* eslint-disable @typescript-eslint/ban-ts-comment */\n// @ts-nocheck\n\"use strict\";\n\n(function (root: Record<string, unknown> | undefined, factory: () => ConnectionStatusIconsModule) {\n    const exportsValue = factory();\n\n    if (typeof module === \"object\" && module.exports) {\n        module.exports = exportsValue;\n    }\n\n    if (root && typeof root === \"object\") {\n        (root as ConnectionStatusIconsGlobalRoot).CryptoTickerConnectionStatusIcons = exportsValue;\n    }\n}(typeof self !== \"undefined\" ? (self as unknown as Record<string, unknown>) : (this as unknown as Record<string, unknown>), function buildConnectionStatusIcons(): ConnectionStatusIconsModule {\n    function getFallbackConnectionStates() {\n        return {\n            LIVE: \"live\",\n            DETACHED: \"detached\",\n            BACKUP: \"backup\",\n            BROKEN: \"broken\"\n        };\n    }\n\n    function normalizeConnectionStates(states: Record<string, string> | null | undefined) {\n        if (!states || typeof states !== \"object\") {\n            return getFallbackConnectionStates();\n        }\n\n        const fallback = getFallbackConnectionStates();\n        const normalized = {} as Record<string, string>;\n\n        for (const key in fallback) {\n            if (!Object.prototype.hasOwnProperty.call(fallback, key)) {\n                continue;\n            }\n\n            const fallbackValue = fallback[key];\n            const candidate = states[key];\n            normalized[key] = typeof candidate === \"string\" && candidate ? candidate : fallbackValue;\n        }\n\n        return normalized;\n    }\n\n    function renderConnectionStatusIcon(params: RenderConnectionStatusIconParams) {\n        const canvasContext = params.canvasContext;\n        const canvas = params.canvas;\n        const state = params.state;\n        const color = params.color;\n        const sizeMultiplier = params.sizeMultiplier;\n        const position = params.position;\n        const providedConnectionStates = params.connectionStates;\n\n        if (!canvas || !canvasContext || !state) {\n            return;\n        }\n\n        const connectionStates = normalizeConnectionStates(providedConnectionStates);\n\n        const pos = (position || \"OFF\").toUpperCase();\n        if (pos === \"OFF\") {\n            return;\n        }\n\n        const iconState = String(state).toLowerCase();\n        const multiplier = typeof sizeMultiplier === \"number\" && Number.isFinite(sizeMultiplier) && sizeMultiplier > 0 ? sizeMultiplier : 1;\n        const iconSize = 20 * multiplier;\n        const margin = 4 * multiplier;\n\n        let x = canvas.width - iconSize - margin;\n        let y = margin;\n        if (pos === \"BOTTOM_LEFT\") {\n            x = margin;\n            y = canvas.height - iconSize - margin;\n        }\n\n        canvasContext.save();\n        canvasContext.translate(x, y);\n        canvasContext.lineWidth = Math.max(1.5 * multiplier, 1);\n        canvasContext.strokeStyle = color;\n        canvasContext.fillStyle = color;\n\n        function drawPolygon(points: number[][]) {\n            if (!Array.isArray(points) || points.length === 0) {\n                return;\n            }\n            canvasContext.beginPath();\n            for (let i = 0; i < points.length; i++) {\n                const pt = points[i];\n                const px = pt[0] * iconSize;\n                const py = pt[1] * iconSize;\n                if (i === 0) {\n                    canvasContext.moveTo(px, py);\n                } else {\n                    canvasContext.lineTo(px, py);\n                }\n            }\n            canvasContext.closePath();\n            canvasContext.fill();\n        }\n\n        if (iconState === connectionStates.LIVE) {\n            drawPolygon([\n                [0.7545784909869392, 0],\n                [0.18263591551829597, 0.5685964091677761],\n                [0.3947756629367107, 0.5685964091677761],\n                [0.23171302126434715, 1],\n                [0.8173281041988991, 0.43136761054941897],\n                [0.6051523764976793, 0.43136761054941897]\n            ]);\n        } else if (iconState === connectionStates.DETACHED) {\n            drawPolygon([\n                [0.0, 0.45], [0.4, 0.45], [0.4, 0.6], [0.0, 0.6]\n            ]);\n            drawPolygon([\n                [0.6, 0.45], [1.0, 0.45], [1.0, 0.6], [0.6, 0.6]\n            ]);\n        } else if (iconState === connectionStates.BACKUP) {\n            drawPolygon([\n                [0.0, 0.3], [0.4, 0.3], [0.4, 0.38], [0.0, 0.38]\n            ]);\n            drawPolygon([\n                [0.6, 0.3], [1.0, 0.3], [1.0, 0.38], [0.6, 0.38]\n            ]);\n\n            drawPolygon([\n                [0.0, 0.62], [0.4, 0.62], [0.4, 0.7], [0.0, 0.7]\n            ]);\n            drawPolygon([\n                [0.6, 0.62], [1.0, 0.62], [1.0, 0.7], [0.6, 0.7]\n            ]);\n        } else if (iconState === connectionStates.BROKEN) {\n            canvasContext.save();\n            canvasContext.fillStyle = \"#ff0000\";\n\n            canvasContext.beginPath();\n            canvasContext.moveTo(iconSize * 0.46, iconSize * 0.32);\n            canvasContext.lineTo(iconSize * 0.42, iconSize * 0.38);\n            canvasContext.lineTo(iconSize * 0.46, iconSize * 0.44);\n            canvasContext.lineTo(iconSize * 0.41, iconSize * 0.50);\n            canvasContext.lineTo(iconSize * 0.43, iconSize * 0.88);\n            canvasContext.lineTo(iconSize * 0.30, iconSize * 0.73);\n            canvasContext.lineTo(iconSize * 0.18, iconSize * 0.62);\n            canvasContext.bezierCurveTo(\n                iconSize * 0.08, iconSize * 0.52,\n                iconSize * 0.08, iconSize * 0.38,\n                iconSize * 0.15, iconSize * 0.28\n            );\n            canvasContext.bezierCurveTo(\n                iconSize * 0.25, iconSize * 0.16,\n                iconSize * 0.40, iconSize * 0.20,\n                iconSize * 0.46, iconSize * 0.32\n            );\n            canvasContext.closePath();\n            canvasContext.fill();\n\n            canvasContext.beginPath();\n            canvasContext.moveTo(iconSize * 0.54, iconSize * 0.28);\n            canvasContext.lineTo(iconSize * 0.58, iconSize * 0.34);\n            canvasContext.lineTo(iconSize * 0.54, iconSize * 0.40);\n            canvasContext.lineTo(iconSize * 0.59, iconSize * 0.46);\n            canvasContext.lineTo(iconSize * 0.57, iconSize * 0.84);\n            canvasContext.lineTo(iconSize * 0.70, iconSize * 0.69);\n            canvasContext.lineTo(iconSize * 0.82, iconSize * 0.58);\n            canvasContext.bezierCurveTo(\n                iconSize * 0.92, iconSize * 0.48,\n                iconSize * 0.92, iconSize * 0.34,\n                iconSize * 0.85, iconSize * 0.24\n            );\n            canvasContext.bezierCurveTo(\n                iconSize * 0.75, iconSize * 0.12,\n                iconSize * 0.60, iconSize * 0.16,\n                iconSize * 0.54, iconSize * 0.28\n            );\n            canvasContext.closePath();\n            canvasContext.fill();\n\n            canvasContext.restore();\n        }\n\n        canvasContext.restore();\n    }\n\n    return {\n        renderConnectionStatusIcon: renderConnectionStatusIcon\n    };\n}));\n\ninterface RenderConnectionStatusIconParams {\n    canvasContext: CanvasRenderingContext2D;\n    canvas: HTMLCanvasElement;\n    state: string;\n    color: string;\n    sizeMultiplier: number;\n    position: string;\n    connectionStates?: Record<string, string>;\n}\n\ninterface ConnectionStatusIconsModule {\n    renderConnectionStatusIcon: (params: RenderConnectionStatusIconParams) => void;\n}\n\ninterface ConnectionStatusIconsGlobalRoot extends Record<string, unknown> {\n    CryptoTickerConnectionStatusIcons?: ConnectionStatusIconsModule;\n}\n\n", "/* eslint-disable @typescript-eslint/no-var-requires, @typescript-eslint/ban-ts-comment */\n// @ts-nocheck\n\"use strict\";\n\n(function (root: Record<string, unknown> | undefined, factory: (\n    alertManager: unknown,\n    formatters: unknown,\n    expressionEvaluator: unknown,\n    constants: Record<string, unknown> | undefined,\n    connectionStatusIcons: unknown\n) => unknown) {\n    const dependencyArgs = typeof module === \"object\" && module.exports\n        ? [\n            require(\"./alert-manager\") as unknown,\n            require(\"./formatters\") as unknown,\n            require(\"./expression-evaluator\") as unknown,\n            require(\"./constants\") as Record<string, unknown>,\n            require(\"./connection-status-icons\") as unknown\n        ]\n        : [\n            root?.CryptoTickerAlertManager,\n            root?.CryptoTickerFormatters,\n            root?.CryptoTickerExpressionEvaluator,\n            root?.CryptoTickerConstants as Record<string, unknown> | undefined,\n            root?.CryptoTickerConnectionStatusIcons\n        ];\n\n    const exportsValue = factory(\n        dependencyArgs[0],\n        dependencyArgs[1],\n        dependencyArgs[2],\n        dependencyArgs[3],\n        dependencyArgs[4]\n    );\n\n    if (typeof module === \"object\" && module.exports) {\n        module.exports = exportsValue;\n    }\n\n    if (root && typeof root === \"object\") {\n        (root as CanvasRendererGlobalRoot).CryptoTickerCanvasRenderer = exportsValue;\n    }\n}(typeof self !== \"undefined\" ? (self as unknown as Record<string, unknown>) : (this as unknown as Record<string, unknown>), function (\n    alertManager,\n    formatters,\n    expressionEvaluator,\n    constants,\n    connectionStatusIcons\n) {\n    if (!alertManager) {\n        throw new Error(\"Alert manager dependency is missing\");\n    }\n    if (!formatters) {\n        throw new Error(\"Formatters dependency is missing\");\n    }\n    if (!expressionEvaluator) {\n        throw new Error(\"Expression evaluator dependency is missing\");\n    }\n\n    const sharedConstants = constants || {};\n    const TIMESTAMP_SECONDS_THRESHOLD = typeof sharedConstants.TIMESTAMP_SECONDS_THRESHOLD === \"number\" ? sharedConstants.TIMESTAMP_SECONDS_THRESHOLD : 9999999999;\n    const DEFAULT_PRICE_BAR_POSITION = typeof sharedConstants.DEFAULT_PRICE_BAR_POSITION === \"number\" ? sharedConstants.DEFAULT_PRICE_BAR_POSITION : 0.5;\n\n    function createColorRuleEvaluator() {\n        const allowed = expressionEvaluator.allowedVariables.slice(0);\n        const extras = [\n            \"alert\",\n            \"backgroundColor\",\n            \"textColor\",\n            \"defaultBackgroundColor\",\n            \"defaultTextColor\"\n        ];\n        for (let i = 0; i < extras.length; i++) {\n            if (allowed.indexOf(extras[i]) === -1) {\n                allowed.push(extras[i]);\n            }\n        }\n        return expressionEvaluator.createEvaluator({\n            allowedVariables: allowed\n        });\n    }\n\n    const colorRuleEvaluator = createColorRuleEvaluator();\n    const connectionStatusIconsModule = connectionStatusIcons && typeof connectionStatusIcons === \"object\" ? connectionStatusIcons : null;\n    const renderConnectionStatusIcon = connectionStatusIconsModule && typeof connectionStatusIconsModule.renderConnectionStatusIcon === \"function\"\n        ? connectionStatusIconsModule.renderConnectionStatusIcon\n        : function renderConnectionStatusIconFallback() {};\n\n    function getCanvasSizeMultiplier(canvasWidth, canvasHeight) {\n        return Math.max(canvasWidth / 144, canvasHeight / 144);\n    }\n\n    function getCandlesDisplayCount(settings) {\n        const parsed = parseInt(settings[\"candlesDisplayed\"]);\n        if (isNaN(parsed)) {\n            return 20;\n        }\n        return Math.min(60, Math.max(5, parsed));\n    }\n\n    /**\n     * Draw the equilateral price cursor at the given anchor; uses equilateral geometry to center base and tip.\n     *\n     * @param {CanvasRenderingContext2D} canvasContext Target context.\n     * @param {number} cursorPositionX Triangle center X.\n     * @param {number} lineY Baseline Y used for centering.\n     * @param {number} triangleSide Side length.\n     * @param {string} fillStyle Fill color.\n     */\n    function drawPriceCursorTriangle(canvasContext, cursorPositionX, lineY, triangleSide, fillStyle) {\n        const triangleHeight = Math.sqrt(0.75 * Math.pow(triangleSide, 2));\n        canvasContext.beginPath();\n        canvasContext.moveTo(cursorPositionX - (triangleSide / 2), lineY - (triangleHeight / 3));\n        canvasContext.lineTo(cursorPositionX + (triangleSide / 2), lineY - (triangleHeight / 3));\n        canvasContext.lineTo(cursorPositionX, lineY + (triangleHeight * 2 / 3));\n        canvasContext.fillStyle = fillStyle;\n        canvasContext.fill();\n    }\n\n    function splitMessageIntoLines(canvasContext, message, maxWidth, font) {\n        if (!message && message !== 0) {\n            return [\"\"];\n        }\n\n        const rawSegments = String(message).split(/\\r?\\n/);\n        const lines = [];\n\n        function splitLongWord(word) {\n            const characters = word.split(\"\");\n            const chunks = [];\n            let current = \"\";\n            for (let i = 0; i < characters.length; i++) {\n                const candidate = current + characters[i];\n                if (canvasContext.measureText(candidate).width > maxWidth && current) {\n                    chunks.push(current);\n                    current = characters[i];\n                } else {\n                    current = candidate;\n                }\n            }\n            if (current) {\n                chunks.push(current);\n            }\n            return chunks;\n        }\n\n        canvasContext.font = font;\n\n        for (let i = 0; i < rawSegments.length; i++) {\n            const segment = rawSegments[i];\n            if (!segment || segment.trim() === \"\") {\n                lines.push(\"\");\n                continue;\n            }\n\n            const words = segment.trim().split(/\\s+/);\n            let currentLine = words.shift() || \"\";\n\n            while (words.length > 0) {\n                const word = words.shift();\n                const candidate = currentLine ? currentLine + \" \" + word : word;\n\n                if (canvasContext.measureText(candidate).width <= maxWidth) {\n                    currentLine = candidate;\n                    continue;\n                }\n\n                if (currentLine) {\n                    lines.push(currentLine);\n                }\n\n                if (canvasContext.measureText(word).width <= maxWidth) {\n                    currentLine = word;\n                } else {\n                    const chunks = splitLongWord(word);\n                    for (let c = 0; c < chunks.length - 1; c++) {\n                        lines.push(chunks[c]);\n                    }\n                    currentLine = chunks.length > 0 ? chunks[chunks.length - 1] : \"\";\n                }\n            }\n\n            if (currentLine) {\n                lines.push(currentLine);\n            }\n        }\n\n        if (lines.length === 0) {\n            lines.push(\"\");\n        }\n\n        return lines;\n    }\n\n    function formatTimestampForDisplay(timestamp) {\n        if (timestamp === null || timestamp === undefined) {\n            return null;\n        }\n\n        const numericTimestamp = typeof timestamp === \"number\" ? timestamp : parseFloat(timestamp);\n        if (!Number.isFinite(numericTimestamp)) {\n            return null;\n        }\n\n        const normalized = numericTimestamp > TIMESTAMP_SECONDS_THRESHOLD ? numericTimestamp : numericTimestamp * 1000;\n        const date = new Date(normalized);\n        if (isNaN(date.getTime())) {\n            return null;\n        }\n\n        try {\n            return date.toLocaleTimeString([], { hour: \"2-digit\", minute: \"2-digit\" });\n        } catch (err) {\n            return date.toISOString();\n        }\n    }\n\n    function renderMessageCanvas(params) {\n        const canvas = params.canvas;\n        const canvasContext = params.canvasContext;\n        const message = params.message;\n        const backgroundColor = params.backgroundColor || \"#000000\";\n        const textColor = params.textColor || \"#ffffff\";\n        const fontFamily = params.font || \"Lato\";\n        const explicitFontSize = params.fontSize;\n        const connectionStates = params.connectionStates;\n        const connectionState = params.connectionState;\n        const connectionIconSetting = (params.displayConnectionStatusIcon || \"OFF\").toUpperCase();\n\n        const canvasWidth = canvas.width;\n        const canvasHeight = canvas.height;\n        const sizeMultiplier = getCanvasSizeMultiplier(canvasWidth, canvasHeight);\n        const padding = 12 * sizeMultiplier;\n        const baseFontSize = explicitFontSize ? explicitFontSize * sizeMultiplier : Math.max(22 * sizeMultiplier, 14);\n        const font = \"bold \" + baseFontSize + \"px \" + fontFamily;\n        const lineHeight = baseFontSize * 1.25;\n\n        canvasContext.clearRect(0, 0, canvasWidth, canvasHeight);\n        canvasContext.fillStyle = backgroundColor;\n        canvasContext.fillRect(0, 0, canvasWidth, canvasHeight);\n\n        const maxLineWidth = canvasWidth - (padding * 2);\n        const lines = splitMessageIntoLines(canvasContext, message, maxLineWidth, font);\n\n        let availableHeight = canvasHeight - (padding * 2);\n        if (connectionIconSetting !== \"OFF\" && connectionStates) {\n            availableHeight -= 28 * sizeMultiplier;\n        }\n\n        const totalTextHeight = lineHeight * lines.length;\n        let startY = padding + (availableHeight - totalTextHeight) / 2 + (lineHeight / 2);\n        if (startY < padding + (lineHeight / 2)) {\n            startY = padding + (lineHeight / 2);\n        }\n\n        canvasContext.fillStyle = textColor;\n        canvasContext.textAlign = \"center\";\n        canvasContext.textBaseline = \"middle\";\n        canvasContext.font = font;\n\n        for (let i = 0; i < lines.length; i++) {\n            const line = lines[i];\n            if (line) {\n                canvasContext.fillText(line, canvasWidth / 2, startY + (i * lineHeight));\n            }\n        }\n\n        if (connectionIconSetting !== \"OFF\" && connectionStates) {\n            renderConnectionStatusIcon({\n                canvas: canvas,\n                canvasContext: canvasContext,\n                state: connectionState,\n                color: textColor,\n                sizeMultiplier: sizeMultiplier,\n                position: connectionIconSetting,\n                connectionStates: connectionStates\n            });\n        }\n    }\n\n    function renderTickerCanvas(params) {\n        const canvas = params.canvas;\n        const canvasContext = params.canvasContext;\n        const settings = params.settings || {};\n        const values = params.values || {};\n        const context = params.context;\n        const connectionStates = params.connectionStates;\n        const connectionState = params.connectionState;\n        const dataStateRaw = params.dataState || \"live\";\n        const infoMessage = params.infoMessage || \"\";\n        const lastValidTimestamp = params.lastValidTimestamp || values.lastUpdated || null;\n\n        const canvasWidth = canvas.width;\n        const canvasHeight = canvas.height;\n        const sizeMultiplier = getCanvasSizeMultiplier(canvasWidth, canvasHeight);\n\n        const textPadding = 10 * sizeMultiplier;\n\n        const pair = settings[\"pair\"];\n        const pairDisplay = settings[\"title\"] || values[\"pairDisplay\"] || values[\"pair\"] || pair || \"\";\n        const multiplier = settings[\"multiplier\"] || 1;\n        const priceFormat = settings[\"priceFormat\"] || \"compact\";\n\n        function parseNumberSetting(value, fallback) {\n            const parsed = parseFloat(value);\n            if (isNaN(parsed) || parsed <= 0) {\n                return fallback;\n            }\n            return parsed;\n        }\n\n        function parseDigitsSetting(value, fallback) {\n            const parsed = parseInt(value, 10);\n            if (isNaN(parsed) || parsed < 0) {\n                return fallback;\n            }\n            return parsed;\n        }\n\n        const digits = parseDigitsSetting(settings[\"digits\"], 2);\n        const highLowDigits = parseDigitsSetting(settings[\"highLowDigits\"], digits);\n        const baseFontSize = parseNumberSetting(settings[\"fontSizeBase\"], 25);\n        const priceFontSize = parseNumberSetting(settings[\"fontSizePrice\"], baseFontSize * 35 / 25);\n        const highLowFontSize = parseNumberSetting(settings[\"fontSizeHighLow\"], baseFontSize);\n        const changeFontSize = parseNumberSetting(settings[\"fontSizeChange\"], baseFontSize * 19 / 25);\n        const defaultBackgroundColor = settings[\"backgroundColor\"] || \"#000000\";\n        const defaultTextColor = settings[\"textColor\"] || \"#ffffff\";\n        let backgroundColor = defaultBackgroundColor;\n        let textColor = defaultTextColor;\n        const effectiveConnectionState = connectionState || values.connectionState || null;\n\n        const priceValue = typeof values.last === \"number\" && Number.isFinite(values.last) ? values.last : null;\n        const highValue = typeof values.high === \"number\" && Number.isFinite(values.high) ? values.high : null;\n        const lowValue = typeof values.low === \"number\" && Number.isFinite(values.low) ? values.low : null;\n        const changeDailyPercentValue = typeof values.changeDailyPercent === \"number\" && Number.isFinite(values.changeDailyPercent)\n            ? values.changeDailyPercent\n            : null;\n        const changePercent = changeDailyPercentValue !== null ? changeDailyPercentValue * 100 : null;\n\n        const dataState = typeof dataStateRaw === \"string\" ? dataStateRaw.toLowerCase() : \"live\";\n        // Add subtle dot for stale/missing so frozen price is explained.\n        const degradedColor = dataState === \"stale\"\n            ? \"#f6a623\"\n            : dataState === \"missing\"\n                ? \"#d9534f\"\n                : null;\n\n        // Alerts may swap colors; do this before color rules so expressions see alert palette.\n        const alertEvaluation = alertManager.evaluateAlert({\n            context: context,\n            settings: settings,\n            values: values,\n            backgroundColor: backgroundColor,\n            textColor: textColor\n        });\n\n        const alert = alertEvaluation.alertMode;\n        backgroundColor = alertEvaluation.backgroundColor;\n        textColor = alertEvaluation.textColor;\n\n        // Color rules read both values and palette (support `alert ? '#ff0000' : defaultBackgroundColor`).\n        const baseColorContext = expressionEvaluator.buildContext(values, {\n            alert: alert,\n            backgroundColor: backgroundColor,\n            textColor: textColor,\n            defaultBackgroundColor: defaultBackgroundColor,\n            defaultTextColor: defaultTextColor\n        });\n\n        if (settings[\"backgroundColorRule\"]) {\n            // Allow expressions to repaint background (e.g. change %); log but continue on errors.\n            try {\n                const result = colorRuleEvaluator.evaluate(settings[\"backgroundColorRule\"], baseColorContext);\n                const stringResult = String(result || \"\").trim();\n                if (stringResult) {\n                    backgroundColor = stringResult;\n                    baseColorContext.backgroundColor = backgroundColor;\n                }\n            } catch (err) {\n                console.error(\"Error evaluating backgroundColorRule\", {\n                    context: context,\n                    expression: settings[\"backgroundColorRule\"],\n                    values: values,\n                    error: err instanceof Error ? err.message : err\n                });\n            }\n        }\n        if (settings[\"textColorRule\"]) {\n            try {\n                baseColorContext.textColor = textColor;\n                const result = colorRuleEvaluator.evaluate(settings[\"textColorRule\"], baseColorContext);\n                const stringResult = String(result || \"\").trim();\n                if (stringResult) {\n                    textColor = stringResult;\n                    baseColorContext.textColor = textColor;\n                }\n            } catch (err) {\n                console.error(\"Error evaluating textColorRule\", {\n                    context: context,\n                    expression: settings[\"textColorRule\"],\n                    values: values,\n                    error: err instanceof Error ? err.message : err\n                });\n            }\n        }\n\n        canvasContext.clearRect(0, 0, canvasWidth, canvasHeight);\n        canvasContext.fillStyle = backgroundColor;\n        canvasContext.fillRect(0, 0, canvasWidth, canvasHeight);\n\n        const font = settings[\"font\"] || \"Lato\";\n        const baseFont = (baseFontSize * sizeMultiplier) + \"px \" + font;\n        canvasContext.font = baseFont;\n        canvasContext.fillStyle = textColor;\n        canvasContext.textAlign = \"left\";\n        canvasContext.textBaseline = \"alphabetic\";\n\n        const pairBaselineY = 25 * sizeMultiplier;\n        let pairTextX = textPadding;\n        // Degraded dot stays visible even under alert colors so user knows data is frozen.\n        if (degradedColor) {\n            const indicatorRadius = 5 * sizeMultiplier;\n            const indicatorCenterX = textPadding + indicatorRadius;\n            const indicatorCenterY = pairBaselineY - (baseFontSize * sizeMultiplier * 0.4);\n            canvasContext.beginPath();\n            canvasContext.fillStyle = degradedColor;\n            canvasContext.arc(indicatorCenterX, indicatorCenterY, indicatorRadius, 0, Math.PI * 2);\n            canvasContext.fill();\n            canvasContext.fillStyle = textColor;\n            pairTextX += (indicatorRadius * 2) + (6 * sizeMultiplier);\n        }\n\n        if (pairDisplay) {\n            canvasContext.fillText(pairDisplay, pairTextX, pairBaselineY);\n        }\n\n        if (dataState === \"stale\") {\n            const staleLabelBase = infoMessage ? infoMessage.toUpperCase() : \"STALE\";\n            const staleTime = formatTimestampForDisplay(lastValidTimestamp);\n            const staleLabel = staleTime ? (staleLabelBase + \" \u2022 \" + staleTime) : staleLabelBase;\n            const staleFontSizePx = Math.max(14, baseFontSize * 0.6) * sizeMultiplier;\n            canvasContext.font = staleFontSizePx + \"px \" + font;\n            canvasContext.fillStyle = degradedColor || textColor;\n            canvasContext.fillText(staleLabel, pairTextX, pairBaselineY + staleFontSizePx + (4 * sizeMultiplier));\n            canvasContext.font = baseFont;\n            canvasContext.fillStyle = textColor;\n        }\n\n        const shouldDisplayDetails = dataState !== \"missing\";\n\n        if (!shouldDisplayDetails) {\n            const messageText = infoMessage ? infoMessage.toUpperCase() : \"NO DATA\";\n            const messageFontSizePx = Math.max(26, baseFontSize) * sizeMultiplier;\n            const messageFont = \"bold \" + messageFontSizePx + \"px \" + font;\n            canvasContext.font = messageFont;\n            canvasContext.fillStyle = degradedColor || textColor;\n            const previousAlign = canvasContext.textAlign;\n            const previousBaseline = canvasContext.textBaseline;\n            canvasContext.textAlign = \"center\";\n            canvasContext.textBaseline = \"middle\";\n            const maxWidth = canvasWidth - (textPadding * 2);\n            const messageLines = splitMessageIntoLines(canvasContext, messageText, maxWidth, messageFont);\n            const lineHeight = messageFontSizePx * 1.1;\n            const totalHeight = lineHeight * messageLines.length;\n            const startY = (canvasHeight - totalHeight) / 2 + (lineHeight / 2);\n            for (let i = 0; i < messageLines.length; i++) {\n                canvasContext.fillText(messageLines[i], canvasWidth / 2, startY + (i * lineHeight));\n            }\n            canvasContext.textAlign = previousAlign;\n            canvasContext.textBaseline = previousBaseline;\n            canvasContext.font = baseFont;\n            canvasContext.fillStyle = textColor;\n        } else {\n            const priceText = priceValue !== null\n                ? formatters.getRoundedValue(priceValue, digits, multiplier, priceFormat)\n                : \"--\";\n            canvasContext.font = \"bold \" + (priceFontSize * sizeMultiplier) + \"px \" + font;\n            canvasContext.fillStyle = textColor;\n            canvasContext.textAlign = \"left\";\n            canvasContext.fillText(priceText, textPadding, 60 * sizeMultiplier);\n\n            if (settings[\"displayHighLow\"] !== \"off\") {\n                canvasContext.font = (highLowFontSize * sizeMultiplier) + \"px \" + font;\n                canvasContext.fillStyle = textColor;\n                canvasContext.textAlign = \"left\";\n                const lowText = lowValue !== null\n                    ? formatters.getRoundedValue(lowValue, highLowDigits, multiplier, priceFormat)\n                    : \"--\";\n                canvasContext.fillText(lowText, textPadding, 90 * sizeMultiplier);\n\n                canvasContext.textAlign = \"right\";\n                const highText = highValue !== null\n                    ? formatters.getRoundedValue(highValue, highLowDigits, multiplier, priceFormat)\n                    : \"--\";\n                canvasContext.fillText(highText, canvasWidth - textPadding, 135 * sizeMultiplier);\n            }\n\n            if (settings[\"displayDailyChange\"] !== \"off\" && changePercent !== null) {\n                const originalFillColor = canvasContext.fillStyle;\n                let digitsPercent = 2;\n                if (Math.abs(changePercent) >= 100) {\n                    digitsPercent = 0;\n                } else if (Math.abs(changePercent) >= 10) {\n                    digitsPercent = 1;\n                }\n                let changePercentDisplay = formatters.getRoundedValue(changePercent, digitsPercent, 1, \"plain\");\n                if (changePercent > 0) {\n                    changePercentDisplay = \"+\" + changePercentDisplay;\n                    canvasContext.fillStyle = \"green\";\n                } else if (changePercent < 0) {\n                    canvasContext.fillStyle = \"red\";\n                } else {\n                    canvasContext.fillStyle = originalFillColor;\n                }\n\n                canvasContext.font = (changeFontSize * sizeMultiplier) + \"px \" + font;\n                canvasContext.textAlign = \"right\";\n                canvasContext.fillText(changePercentDisplay, canvasWidth - textPadding, 90 * sizeMultiplier);\n\n                canvasContext.fillStyle = originalFillColor;\n            }\n\n            if (settings[\"displayHighLowBar\"] !== \"off\" && highValue !== null && lowValue !== null && priceValue !== null) {\n                const lineY = 104 * sizeMultiplier;\n                const padding = 5 * sizeMultiplier;\n                const lineWidth = 6 * sizeMultiplier;\n\n                const range = highValue - lowValue;\n                const percent = range > 0\n                    ? Math.min(Math.max((priceValue - lowValue) / range, 0), 1)\n                    : DEFAULT_PRICE_BAR_POSITION;\n                const lineLength = canvasWidth - (padding * 2);\n                const cursorPositionX = padding + Math.round(lineLength * percent);\n\n                const triangleSide = 12 * sizeMultiplier;\n\n                canvasContext.beginPath();\n                canvasContext.moveTo(padding, lineY);\n                canvasContext.lineTo(cursorPositionX, lineY);\n                canvasContext.lineWidth = lineWidth;\n                canvasContext.strokeStyle = \"green\";\n                canvasContext.stroke();\n\n                canvasContext.beginPath();\n                canvasContext.moveTo(cursorPositionX, lineY);\n                canvasContext.lineTo(canvasWidth - padding, lineY);\n                canvasContext.lineWidth = lineWidth;\n                canvasContext.strokeStyle = \"red\";\n                canvasContext.stroke();\n\n                drawPriceCursorTriangle(canvasContext, cursorPositionX, lineY, triangleSide, textColor);\n            }\n        }\n\n        const connectionIconSetting = (settings[\"displayConnectionStatusIcon\"] || \"OFF\").toUpperCase();\n        if (connectionIconSetting !== \"OFF\") {\n            renderConnectionStatusIcon({\n                canvas: canvas,\n                canvasContext: canvasContext,\n                state: effectiveConnectionState,\n                color: textColor,\n                sizeMultiplier: sizeMultiplier,\n                position: connectionIconSetting,\n                connectionStates: connectionStates\n            });\n        }\n    }\n\n    function renderCandlesCanvas(params) {\n    const canvas = params.canvas;\n    const canvasContext = params.canvasContext;\n    const settings = params.settings || {};\n    const candlesNormalized = params.candlesNormalized || [];\n    const connectionStates = params.connectionStates;\n    const connectionState = params.connectionState;\n\n    const canvasWidth = canvas.width;\n    const canvasHeight = canvas.height;\n    const sizeMultiplier = getCanvasSizeMultiplier(canvasWidth, canvasHeight);\n\n    const padding = 10 * sizeMultiplier;\n    const connectionIconSetting = (settings[\"displayConnectionStatusIcon\"] || \"OFF\").toUpperCase();\n    const effectiveConnectionState = connectionState || null;\n    const backgroundColor = settings[\"backgroundColor\"] || \"#000000\";\n    const textColor = settings[\"textColor\"] || \"#ffffff\";\n\n    // Upstream outputs normalized candles; keep newest N for 144x144 readability.\n    const candlesToDisplay = candlesNormalized.slice(-getCandlesDisplayCount(settings));\n    const candleCount = candlesToDisplay.length;\n    const paddingWidth = canvasWidth - (2 * padding);\n    const paddingHeight = canvasHeight - (2 * padding);\n    // Divide available width by candle count; wick/body ratios keep visuals balanced at small sizes.\n    const candleWidth = candleCount > 0 ? paddingWidth / candleCount : paddingWidth;\n    const wickWidth = Math.max(2 * sizeMultiplier, candleWidth * 0.15);\n    const bodyWidth = Math.max(4 * sizeMultiplier, candleWidth * 0.6);\n\n    canvasContext.clearRect(0, 0, canvasWidth, canvasHeight);\n    canvasContext.fillStyle = backgroundColor;\n    canvasContext.fillRect(0, 0, canvasWidth, canvasHeight);\n\n    const font = settings[\"font\"] || \"Lato\";\n    canvasContext.font = (15 * sizeMultiplier) + \"px \" + font;\n    canvasContext.fillStyle = textColor;\n\n    const interval = settings[\"candlesInterval\"] || \"1h\";\n    canvasContext.textAlign = \"right\";\n    canvasContext.fillText(interval, canvasWidth - (10 * sizeMultiplier), canvasHeight - (5 * sizeMultiplier));\n\n    candlesToDisplay.forEach(function (candleNormalized) {\n        const xPosition = Math.round(padding + Math.round(candleNormalized.timePercent * paddingWidth));\n        const highPosition = Math.round(padding + paddingHeight - (candleNormalized.highPercent * paddingHeight));\n        const lowPosition = Math.round(padding + paddingHeight - (candleNormalized.lowPercent * paddingHeight));\n\n        canvasContext.beginPath();\n        canvasContext.moveTo(xPosition, highPosition);\n        canvasContext.lineTo(xPosition, lowPosition);\n        canvasContext.lineWidth = wickWidth;\n        // Classic green/up vs red/down; compare percents so flat candles still consistent.\n        canvasContext.strokeStyle = candleNormalized.closePercent > candleNormalized.openPercent ? \"#1c9900\" : \"#a10\";\n        canvasContext.stroke();\n\n        const openPosition = Math.round(padding + paddingHeight - (candleNormalized.openPercent * paddingHeight));\n        const closePosition = Math.round(padding + paddingHeight - (candleNormalized.closePercent * paddingHeight));\n        const candleMin = Math.min(openPosition, closePosition);\n        const candleMax = Math.max(openPosition, closePosition);\n\n        canvasContext.beginPath();\n        canvasContext.rect(\n            Math.round(xPosition - bodyWidth / 2),\n            candleMin,\n            Math.round(bodyWidth),\n            Math.max(1, candleMax - candleMin)\n        );\n        canvasContext.fillStyle = candleNormalized.closePercent > candleNormalized.openPercent ? \"#1c9900\" : \"#a10\";\n        canvasContext.fill();\n    });\n\n    if (connectionIconSetting !== \"OFF\") {\n        renderConnectionStatusIcon({\n            canvas: canvas,\n            canvasContext: canvasContext,\n            state: effectiveConnectionState,\n            color: textColor,\n            sizeMultiplier: sizeMultiplier,\n            position: connectionIconSetting,\n            connectionStates: connectionStates\n        });\n    }\n    }\n\n    return {\n        getCanvasSizeMultiplier,\n        getCandlesDisplayCount,\n        renderConnectionStatusIcon,\n        renderTickerCanvas,\n        renderCandlesCanvas,\n        renderMessageCanvas\n    };\n}));\n\ninterface CanvasRendererGlobalRoot extends Record<string, unknown> {\n    CryptoTickerCanvasRenderer?: unknown;\n    CryptoTickerAlertManager?: unknown;\n    CryptoTickerFormatters?: unknown;\n    CryptoTickerExpressionEvaluator?: unknown;\n    CryptoTickerConstants?: Record<string, unknown>;\n}\n", "/* eslint-disable @typescript-eslint/ban-ts-comment, no-var, @typescript-eslint/no-this-alias */\n// @ts-nocheck\n\n/* global DestinationEnum, CryptoTickerConstants */\n\nconst defaultConfig = {\n    \"tProxyBase\": \"https://tproxyv8.opendle.com\",\n    \"fallbackPollIntervalMs\": 60000,\n    \"staleTickerTimeoutMs\": 6 * 60 * 1000,\n    \"messages\": {\n        \"loading\": \"LOADING...\",\n        \"stale\": \"STALE\",\n        \"noData\": \"NO DATA\",\n        \"misconfigured\": \"INVALID PAIR\",\n        \"conversionError\": \"CONVERSION ERROR\"\n    }\n};\n\nfunction requireOrNull(modulePath) {\n    if (typeof require === \"function\") {\n        try {\n            return require(modulePath);\n        } catch (err) {\n            return null;\n        }\n    }\n\n    return null;\n}\n\nfunction resolveGlobalConfig() {\n    if (typeof CryptoTickerConfig !== \"undefined\") {\n        return CryptoTickerConfig;\n    }\n\n    return null;\n}\n\n// Normalize PI/runtime currency values; accept null/number so stale settings do not crash.\nfunction normalizeCurrencyCode(value) {\n    if (typeof value === \"string\") {\n        const trimmed = value.trim();\n        if (trimmed.length === 0) {\n            return null;\n        }\n        return trimmed.toUpperCase();\n    }\n\n    if (value === null || value === undefined) {\n        return null;\n    }\n\n    return String(value).trim().toUpperCase() || null;\n}\n\nconst moduleConfig = requireOrNull(\"./config\");\nconst constantsModule = requireOrNull(\"./constants\");\nconst globalConfig = resolveGlobalConfig();\nconst runtimeConfig = Object.assign({}, defaultConfig, moduleConfig || {}, globalConfig || {});\nconst constants = constantsModule || (typeof CryptoTickerConstants !== \"undefined\" ? CryptoTickerConstants : null) || {};\nconst TIMESTAMP_SECONDS_THRESHOLD = typeof constants.TIMESTAMP_SECONDS_THRESHOLD === \"number\" ? constants.TIMESTAMP_SECONDS_THRESHOLD : 9999999999;\nconst tProxyBase = runtimeConfig.tProxyBase;\nconst DEFAULT_MESSAGE_CONFIG = defaultConfig.messages;\nconst messageConfig = Object.assign({}, DEFAULT_MESSAGE_CONFIG, (runtimeConfig && runtimeConfig.messages) || {});\n\nconst subscriptionKeyModule = requireOrNull(\"./providers/subscription-key\");\nconst globalProviders = typeof CryptoTickerProviders !== \"undefined\" ? CryptoTickerProviders : null;\n// Local fallback keeps subscription key format stable when provider bundle missing (tests/preview).\nconst buildSubscriptionKey = subscriptionKeyModule && subscriptionKeyModule.buildSubscriptionKey\n    ? subscriptionKeyModule.buildSubscriptionKey\n    : globalProviders && typeof globalProviders.buildSubscriptionKey === \"function\"\n        ? globalProviders.buildSubscriptionKey\n        : function (exchange, symbol, fromCurrency, toCurrency) {\n            const exchangePart = exchange || \"\";\n            const symbolPart = symbol || \"\";\n            const fromPart = fromCurrency || null;\n            const toPart = toCurrency || null;\n            let convertPart = \"\";\n            if (fromPart !== null && toPart !== null && fromPart !== toPart) {\n                convertPart = \"__\" + fromPart + \"_\" + toPart;\n            }\n            return exchangePart + \"__\" + symbolPart + convertPart;\n        };\n\nconst connectionStatesModule = requireOrNull(\"./providers/connection-states\");\nconst connectionStates = connectionStatesModule || (typeof CryptoTickerConnectionStates !== \"undefined\" ? CryptoTickerConnectionStates : {\n    LIVE: \"live\",\n    DETACHED: \"detached\",\n    BACKUP: \"backup\",\n    BROKEN: \"broken\"\n});\n\nconst canvasRendererModule = requireOrNull(\"./canvas-renderer\");\nconst alertManagerModule = requireOrNull(\"./alert-manager\");\nconst formattersModule = requireOrNull(\"./formatters\");\nconst tickerStateModule = requireOrNull(\"./ticker-state\");\nconst settingsManagerModule = requireOrNull(\"./settings-manager\");\n\nconst canvasRenderer = canvasRendererModule || (typeof CryptoTickerCanvasRenderer !== \"undefined\" ? CryptoTickerCanvasRenderer : null);\nconst alertManager = alertManagerModule || (typeof CryptoTickerAlertManager !== \"undefined\" ? CryptoTickerAlertManager : null);\nconst formatters = formattersModule || (typeof CryptoTickerFormatters !== \"undefined\" ? CryptoTickerFormatters : null);\nconst tickerState = tickerStateModule || (typeof CryptoTickerState !== \"undefined\" ? CryptoTickerState : null);\nconst settingsManager = settingsManagerModule || (typeof CryptoTickerSettingsManager !== \"undefined\" ? CryptoTickerSettingsManager : null);\n\nif (!canvasRenderer || !alertManager || !formatters || !tickerState || !settingsManager) {\n    throw new Error(\"CryptoTicker dependencies are not available\");\n}\n\nlet loggingEnabled = false;\nlet websocket = null;\nlet canvas;\nlet canvasContext;\nconst screenshotMode = false; // Allows rendering the canvas in an external preview\n\nconst CONVERSION_CACHE_TTL_MS = 60 * 60 * 1000;\nlet providerRegistrySingleton = null;\n\nconst applyDefaultSettings = settingsManager.applyDefaultSettings;\nconst defaultSettings = settingsManager.defaultSettings;\nconst getDefaultSettingsSnapshot = settingsManager.getDefaultSettingsSnapshot;\nconst settingsSchema = settingsManager.settingsSchema;\n\nconst tickerAction = {\n    type: \"com.courcelle.cryptoticker.ticker\",\n    log: function (...data) {\n        if (loggingEnabled) {\n            console.log(...data);\n        }\n    },\n\n    setContextConnectionState: function (context, state) {\n        tickerState.setConnectionState(context, state);\n    },\n\n    getContextConnectionState: function (context) {\n        return tickerState.getConnectionState(context);\n    },\n\n    clearContextConnectionState: function (context) {\n        tickerState.clearConnectionState(context);\n    },\n\n    getProviderRegistry: function () {\n        if (!providerRegistrySingleton) {\n            // Lazy-load to avoid pulling heavy providers in PI/tests yet keep runtime behavior.\n            const providerRegistryModule = requireOrNull(\"./providers/provider-registry\");\n            const ProviderRegistryClass = providerRegistryModule && providerRegistryModule.ProviderRegistry\n                ? providerRegistryModule.ProviderRegistry\n                : globalProviders && globalProviders.ProviderRegistry\n                    ? globalProviders.ProviderRegistry\n                    : null;\n\n            if (!ProviderRegistryClass) {\n                throw new Error(\"ProviderRegistry is not available\");\n            }\n\n            providerRegistrySingleton = new ProviderRegistryClass({\n                baseUrl: tProxyBase,\n                logger: (...args) => {\n                    this.log(...args);\n                },\n                fallbackPollIntervalMs: runtimeConfig.fallbackPollIntervalMs,\n                staleTickerTimeoutMs: runtimeConfig.staleTickerTimeoutMs,\n                binanceRestBaseUrl: runtimeConfig.binanceRestBaseUrl,\n                binanceWsBaseUrl: runtimeConfig.binanceWsBaseUrl,\n                binanceSymbolOverrides: runtimeConfig.binanceSymbolOverrides,\n                bitfinexRestBaseUrl: runtimeConfig.bitfinexRestBaseUrl,\n                bitfinexWsBaseUrl: runtimeConfig.bitfinexWsBaseUrl,\n                bitfinexSymbolOverrides: runtimeConfig.bitfinexSymbolOverrides\n            });\n        }\n\n        return providerRegistrySingleton;\n    },\n\n    websocketSend: function (object) {\n        if (websocket) {\n            websocket.send(object);\n        }\n    },\n\n    onKeyDown: async function (context, settings, _coordinates, _userDesiredState) {\n        // State machine between modes\n        switch (settings.mode) {\n            case \"candles\":\n                settings.mode = \"ticker\";\n                break;\n            case \"ticker\":\n            default:\n                if (alertManager.shouldDisarmOnKeyPress(context)) {\n                    alertManager.disarmAlert(context);\n                } else {\n                    // Switch mode by default\n                    settings.mode = \"candles\";\n                }\n                break;\n        }\n\n        // Update settings with current mode\n        this.websocketSend(JSON.stringify({\n            \"event\": \"setSettings\",\n            \"context\": context,\n            \"payload\": settings\n        }));\n\n        this.refreshTimer(context, settings);\n        // this.updateTicker(context, settings); // Already done by refreshTimer\n    },\n    onKeyUp: function (_context, _settings, _coordinates, _userDesiredState) {\n    },\n    onWillAppear: async function (context, settings, _coordinates) {\n        this.initCanvas();\n\n        this.refreshTimer(context, settings);\n        // this.updateTicker(context, settings); // Already done by refreshTimer\n    },\n    refreshTimers: async function () {\n        // Make sure everybody is connected\n        tickerState.forEachContext((details) => {\n            this.refreshTimer(\n                details[\"context\"],\n                details[\"settings\"]\n            );\n        });\n    },\n    refreshTimer: async function (context, settings) {\n        const normalizedSettings = this.refreshSettings(context, settings);\n\n        // Force refresh of the display (in case WebSockets doesn't work and to update the candles)\n        this.updateTicker(context, normalizedSettings);\n    },\n    connect: function () {\n        const registry = this.getProviderRegistry();\n        if (registry && typeof registry.ensureAllConnections === \"function\") {\n            registry.ensureAllConnections();\n        }\n    },\n    updateSubscription: function (context, settings) {\n        const exchange = settings[\"exchange\"];\n        const pair = settings[\"pair\"];\n        const currencies = this.resolveConversionCurrencies(settings[\"fromCurrency\"], settings[\"currency\"]);\n        const subscriptionKey = this.getSubscriptionContextKey(exchange, pair, currencies.from, null);\n        const current = tickerState.getSubscription(context);\n        if (current && current.key === subscriptionKey) {\n            return current;\n        }\n\n        if (current && typeof current.unsubscribe === \"function\") {\n            // Tear down previous sub; lingering sockets pile up when switching pairs.\n            try {\n                current.unsubscribe();\n            } catch (err) {\n                this.log(\"Error unsubscribing from provider\", err);\n            }\n            tickerState.clearSubscription(context);\n            this.clearContextConnectionState(context);\n        }\n\n        const registry = this.getProviderRegistry();\n        const provider = registry.getProvider(exchange);\n        const params = {\n            exchange: exchange,\n            symbol: pair,\n            fromCurrency: currencies.from,\n            toCurrency: null\n        };\n        const self = this;\n\n        try {\n            const handle = provider.subscribeTicker(params, {\n                onData: async function (tickerValues) {\n                    const details = tickerState.getContextDetails(context);\n                    if (!details) {\n                        return;\n                    }\n\n                    self.setContextConnectionState(details.context, tickerValues && tickerValues.connectionState);\n                    try {\n                        const convertedTicker = await self.convertTickerValues(\n                            tickerValues,\n                            details.settings && details.settings.fromCurrency,\n                            details.settings && details.settings.currency\n                        );\n                        await self.updateCanvas(details.context, details.settings, convertedTicker);\n                    } catch (err) {\n                        self.log(\"Error updating canvas from subscription\", err);\n                    }\n                },\n                onError: function (error) {\n                    self.log(\"Provider subscription error\", error);\n                    self.setContextConnectionState(context, connectionStates.BROKEN);\n                }\n            });\n\n            tickerState.setSubscription(context, {\n                key: subscriptionKey,\n                unsubscribe: handle && typeof handle.unsubscribe === \"function\" ? handle.unsubscribe : function () {},\n                providerId: provider.getId ? provider.getId() : null\n            });\n            return tickerState.getSubscription(context);\n        } catch (err) {\n            this.log(\"Error subscribing to provider\", err);\n        }\n\n        return null;\n    },\n    refreshSettings: function (context, settings) {\n        return settingsManager.refreshSettings({\n            context: context,\n            settings: settings,\n            updateSubscription: (normalizedSettings) => {\n                this.updateSubscription(context, normalizedSettings);\n            }\n        });\n    },\n    getSubscriptionContextKey: function (exchange, pair, fromCurrency, toCurrency) {\n        return buildSubscriptionKey(exchange, pair, fromCurrency, toCurrency);\n    },\n\n    // Decide if conversion needed; empty/same override \u2192 `to:null`.\n    resolveConversionCurrencies: function (fromCurrency, toCurrency) {\n        const resolvedFrom = normalizeCurrencyCode(fromCurrency) || \"USD\";\n        const resolvedTo = normalizeCurrencyCode(toCurrency);\n\n        if (!resolvedTo || resolvedTo === resolvedFrom) {\n            return {\n                from: resolvedFrom,\n                to: null\n            };\n        }\n\n        return {\n            from: resolvedFrom,\n            to: resolvedTo\n        };\n    },\n\n    getConversionRate: async function (fromCurrency, toCurrency) {\n        const from = normalizeCurrencyCode(fromCurrency);\n        const to = normalizeCurrencyCode(toCurrency);\n\n        if (!from || !to || from === to) {\n            return 1;\n        }\n\n        const key = from + \"_\" + to;\n        const now = Date.now();\n        const cacheEntry = tickerState.getOrCreateConversionRateEntry(key);\n\n        if (typeof cacheEntry.rate === \"number\" && cacheEntry.rate > 0 && cacheEntry.fetchedAt && (now - cacheEntry.fetchedAt) < CONVERSION_CACHE_TTL_MS) {\n            return cacheEntry.rate;\n        }\n\n        if (cacheEntry.promise) {\n            // Reuse pending fetch; swallow failure so next call can retry.\n            try {\n                return await cacheEntry.promise;\n            } catch (promiseErr) {\n                this.log(\"Conversion rate promise failed\", promiseErr);\n            }\n        }\n\n        const fetchFn = typeof fetch === \"function\" ? fetch : null;\n        if (!fetchFn) {\n            return typeof cacheEntry.rate === \"number\" && cacheEntry.rate > 0 ? cacheEntry.rate : 1;\n        }\n\n        const baseUrl = (tProxyBase || \"\").replace(/\\/$/, \"\");\n        if (!baseUrl) {\n            return typeof cacheEntry.rate === \"number\" && cacheEntry.rate > 0 ? cacheEntry.rate : 1;\n        }\n\n        const url = baseUrl + \"/api/ticker/json/currency/\" + encodeURIComponent(from) + \"/\" + encodeURIComponent(to);\n        const self = this;\n\n        cacheEntry.promise = (async function () {\n            try {\n                const response = await fetchFn(url);\n                if (!response || !response.ok) {\n                    throw new Error(\"Conversion rate response not ok\");\n                }\n\n                const json = await response.json();\n                const parsedRate = json && json.rate !== undefined ? parseFloat(json.rate) : NaN;\n                if (!parsedRate || !isFinite(parsedRate) || parsedRate <= 0) {\n                    throw new Error(\"Invalid conversion rate\");\n                }\n\n                cacheEntry.rate = parsedRate;\n                cacheEntry.fetchedAt = Date.now();\n                return parsedRate;\n            } catch (err) {\n                self.log(\"Error fetching conversion rate\", err);\n                throw err;\n            } finally {\n                delete cacheEntry.promise;\n            }\n        })();\n\n        try {\n            return await cacheEntry.promise;\n        } catch (err) {\n            if (typeof cacheEntry.rate === \"number\" && cacheEntry.rate > 0) {\n                return cacheEntry.rate;\n            }\n\n            // Keep legacy fallback: surface cached rate else hardcode 1 so old flows keep working.\n            return 1;\n        }\n    },\n\n    convertTickerValues: async function (tickerValues, fromCurrency, toCurrency) {\n        if (!tickerValues) {\n            return tickerValues;\n        }\n\n        const currencies = this.resolveConversionCurrencies(fromCurrency, toCurrency);\n        if (!currencies.to) {\n            return tickerValues;\n        }\n\n        const existingTo = normalizeCurrencyCode(tickerValues.conversionToCurrency);\n        const existingFrom = normalizeCurrencyCode(tickerValues.conversionFromCurrency);\n        if (existingTo === currencies.to && existingFrom === currencies.from) {\n            return tickerValues;\n        }\n\n        let rate = null;\n        try {\n            rate = await this.getConversionRate(currencies.from, currencies.to);\n        } catch (err) {\n            this.log(\"Conversion rate error\", err);\n            return this.createConversionErrorValues(tickerValues);\n        }\n\n        if (!rate || !isFinite(rate) || rate <= 0) {\n            return this.createConversionErrorValues(tickerValues);\n        }\n\n        return this.applyTickerConversion(tickerValues, rate, currencies.from, currencies.to);\n    },\n\n    // Strip numeric fields when conversion fails so UI shows metadata + error text only.\n    createConversionErrorValues: function (tickerValues) {\n        const errorValues = Object.assign({}, tickerValues);\n        const numericKeys = [\n            \"last\",\n            \"high\",\n            \"low\",\n            \"open\",\n            \"close\",\n            \"changeDaily\",\n            \"changeDailyPercent\",\n            \"volume\"\n        ];\n\n        for (let i = 0; i < numericKeys.length; i++) {\n            const key = numericKeys[i];\n            if (Object.prototype.hasOwnProperty.call(errorValues, key)) {\n                delete errorValues[key];\n            }\n        }\n\n        errorValues.conversionRate = null;\n        errorValues.conversionError = true;\n        return errorValues;\n    },\n\n    // Multiply numeric fields; parse strings providers sometimes emit.\n    applyTickerConversion: function (tickerValues, rate, fromCurrency, toCurrency) {\n        if (!tickerValues || typeof tickerValues !== \"object\") {\n            return tickerValues;\n        }\n\n        const converted = Object.assign({}, tickerValues);\n        const keysToConvert = [\n            \"last\",\n            \"high\",\n            \"low\",\n            \"open\",\n            \"close\",\n            \"changeDaily\"\n        ];\n\n        for (let i = 0; i < keysToConvert.length; i++) {\n            const key = keysToConvert[i];\n            if (!Object.prototype.hasOwnProperty.call(tickerValues, key)) {\n                continue;\n            }\n\n            const value = tickerValues[key];\n            const numeric = typeof value === \"number\" ? value : parseFloat(value);\n            if (!isNaN(numeric)) {\n                converted[key] = numeric * rate;\n            }\n        }\n\n        converted.conversionRate = rate;\n        converted.conversionFromCurrency = fromCurrency;\n        converted.conversionToCurrency = toCurrency;\n\n        return converted;\n    },\n\n    // Clone candles before scaling price/quote volume; keep shared cache untouched.\n    applyCandlesConversion: function (candles, rate) {\n        if (!Array.isArray(candles) || !rate || !isFinite(rate) || rate <= 0) {\n            return candles;\n        }\n\n        return candles.map(function (candle) {\n            if (!candle || typeof candle !== \"object\") {\n                return candle;\n            }\n\n            const converted = Object.assign({}, candle);\n            const priceKeys = [\"open\", \"close\", \"high\", \"low\"];\n            for (let i = 0; i < priceKeys.length; i++) {\n                const key = priceKeys[i];\n                if (!Object.prototype.hasOwnProperty.call(candle, key)) {\n                    continue;\n                }\n                const value = candle[key];\n                const numeric = typeof value === \"number\" ? value : parseFloat(value);\n                if (!isNaN(numeric)) {\n                    converted[key] = numeric * rate;\n                }\n            }\n\n            if (Object.prototype.hasOwnProperty.call(candle, \"volumeQuote\")) {\n                const volumeValue = candle[\"volumeQuote\"];\n                const volumeNumeric = typeof volumeValue === \"number\" ? volumeValue : parseFloat(volumeValue);\n                if (!isNaN(volumeNumeric)) {\n                    converted[\"volumeQuote\"] = volumeNumeric * rate;\n                }\n            }\n\n            return converted;\n        });\n    },\n\n    updateTicker: async function (context, settings) {\n        const pair = settings[\"pair\"];\n        const values = await this.getTickerValue(pair, settings.currency, settings.exchange, settings.fromCurrency);\n        this.setContextConnectionState(context, values && values.connectionState);\n        this.updateCanvas(context, settings, values);\n    },\n    initCanvas: function () {\n        canvas = document.getElementById(\"ticker\");\n        canvasContext = canvas.getContext(\"2d\");\n    },\n    updateCanvas: async function (context, settings, tickerValues) {\n        this.log(\"updateCanvas\", context, settings, tickerValues);\n\n        const connectionState = (tickerValues && tickerValues.connectionState) || this.getContextConnectionState(context);\n\n        switch (settings.mode) {\n            case \"candles\": {\n                const candleValues = await this.getCandles(settings);\n                this.updateCanvasCandles(context, settings, candleValues, connectionState);\n                break;\n            }\n            case \"ticker\":\n            default:\n                this.updateCanvasTicker(context, settings, tickerValues, connectionState);\n                break;\n        }\n    },\n    /**\n     * Normalize raw ticker payload: parse numeric fields, flag basic metadata, align timestamp.\n     *\n     * @param {Object} values Raw ticker payload.\n     * @returns {{values:Object, hasAny:boolean, hasCritical:boolean, timestamp:(number|null)}} Parsed summary consumed by renderers.\n     */\n    sanitizeTickerValues: function (values) {\n        if (!values || typeof values !== \"object\") {\n            return {\n                values: {},\n                hasAny: false,\n                hasCritical: false,\n                timestamp: null\n            };\n        }\n\n        const sanitized = Object.assign({}, values);\n\n        function parseNumeric(value, fallback, roundInteger) {\n            if (typeof value === \"number\" && Number.isFinite(value)) {\n                return roundInteger ? Math.round(value) : value;\n            }\n            if (typeof value === \"string\") {\n                const trimmed = value.trim();\n                if (trimmed) {\n                    const parsed = roundInteger ? parseInt(trimmed, 10) : parseFloat(trimmed);\n                    if (!isNaN(parsed) && Number.isFinite(parsed)) {\n                        return roundInteger ? Math.round(parsed) : parsed;\n                    }\n                }\n            }\n            return fallback;\n        }\n\n        const last = parseNumeric(values.last, null, false);\n        if (last === null) {\n            delete sanitized.last;\n        } else {\n            sanitized.last = last;\n        }\n\n        const numericDefaults = {\n            high: null,\n            low: null,\n            volume: 0,\n            changeDaily: 0,\n            changeDailyPercent: 0\n        };\n\n        Object.keys(numericDefaults).forEach((key) => {\n            const fallback = numericDefaults[key];\n            const parsed = parseNumeric(values[key], fallback, false);\n            if (parsed === null || parsed === undefined || !Number.isFinite(parsed)) {\n                delete sanitized[key];\n            } else if (parsed === fallback && values[key] === undefined) {\n                if (fallback === null) {\n                    delete sanitized[key];\n                } else {\n                    sanitized[key] = fallback;\n                }\n            } else {\n                sanitized[key] = parsed;\n            }\n        });\n\n        const timestampCandidateKeys = [\"lastUpdated\", \"timestamp\", \"time\", \"updatedAt\"];\n        let timestamp = null;\n        for (let i = 0; i < timestampCandidateKeys.length; i++) {\n            const key = timestampCandidateKeys[i];\n            const hasValueKey = Object.prototype.hasOwnProperty.call(values, key);\n            if (!hasValueKey) {\n                continue;\n            }\n            const parsed = parseNumeric(values[key], null, true);\n            if (parsed !== null && parsed !== undefined) {\n                const normalizedTimestamp = parsed > TIMESTAMP_SECONDS_THRESHOLD ? parsed : parsed * 1000;\n                timestamp = normalizedTimestamp;\n                sanitized.lastUpdated = normalizedTimestamp;\n                break;\n            }\n        }\n\n        // Ensure we do not keep NaN/undefined strings for textual fields\n        if (typeof sanitized.pairDisplay !== \"string\") {\n            delete sanitized.pairDisplay;\n        }\n\n        return {\n            values: sanitized,\n            hasAny: Object.keys(values).length > 0,\n            hasCritical: last !== null,\n            timestamp: timestamp\n        };\n    },\n    buildTickerRenderContext: function (context, settings, rawValues, connectionState) {\n        const sanitizedResult = this.sanitizeTickerValues(rawValues);\n        const sanitizedValues = sanitizedResult.values;\n        const now = Date.now();\n        let dataState = \"missing\";\n        let infoMessage = null;\n        let lastValidTimestamp = null;\n        let renderValues = sanitizedValues;\n        let degradedReason = null;\n\n        const effectiveConnectionState = connectionState || sanitizedValues.connectionState || null;\n        const cached = tickerState.getLastGoodTicker(context);\n        const isBroken = effectiveConnectionState === connectionStates.BROKEN;\n        const liveLikeStates = [connectionStates.LIVE, connectionStates.BACKUP, connectionStates.DETACHED];\n        const isConnectionLiveLike = liveLikeStates.indexOf(effectiveConnectionState) !== -1;\n        // Detect exchange \"zero\" payloads; mark misconfig only when link degraded so we still recover on open.\n        const looksLikeEmptyTicker = sanitizedResult.hasCritical\n            && Number.isFinite(sanitizedValues.last)\n            && sanitizedValues.last === 0\n            && (!Number.isFinite(sanitizedValues.high) || sanitizedValues.high === 0)\n            && (!Number.isFinite(sanitizedValues.low) || sanitizedValues.low === 0)\n            && (!Number.isFinite(sanitizedValues.volume) || sanitizedValues.volume === 0)\n            && sanitizedResult.timestamp === null;\n        const treatAsMisconfigured = sanitizedResult.hasCritical && (!isConnectionLiveLike || isBroken) && looksLikeEmptyTicker;\n        const hasConversionError = !!sanitizedValues.conversionError;\n\n        if (hasConversionError) {\n            dataState = \"missing\";\n            renderValues = Object.assign({}, sanitizedValues);\n            const fallbackPair = settings[\"title\"] || sanitizedValues[\"pairDisplay\"] || sanitizedValues[\"pair\"] || settings[\"pair\"] || \"\";\n            if (!renderValues.pairDisplay && fallbackPair) {\n                renderValues.pairDisplay = fallbackPair;\n            }\n            infoMessage = messageConfig.conversionError || \"CONVERSION ERROR\";\n            degradedReason = \"conversion_error\";\n\n            return {\n                values: renderValues,\n                dataState: dataState,\n                infoMessage: infoMessage,\n                lastValidTimestamp: lastValidTimestamp,\n                degradedReason: degradedReason\n            };\n        }\n\n        if (sanitizedResult.hasCritical && !isBroken && !treatAsMisconfigured) {\n            const recordedAt = sanitizedResult.timestamp || now;\n            sanitizedValues.lastUpdated = recordedAt;\n            tickerState.setLastGoodTicker(context, sanitizedValues, recordedAt);\n            lastValidTimestamp = recordedAt;\n            dataState = \"live\";\n            renderValues = Object.assign({}, sanitizedValues);\n        } else if (cached && cached.values && typeof cached.values === \"object\" && Number.isFinite(cached.values.last)) {\n            dataState = \"stale\";\n            renderValues = Object.assign({}, cached.values);\n            lastValidTimestamp = cached.timestamp;\n            if (!renderValues.lastUpdated) {\n                renderValues.lastUpdated = cached.timestamp;\n            }\n            infoMessage = messageConfig.stale;\n            degradedReason = sanitizedResult.hasAny ? \"partial\" : \"missing\";\n        } else {\n            dataState = \"missing\";\n            renderValues = Object.assign({}, sanitizedValues);\n            const fallbackPair = settings[\"title\"] || sanitizedValues[\"pairDisplay\"] || sanitizedValues[\"pair\"] || settings[\"pair\"] || \"\";\n            if (!renderValues.pairDisplay && fallbackPair) {\n                renderValues.pairDisplay = fallbackPair;\n            }\n\n            if (treatAsMisconfigured || isBroken) {\n                infoMessage = messageConfig.misconfigured || messageConfig.noData;\n                degradedReason = \"misconfigured\";\n            } else {\n                infoMessage = messageConfig.loading;\n                degradedReason = sanitizedResult.hasAny ? \"partial\" : \"none\";\n            }\n        }\n\n        if (!infoMessage && dataState === \"missing\") {\n            infoMessage = isBroken ? (messageConfig.misconfigured || messageConfig.noData) : messageConfig.loading;\n        }\n        if (!infoMessage && dataState === \"live\" && isBroken) {\n            infoMessage = messageConfig.misconfigured || messageConfig.noData;\n        }\n        if (!infoMessage && dataState === \"stale\" && !messageConfig.stale) {\n            infoMessage = \"STALE\";\n        }\n\n        return {\n            values: renderValues,\n            dataState: dataState,\n            infoMessage: infoMessage,\n            lastValidTimestamp: lastValidTimestamp,\n            degradedReason: degradedReason\n        };\n    },\n    displayMessage: function (context, message, options) {\n        this.initCanvas();\n\n        const opts = options || {};\n        const normalizedSettings = applyDefaultSettings(opts.settings || {});\n        const backgroundColor = opts.backgroundColor || normalizedSettings.backgroundColor || \"#000000\";\n        const textColor = opts.textColor || normalizedSettings.textColor || \"#ffffff\";\n        const font = opts.font || normalizedSettings.font || \"Lato\";\n        const fontSize = opts.fontSize || null;\n        const desiredConnectionState = opts.connectionState || null;\n        const displayConnectionIcon = opts.displayConnectionStatusIcon || normalizedSettings.displayConnectionStatusIcon || \"OFF\";\n\n        if (desiredConnectionState) {\n            this.setContextConnectionState(context, desiredConnectionState);\n        }\n\n        canvasRenderer.renderMessageCanvas({\n            canvas: canvas,\n            canvasContext: canvasContext,\n            message: message,\n            backgroundColor: backgroundColor,\n            textColor: textColor,\n            font: font,\n            fontSize: fontSize,\n            connectionStates: connectionStates,\n            connectionState: desiredConnectionState || this.getContextConnectionState(context),\n            displayConnectionStatusIcon: displayConnectionIcon\n        });\n\n        this.sendCanvas(context);\n    },\n    getCanvasSizeMultiplier: function(canvasWidth, canvasHeight) {\n        return canvasRenderer.getCanvasSizeMultiplier(canvasWidth, canvasHeight);\n    },\n    getCandlesDisplayCount: function (settings) {\n        return canvasRenderer.getCandlesDisplayCount(settings);\n    },\n    updateCanvasTicker: function (context, settings, values, connectionState) {\n        this.log(\"updateCanvasTicker\", context, settings, values);\n\n        const renderContext = this.buildTickerRenderContext(context, settings, values, connectionState);\n\n        canvasRenderer.renderTickerCanvas({\n            canvas: canvas,\n            canvasContext: canvasContext,\n            settings: settings,\n            values: renderContext.values,\n            context: context,\n            connectionStates: connectionStates,\n            connectionState: connectionState || (values && values.connectionState) || null,\n            dataState: renderContext.dataState,\n            infoMessage: renderContext.infoMessage,\n            lastValidTimestamp: renderContext.lastValidTimestamp,\n            degradedReason: renderContext.degradedReason\n        });\n\n        this.sendCanvas(context);\n    },\n    updateCanvasCandles: function (context, settings, candlesNormalized, connectionState) {\n        this.log(\"updateCanvasCandles\", context, settings, candlesNormalized);\n\n        canvasRenderer.renderCandlesCanvas({\n            canvas: canvas,\n            canvasContext: canvasContext,\n            settings: settings,\n            candlesNormalized: candlesNormalized,\n            connectionStates: connectionStates,\n            connectionState: connectionState || this.getContextConnectionState(context)\n        });\n\n        this.sendCanvas(context);\n    },\n    sendCanvas: function (context) {\n        var json = {\n            \"event\": \"setImage\",\n            \"context\": context,\n            \"payload\": {\n                \"image\": canvas.toDataURL(),\n                \"target\": DestinationEnum.HARDWARE_AND_SOFTWARE\n            }\n        }\n\n        this.websocketSend(JSON.stringify(json));\n    },\n    getRoundedValue: function (value, digits, multiplier, format) {\n        return formatters.getRoundedValue(value, digits, multiplier, format);\n    },\n\n    getTickerValue: async function (pair, toCurrency, exchange, fromCurrency) {\n        const registry = this.getProviderRegistry();\n        const provider = registry.getProvider(exchange);\n        const currencies = this.resolveConversionCurrencies(fromCurrency, toCurrency);\n        const params = {\n            exchange: exchange,\n            symbol: pair,\n            fromCurrency: currencies.from,\n            toCurrency: null\n        };\n\n        try {\n            const ticker = await provider.fetchTicker(params);\n            const convertedTicker = await this.convertTickerValues(ticker, currencies.from, currencies.to);\n            const finalTicker = convertedTicker || ticker;\n            if (finalTicker && typeof finalTicker === \"object\" && !finalTicker.connectionState) {\n                finalTicker.connectionState = connectionStates.DETACHED;\n            }\n            return finalTicker;\n        } catch (err) {\n            this.log(\"Error fetching ticker\", err);\n            const subscriptionKey = this.getSubscriptionContextKey(exchange, pair, currencies.from, null);\n            if (provider && typeof provider.getCachedTicker === \"function\") {\n                const cached = provider.getCachedTicker(subscriptionKey);\n                if (cached) {\n                    const convertedCached = await this.convertTickerValues(cached, currencies.from, currencies.to);\n                    const finalCached = convertedCached || cached;\n                    if (finalCached && !finalCached.connectionState) {\n                        finalCached.connectionState = connectionStates.BACKUP;\n                    }\n                    return finalCached;\n                }\n            }\n\n            return {\n                \"changeDaily\": 0,\n                \"changeDailyPercent\": 0,\n                \"last\": 0,\n                \"volume\": 0,\n                \"high\": 0,\n                \"low\": 0,\n                \"pair\": pair,\n                \"pairDisplay\": pair,\n                \"connectionState\": connectionStates.BROKEN\n            };\n        }\n    },\n    getCandles: async function (settings) {\n        this.log(\"getCandles\");\n\n        const exchange = settings[\"exchange\"];\n        const pair = settings[\"pair\"];\n        const interval = this.convertCandlesInterval(settings[\"candlesInterval\"] || \"1h\");\n        const candlesCount = this.getCandlesDisplayCount(settings);\n        const currencies = this.resolveConversionCurrencies(settings[\"fromCurrency\"], settings[\"currency\"]);\n        const cacheCurrencyKey = currencies.to || currencies.from || \"\";\n        const cacheKey = exchange + \"_\" + pair + \"_\" + interval + \"_\" + candlesCount + \"_\" + cacheCurrencyKey;\n        let cache = tickerState.getCandlesCacheEntry(cacheKey);\n        if (!cache) {\n            cache = {};\n            tickerState.setCandlesCacheEntry(cacheKey, cache);\n        }\n        const now = new Date().getTime();\n        const t = \"time\";\n        const c = \"candles\";\n\n        // Refresh at most every minute\n        if (cache[t] && cache[t] > now - 60 * 1000) {\n            return cache[c];\n        }\n\n        const fetchParams = {\n            exchange: exchange,\n            symbol: pair,\n            interval: interval,\n            limit: 24\n        };\n\n        let rawCandles = null;\n\n        try {\n            const registry = this.getProviderRegistry();\n            const provider = registry.getProvider(exchange);\n            if (provider && typeof provider.fetchCandles === \"function\") {\n                rawCandles = await provider.fetchCandles(fetchParams);\n            }\n\n            if (!Array.isArray(rawCandles)) {\n                rawCandles = null;\n            }\n\n            if (rawCandles === null) {\n                const genericProvider = registry.getGenericProvider();\n                if (genericProvider && typeof genericProvider.fetchCandles === \"function\") {\n                    rawCandles = await genericProvider.fetchCandles(fetchParams);\n                    if (!Array.isArray(rawCandles)) {\n                        rawCandles = null;\n                    }\n                }\n            }\n        } catch (err) {\n            this.log(\"Error fetching provider candles\", err);\n            rawCandles = null;\n        }\n\n        if (rawCandles === null) {\n            try {\n                const response = await fetch(\n                    tProxyBase + \"/api/Candles/json/\" + exchange + \"/\" + pair + \"/\" + interval + \"?limit=24\"\n                );\n                const responseJson = await response.json();\n                if (responseJson && Array.isArray(responseJson.candles)) {\n                    rawCandles = responseJson.candles;\n                }\n            } catch (e) {\n                this.log(\"Error fetching candles from proxy\", e);\n            }\n        }\n\n        if (!Array.isArray(rawCandles)) {\n            return cache[c] || [];\n        }\n\n        const preparedCandles = this.prepareCandlesForDisplay(rawCandles, candlesCount);\n\n        let candlesForDisplay = preparedCandles;\n        if (currencies.to) {\n            try {\n                const rate = await this.getConversionRate(currencies.from, currencies.to);\n                if (rate && isFinite(rate) && rate > 0) {\n                    candlesForDisplay = this.applyCandlesConversion(preparedCandles, rate);\n                }\n            } catch (err) {\n                this.log(\"Conversion rate error for candles\", err);\n            }\n        }\n\n        const val = this.getCandlesNormalized(candlesForDisplay);\n        cache[t] = now;\n        cache[c] = val;\n        return cache[c];\n    },\n    convertCandlesInterval: function (interval) {\n        switch (interval) {\n            case \"1m\":\n                return \"MINUTES_1\";\n            case \"5m\":\n                return \"MINUTES_5\";\n            case \"15m\":\n                return \"MINUTES_15\";\n            case \"1h\":\n                return \"HOURS_1\";\n            case \"6h\":\n                return \"HOURS_6\";\n            case \"12h\":\n                return \"HOURS_12\";\n            case \"1D\":\n                return \"DAYS_1\";\n            case \"7D\":\n                return \"DAYS_7\";\n            case \"1M\":\n                return \"MONTHS_1\";\n        }\n\n        return interval;\n    },\n    prepareCandlesForDisplay: function (candles, maxCount) {\n        if (!Array.isArray(candles) || candles.length === 0) {\n            return [];\n        }\n\n        const sanitized = candles\n            .map(function (candle) {\n                if (!candle) {\n                    return null;\n                }\n\n                let ts = candle[\"ts\"];\n                if (typeof ts !== \"number\") {\n                    const openTime = candle[\"openTime\"];\n                    if (openTime) {\n                        const parsedOpenTime = Date.parse(openTime);\n                        if (!isNaN(parsedOpenTime)) {\n                            ts = Math.floor(parsedOpenTime / 1000);\n                        }\n                    }\n                }\n\n                if (typeof ts !== \"number\" || isNaN(ts)) {\n                    return null;\n                }\n\n                return {\n                    candle: candle,\n                    ts: ts\n                };\n            })\n            .filter(function (item) {\n                return item !== null;\n            })\n            .sort(function (a, b) {\n                return a.ts - b.ts;\n            })\n            .map(function (item) {\n                if (item.candle[\"ts\"] === item.ts) {\n                    return item.candle;\n                }\n\n                return Object.assign({}, item.candle, {\n                    \"ts\": item.ts\n                });\n            });\n\n        if (typeof maxCount === \"number\" && maxCount > 0 && sanitized.length > maxCount) {\n            return sanitized.slice(-maxCount);\n        }\n\n        return sanitized;\n    },\n    getCandlesNormalized: function (candles) {\n        let min = Number.POSITIVE_INFINITY;\n        let max = 0;\n        let volumeMin = Number.POSITIVE_INFINITY;\n        let volumeMax = 0;\n        let timeMin = Number.POSITIVE_INFINITY;\n        let timeMax = 0;\n        (candles || []).forEach(function (candle) {\n            timeMin = Math.min(timeMin, candle[\"ts\"]);\n            timeMax = Math.max(timeMax, candle[\"ts\"]);\n\n            // Some shouldn't be necessary, but doesn't cost much and avoid mistakes\n            min = Math.min(min, candle[\"open\"]);\n            min = Math.min(min, candle[\"close\"]);\n            min = Math.min(min, candle[\"high\"]);\n            min = Math.min(min, candle[\"low\"]);\n\n            max = Math.max(max, candle[\"open\"]);\n            max = Math.max(max, candle[\"close\"]);\n            max = Math.max(max, candle[\"high\"]);\n            max = Math.max(max, candle[\"low\"]);\n\n            volumeMin = Math.min(volumeMin, candle[\"volumeQuote\"]);\n            volumeMax = Math.max(volumeMax, candle[\"volumeQuote\"]);\n        });\n\n        const jThis = this;\n        const candlesNormalized = [];\n        (candles || []).forEach(function (candle) {\n            candlesNormalized.push({\n                timePercent: jThis.normalizeValue(candle[\"ts\"], timeMin, timeMax),\n                openPercent: jThis.normalizeValue(candle[\"open\"], min, max),\n                closePercent: jThis.normalizeValue(candle[\"close\"], min, max),\n                highPercent: jThis.normalizeValue(candle[\"high\"], min, max),\n                lowPercent: jThis.normalizeValue(candle[\"low\"], min, max),\n                volumePercent: jThis.normalizeValue(candle[\"volumeQuote\"], volumeMin, volumeMax)\n            });\n        });\n\n        this.log(\"getCandlesNormalized\", candlesNormalized);\n        return candlesNormalized;\n    },\n    normalizeValue: function (value, min, max) {\n        return formatters.normalizeValue(value, min, max);\n    },\n};\n\ntickerAction.defaultSettings = defaultSettings;\ntickerAction.applyDefaultSettings = applyDefaultSettings;\ntickerAction.getDefaultSettings = function () {\n    return getDefaultSettingsSnapshot();\n};\ntickerAction.settingsSchema = settingsSchema;\n\nfunction connectElgatoStreamDeckSocket(inPort, pluginUUID, inRegisterEvent, _inApplicationInfo, _inActionInfo) {\n    // Open the web socket\n    websocket = new WebSocket(\"ws://127.0.0.1:\" + inPort);\n\n    function registerPlugin(inPluginUUID) {\n        var json = {\n            \"event\": inRegisterEvent,\n            \"uuid\": inPluginUUID\n        };\n\n        tickerAction.websocketSend(JSON.stringify(json));\n    };\n\n    websocket.onopen = function () {\n        // WebSocket is connected, send message\n        registerPlugin(pluginUUID);\n    };\n\n    websocket.onmessage = async function (evt) {\n        //this.log(\"Message received\", evt);\n\n        // Received message from Stream Deck\n        var jsonObj = JSON.parse(evt.data);\n        const event = jsonObj[\"event\"];\n        const context = jsonObj[\"context\"];\n\n        const jsonPayload = jsonObj[\"payload\"] || {};\n        let settingsPayload = jsonPayload[\"settings\"];\n        if (!settingsPayload && event === \"sendToPlugin\") {\n            settingsPayload = jsonPayload;\n        }\n\n        let settings = settingsPayload;\n        const coordinates = jsonPayload[\"coordinates\"];\n        const userDesiredState = jsonPayload[\"userDesiredState\"];\n        // const title = jsonPayload[\"title\"];\n\n        const ignoredEvents = [\n            \"deviceDidConnect\",\n            \"titleParametersDidChange\"\n        ];\n\n        if (ignoredEvents.indexOf(event) >= 0) {\n            // Ignore\n            return;\n        }\n\n        if (settings != null) {\n            settings = applyDefaultSettings(settings);\n        }\n\n        if (event == \"keyDown\") {\n            await tickerAction.onKeyDown(context, settings, coordinates, userDesiredState);\n        } else if (event == \"keyUp\") {\n            await tickerAction.onKeyUp(context, settings, coordinates, userDesiredState);\n        } else if (event == \"willAppear\") {\n            await tickerAction.onWillAppear(context, settings, coordinates);\n        } else if (settings != null) {\n            //this.log(\"Received settings\", settings);\n            tickerAction.refreshSettings(context, settings);\n            tickerAction.refreshTimer(context, settings);\n            // tickerAction.updateTicker(context, settings);    // Already done by refreshTimer\n        }\n    };\n\n    websocket.onclose = function () {\n        // Websocket is closed\n    };\n\n    setInterval(async function () {\n        await tickerAction.refreshTimers();\n    }, 300000);\n};\n\nif (screenshotMode) {\n    loggingEnabled = true;\n    tickerAction.connect();\n\n    const settings = applyDefaultSettings({\n        digits: 0,\n        pair: \"LTCUSD\",\n        mode: \"ticker\"\n    });\n\n    const context = \"test\";\n    const coordinates = {\n        \"column\": 1,\n        \"row\": 1\n    };\n    const userDesiredState = null;\n\n    setTimeout(function() {\n        tickerAction.onWillAppear(context, settings, coordinates);\n\n        setInterval(async function() {\n            await tickerAction.onKeyDown(context, settings, coordinates, userDesiredState);\n            await tickerAction.onKeyUp(context, settings, coordinates, userDesiredState);\n        }, 5000);\n    }, 1000);\n}\n\nif (typeof module !== \"undefined\") {\n    module.exports = tickerAction;\n}\n\nif (typeof window !== \"undefined\") {\n    window.connectElgatoStreamDeckSocket = connectElgatoStreamDeckSocket;\n}\n", "import '../signalr_v8.0.0.min.js';\nimport '../config';\nimport '../providers/connection-states';\nimport '../providers/subscription-key';\nimport '../providers/provider-interface';\nimport '../providers/ticker-subscription-manager';\nimport '../providers/generic-provider';\nimport '../default-settings';\nimport '../providers/websocket-connection-pool';\nimport '../providers/binance-provider';\nimport '../providers/bitfinex-provider';\nimport '../providers/yfinance-provider';\nimport '../providers/provider-registry';\nimport '../formatters';\nimport '../expression-evaluator';\nimport '../alert-manager';\nimport '../ticker-state';\nimport '../settings-manager';\nimport '../canvas-renderer';\nimport '../ticker';\n\nexport {};\n", "/* global tickerAction */\n\nconst DEFAULT_RANGE = 1;\nconst SAMPLE_CANDLE_COUNT = 20;\nconst CANDLE_MARGIN_FACTOR = 0.05;\n\nconst globalScope = typeof window !== \"undefined\" ? window : globalThis;\nconst defaultsModule = typeof CryptoTickerDefaults !== \"undefined\" ? CryptoTickerDefaults : null;\nconst previewTickerAction = typeof tickerAction !== \"undefined\" ? tickerAction : null;\n\nif (!previewTickerAction) {\n    throw new Error(\"Ticker action dependency is missing for the preview page\");\n}\n\nconst previewBaseDefaults = defaultsModule && typeof defaultsModule.getDefaultSettings === \"function\"\n    ? defaultsModule.getDefaultSettings()\n    : (typeof previewTickerAction.getDefaultSettings === \"function\"\n        ? previewTickerAction.getDefaultSettings()\n        : {});\n\nconst applyPreviewDefaults = defaultsModule && typeof defaultsModule.applyDefaults === \"function\"\n    ? function (partial) {\n        return defaultsModule.applyDefaults(partial || {});\n    }\n    : function (partial) {\n        return Object.assign({}, previewBaseDefaults, partial || {});\n    };\n\npreviewTickerAction.sendCanvas = function () {};\n\nfunction assignCanvasGlobals(canvasElement) {\n    globalScope.canvas = canvasElement;\n    globalScope.canvasContext = canvasElement.getContext(\"2d\");\n\n    if (previewTickerAction && typeof previewTickerAction.initCanvas === \"function\" && typeof document !== \"undefined\") {\n        const originalGetElementById = document.getElementById.bind(document);\n        document.getElementById = function (id) {\n            if (id === \"ticker\") {\n                return canvasElement;\n            }\n            return originalGetElementById(id);\n        };\n\n        try {\n            previewTickerAction.initCanvas();\n        } finally {\n            document.getElementById = originalGetElementById;\n        }\n    }\n}\n\nfunction generateSampleCandles(values) {\n    const candles = [];\n    const high = values.high || 0;\n    const low = values.low || 0;\n    const volume = values.volume || 0;\n    const range = high - low || DEFAULT_RANGE;\n    const count = SAMPLE_CANDLE_COUNT;\n    for (let i = 0; i < count; i++) {\n        const open = low + (range * i) / count;\n        const close = low + (range * (i + 0.5)) / count;\n        const highVal = Math.max(open, close) + range * CANDLE_MARGIN_FACTOR;\n        const lowVal = Math.min(open, close) - range * CANDLE_MARGIN_FACTOR;\n        candles.push({\n            ts: i,\n            open: open,\n            close: close,\n            high: highVal,\n            low: lowVal,\n            volumeQuote: volume\n        });\n    }\n    return previewTickerAction.getCandlesNormalized(candles);\n}\n\nasync function loadPreviews() {\n    const usePrecomputed = document.getElementById(\"precomputedToggle\").checked;\n    const response = await fetch(\"/dev/options.json\");\n    const options = await response.json();\n    const container = document.getElementById(\"previews\");\n    container.innerHTML = \"\";\n    for (let index = 0; index < options.length; index++) {\n        const opt = options[index];\n        const group = document.createElement(\"div\");\n        group.className = \"preview-group\";\n        const canvasRow = document.createElement(\"div\");\n        canvasRow.className = \"canvas-row\";\n        const tickerCanvas = document.createElement(\"canvas\");\n        tickerCanvas.width = 288;\n        tickerCanvas.height = 288;\n        canvasRow.appendChild(tickerCanvas);\n        const candleCanvas = document.createElement(\"canvas\");\n        candleCanvas.width = 288;\n        candleCanvas.height = 288;\n        canvasRow.appendChild(candleCanvas);\n        group.appendChild(canvasRow);\n        const label = document.createElement(\"div\");\n        label.className = \"label\";\n        label.textContent = opt.name || \"Option \" + (index + 1);\n        group.appendChild(label);\n        const settings = applyPreviewDefaults(opt.settings);\n        const settingsDiv = document.createElement(\"pre\");\n        settingsDiv.className = \"settings\";\n        settingsDiv.textContent = JSON.stringify(settings, null, 4);\n        group.appendChild(settingsDiv);\n        container.appendChild(group);\n\n        assignCanvasGlobals(tickerCanvas);\n        let tickerValues;\n        if (usePrecomputed && opt.values) {\n            tickerValues = opt.values;\n        } else {\n            tickerValues = await previewTickerAction.getTickerValue(\n                settings.pair,\n                settings.currency,\n                settings.exchange\n            );\n        }\n        previewTickerAction.updateCanvasTicker(index + \"-ticker\", settings, tickerValues, tickerValues && tickerValues.connectionState);\n\n        assignCanvasGlobals(candleCanvas);\n        let candleValues;\n        if (usePrecomputed && opt.values) {\n            candleValues = generateSampleCandles(opt.values);\n        } else {\n            candleValues = await previewTickerAction.getCandles(settings);\n        }\n        previewTickerAction.updateCanvasCandles(index + \"-candles\", settings, candleValues, tickerValues && tickerValues.connectionState);\n    }\n}\n\ndocument.getElementById(\"precomputedToggle\").addEventListener(\"change\", loadPreviews);\nloadPreviews();\n"],
  "mappings": "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",
  "names": ["t", "e", "s", "i", "n", "r", "o", "h", "c", "a", "l", "u", "self", "self", "exports", "self", "self", "self", "exports", "global", "exports", "n2", "args", "argCount", "n1", "f", "i", "index", "div", "exports", "exports", "globalScope", "exports", "tickerAction", "self"]
}
